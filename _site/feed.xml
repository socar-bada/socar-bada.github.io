<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-01-22T18:01:23+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">SOCAR Tech Blog</title><subtitle>쏘카 기술 블로그</subtitle><author><name>SOCAR</name></author><entry><title type="html">CES 2021을 앞두며 다시 돌아보는 CES 2020 참가 후기</title><link href="http://localhost:4000/dev/2021/01/13/ces2020-review.html" rel="alternate" type="text/html" title="CES 2021을 앞두며 다시 돌아보는 CES 2020 참가 후기" /><published>2021-01-13T00:00:00+09:00</published><updated>2021-01-13T00:00:00+09:00</updated><id>http://localhost:4000/dev/2021/01/13/ces2020-review</id><content type="html" xml:base="http://localhost:4000/dev/2021/01/13/ces2020-review.html">&lt;p&gt;매년 기술 트렌드를 소개해주는 소비자 가전 전시회(Consumer Electronics Show, CES)가 2021년 1월 11일 시작되었습니다. 이번엔 작년과 달리, 코로나로 인해 언택트로 행사가 진행됩니다.&lt;/p&gt;

&lt;p&gt;CES 2021 행사를 즐기기 전에, 1년 전인 CES 2020엔 어떤 내용이 있었는지 확인해도 좋을 것 같습니다. 1년 전에는 모빌리티에서 어떤 부분이 소개되었을까요? 현재 1년 전과 비교하면 어떤 느낌일까요?&lt;/p&gt;

&lt;p&gt;–&lt;/p&gt;

&lt;h2 id=&quot;ces-2020&quot;&gt;CES 2020&lt;/h2&gt;

&lt;p&gt;언제부터인가 CES에서 자동차 업체가 등장하기 시작하더니, 이제는 자동차와 하나도 관계없어 보이는 업체들이 자동차를 전시하는 시대가 되었습니다.&lt;/p&gt;

&lt;p&gt;CES 2020에서는 자동차를 넘어 모빌리티를 새롭게 정의하려는 업체들의 시도가 돋보였던 전시회였습니다.&lt;/p&gt;

&lt;p&gt;그럼 CES 2020에서 사람들의 이목을 끈 부스들을 사진과 함께 둘러보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/01.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;진격의-아마존&quot;&gt;진격의 아마존&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/aws_5.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;CES 2020에서 느낀 점은 모빌리티 분야에서 아마존이 매우 강세였다는 점입니다.&lt;/p&gt;

&lt;p&gt;아마존과 많은 부분에서 경쟁 중인 구글은 행사장 외부에 단독 부스는 있었지만 구글 어시스턴트에만 집중하는 모습을 보여줬습니다.&lt;/p&gt;

&lt;p&gt;아마존 알렉사와 달리 구글은 모빌리티나 다른 디바이스에 탑재되어 작동하는 데모가 없었습니다.&lt;/p&gt;

&lt;p&gt;아마존은 부스에 차량까지 전시했는데 사람들의 관심이 글자 그대로 쏟아져 내렸습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/aws_4.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아마존에서 차를 직접 만든 것은 아니고, RIVIAN(https://rivian.com/)라는 EV 제조사의 차를 가지고 나왔는데, 전장 시스템의 많은 부분이 AWS를 이용하는 차라 전시된 것 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/aws_3.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/aws_2.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이외에도 아마존은 자신들의 시스템을 이용한 많은 프로젝트를 전시하고 있었습니다.&lt;/p&gt;

&lt;p&gt;그중에 재미있는 것은, 운전자의 얼굴을 인식해 차량의 설정을 해당 운전자에게 맞춰주는 서비스가 있었습니다.&lt;/p&gt;

&lt;p&gt;차후 쏘카에서도 이런 서비스가 가능하면 좋겠다는 생각이 들더군요.&lt;/p&gt;

&lt;p&gt;이번 CES에서 진격의 아마존이라는 것을 느끼게 된 이유가 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/cam_alexa.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이것은 NEXTBASE(https://www.nextbase.com/en-us/)라는 곳에서 만든 차량용 블랙박스(대시캠)입니다. 아마존 알렉사를 내장해서 녹화 시작/정지나 사진찍기 등의 제어를 처리할수 있었습니다.&lt;/p&gt;

&lt;p&gt;그 외에도 많은 디바이스들이 알렉사를 내장하고 있다는 것을 홍보하고 있었습니다.&lt;/p&gt;

&lt;p&gt;선제를 빼앗긴 구글의 다음 행보가 기대되네요.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;차-말고-다른-걸-보여주고-싶은-차량-제조사-vs-이왕-만드는-김에-차도-만드는-전장-제조사&quot;&gt;차 말고 다른 걸 보여주고 싶은 차량 제조사 vs 이왕 만드는 김에 차도 만드는 전장 제조사&lt;/h3&gt;

&lt;p&gt;기본적으로 가전전시회인 CES에 차량 제조사들이 참가하고 있지만, CES에서 이들이 보이는 모습은 차량 제조사보다 모빌리티의 새로운 컨셉 제시를 많이 했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/hyundai_uber_dron.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그런 대표적인 부스가 드론 버스를 우버와 함께 전시한 현대입니다. 한쪽에서 이것을 타면 어떤 느낌일지 출발부터 도착까지의 VR 체험도 할 수 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ford_2.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ford_3.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ford_1.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;물론 차량 제조사들이 차를 아예 안 들고 나온 것은 아닙니다. 포드의 경우엔 이제 내연기관 차량보다는 전기차와 스마트카에 집중할 것을 선포라도 하는듯한 부스 구성이 보였습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ford_robot.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;라이다를 로봇의 비전인식 시스템으로 사용한 로봇을 데모 시연하고 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ev_byton.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;
&lt;img src=&quot;/img/ces2020-review/ev_fiat_concept2.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;
&lt;img src=&quot;/img/ces2020-review/ev_toyota_concept2.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그 외에 차량 제조사들은 전기차를 기반으로 하지만 새로워진 차량의 전장 구성이나 승객 편의성에 주력한 컨셉 차들을 많이 보여주었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ev_rubicon.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/toyota_busco_3.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ev_ze.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그 외에도 다른 차량 제조사들은 승객 편의성을 강조한 컨셉 카나 시스템을 주로 보여줬습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/toyota_busco_4.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/toyota_busco_5.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Toyota Boshoku의 경우 도요타 그룹에 속한 자동차 부품 제조업체인데, 운전자와 승객의 편의성을 중시한 설계를 소개하는 컨셉 데모를 시연하고 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ev_sony_1.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ev_sony_2.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그래도 이번 CES에서 사람들을 놀라게 한 것은 전기차를 내놓은 소니였습니다.&lt;/p&gt;

&lt;p&gt;소니가 실제로 이 차량을 내놓을지는 모르겠지만, 테슬라와 많은 비교가 되지 않을까 싶더군요.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;무엇을-하든-전기차--안전한-차&quot;&gt;무엇을 하든 전기차 + 안전한 차&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ev_base.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ev_bosch_1.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ev_charger.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;가전 전시회라 그럴 수도 있겠지만, 전시된 모든 차가 전기차였습니다. 그리고 전기차 베이스도 정말 많이 찾아볼 수 있었습니다.&lt;/p&gt;

&lt;p&gt;어쩌면 미래의 전기차는 지금의 차량 제조사들이 만드는 게 아니라 기술력은 있지만 한 번도 차를 만들어보지 않은 회사들이 전기차 베이스 위에 자신들의 할 수 있는 것을 만들어 쌓는 방식이 될지도 모르겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/hyundai_1.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ev_bosch_2.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ev_bus_toyota.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ev_car_lg.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하지만 어떻게 생기고 무엇으로 굴러가든 미래의 차는 분명 지금의 차보다는 안전한 차가 될 것입니다.&lt;/p&gt;

&lt;p&gt;가령 라이다의 경우 자율주행에 쓰이든 안쓰이든 보편적으로 탑재되지 않을까 하는 생각이 들더군요.&lt;/p&gt;

&lt;p&gt;이번 CES에서 라이다 업체만 무려 500개가 참가했다고 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/lidar_kysera.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;교세라의 경우 라이다와 영상을 결합한 제품을 선보였습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ouster_ridar.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;OUSTER는 아예 라이다로 부스 주변을 전부 스캔하는 데모를 시연하고 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/ouster_car.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/adas_mobileye.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/adas_mobileye_1.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ADAS로 유명한 모빌아이의 경우에도 이제는 전방감시를 넘어 그 데이터를 활용하는 방법을 연구 중이었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/pscr_2.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;공공 연구기관의 연구도 지속적으로 이루어지고 있음을 확인할 수 있었습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;미래의-차는-잠깐-휴업-중&quot;&gt;미래의 차는 잠깐 휴업 중&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/mobilty_semina.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3일간의 일정 중 모빌리티 관련 세미나에 참석할 기회가 있을 때마다 최대한 참석했습니다.&lt;/p&gt;

&lt;p&gt;위 사진은 그중 “What’s Next for Vehicle Automation”이라는 세션에 참석한 사진인데요, 진행자가 “몆 년정도 지나야 우리가 미래의 차가 등장할 것이라고 예상하나”라고 질문하는데 모든 참석자가 답변을 회피하더군요.&lt;/p&gt;

&lt;p&gt;참가한 대단히 많은 업체가 자율주행을 이야기하고 있었지만, 실제로 자율주행의 가능성은 상당히 회의적인 이야기가 나오곤 했습니다. 현실 세계가 생각했던 것 이상으로 복잡하다고 그러더군요.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/blackberry_car_2.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다만 제가 보면서 느끼기엔 약간 숨 고르기 느낌이 강했습니다.
이전까지는 ‘어떻게든 해보면 되겠지’라는 느낌이었다면 지금은 뭐가 부족하고 뭐를 채워야 할지 알게 된 느낌입니다.&lt;/p&gt;

&lt;p&gt;데이터를 수집하기 위한 차를 만들고 그 차를 “저고도 인공위성”이라고까지 부르는 모습도 찾아볼 수 있었습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;한국의-위치는-어디쯤일까&quot;&gt;한국의 위치는 어디쯤일까&lt;/h3&gt;

&lt;p&gt;그렇다면 우리 한국의 위치는 어디쯤일까요.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/cube_ai.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;우리의 시도는 아직 제한적으로 보입니다. 자율주행을 연구하고는 있지만, 일단은 자율주차부터 시도해보려 하고 있죠.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/thinkware.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ADAS에도 도전하고 있지만 아직은 블랙박스가 주력입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/parking_cloud.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하지만 우리에게도 장점은 있습니다. 보편화된 기술을 이용한 비즈니스 모델을 만들고 실현시키는데는 확실히 빠릅니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ces2020-review/phantom_drive.jpg&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 이 사진은 팬텀 드라이브라는, 한국인 엔지니어들이 미국에서 창업한 자율주행 제품을 탑재한 제네시스입니다. 실제로 탑승해서 도로 주행까지 체험해봤는데, 사람이 운전하다가 기계로 운전 주체가 바뀌었음에도 눈치채지 못할 정도로 훌륭했었습니다.&lt;/p&gt;

&lt;p&gt;다 시말해 우리에게 부족한 건 기술력이 아니라는 것이겠죠.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;마치며&quot;&gt;마치며&lt;/h3&gt;
&lt;p&gt;CES 2020는 모빌리티 기준에서 숨 고르기 느낌이 강했다는 생각이 듭니다. 새로운 컨셉을 보여주기엔 뭔가 부족했고, 패러다임 시프트를 보여주기엔 이미 다 알고 있는 내용이고 몇몇 업체들이 돋보였지만 이에 대항할 카운터가 없다 보니 쓸쓸해 보이는 원맨쇼 수준이 아니었나 합니다.&lt;/p&gt;

&lt;p&gt;하지만 몇 년 전만 해도 비싼 비용을 자랑하던 기술이 보편적인 기술이 되었고, HD맵 같은 정교화, 그리고 여러 종류의 디바이스들이 온라인 서비스와 결합하여 이뤄내는 시너지와 차량의 안전에 대한 새로운 시도들이 매우 빠른 시간에 보편화 되고 있었습니다.&lt;/p&gt;

&lt;p&gt;CES 2021에도 모빌리티쪽에서 새로운 내용이 나왔습니다. 점점 모빌리티 분야가 발전하고 있는 부분이 느껴집니다. 우리의 모빌리티도 계속 달라지겠죠.&lt;/p&gt;

&lt;p&gt;거기에도 반드시 쏘카가 있을 것입니다!&lt;/p&gt;</content><author><name>spock</name></author><category term="dev" /><category term="conference" /><summary type="html">매년 기술 트렌드를 소개해주는 소비자 가전 전시회(Consumer Electronics Show, CES)가 2021년 1월 11일 시작되었습니다. 이번엔 작년과 달리, 코로나로 인해 언택트로 행사가 진행됩니다.</summary></entry><entry><title type="html">[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자! (2탄)</title><link href="http://localhost:4000/design/2020/09/08/component-02.html" rel="alternate" type="text/html" title="[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자! (2탄)" /><published>2020-09-08T12:00:00+09:00</published><updated>2020-09-08T12:00:00+09:00</updated><id>http://localhost:4000/design/2020/09/08/component-02</id><content type="html" xml:base="http://localhost:4000/design/2020/09/08/component-02.html">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요! 쏘카 &lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/31/component-01.html&quot;&gt;[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자! (1탄)&lt;/a&gt;로 인사드린 샌디(전수빈)입니다. 글을 올린 후 많은 분이 공감해주셔서 너무 뿌듯했는데요. 🥰 이번에는 2탄으로 찾아왔습니다!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;이번-글에서는&quot;&gt;이번 글에서는…&lt;/h3&gt;

&lt;p&gt;지난 글에서는 쏘카에서 컴포넌트가 필요했던 이유와 구축 방법에 대해 소개하며 주로 결과에 관해 이야기 했고, 이번에는 컴포넌트 구축을 하며 겪었던 &lt;strong&gt;어려움과 그 어려움을 해결하기 위해 치열하게 고민했던 경험&lt;/strong&gt;을 나누려 합니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/01.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;혹시, 이전 글을 안 보신 분들은 다소 생소한 정의(Option, Origin, Component Color 등)가 포함되어 있으니 &lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/31/component-01.html&quot;&gt;컴포넌트, 제대로 만들어 쉽게 쓰자! (1탄)&lt;/a&gt;를 읽고 오시는 걸 추천해드려요! 🥰&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-디자인-시스템-필요하죠-but&quot;&gt;1. 디자인 시스템? 필요하죠! But…&lt;/h2&gt;

&lt;p&gt;저희처럼 이미 기존 프로덕트 규모가 어느 정도 있는 상태에서 디자인 시스템을 개발하고, 적용하려면 당연히 &lt;strong&gt;처음부터 시작하는 것보다 훨씬 더 어려움&lt;/strong&gt;을 겪을 수밖에 없습니다. 하면 좋지만, 안 해도 당장 제품에 큰 티가 나지 않으니까요.&lt;/p&gt;

&lt;p&gt;저희도 지금까지 해 온 방식의 불편함과 디자인 시스템의 필요성에 대해서는 모두가 깊이 공감했지만, 당장 급한 일들이 쌓여 있는데 &lt;strong&gt;미래를 위한 투자인 디자인 시스템을 위해 실제로 리소스를 할당 받는 건 또 다른 차원의 이야기&lt;/strong&gt;입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/02.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그렇다고 포기하면 재미없잖아요? 그래서 우리는 일단 부딪혀보면서 차근차근 해결책을 찾기 시작했고, 디자인 시스템을 향한 팀원 모두의 이해, 공감, 지지 덕분에 힘을 내서 방법을 찾고 여기까지 올 수 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1--미안해요-개발할-시간이-없어요&quot;&gt;1) 🙏 미안해요, 개발할 시간이 없어요!&lt;/h3&gt;

&lt;p&gt;앞선 글에서 밝혔듯, 저희 회사에는 정식 디자인 시스템 팀이 따로 있지 않아요. 대신, 각 팀에서 자원해 모인 디자인 시스템 TF 어벤져스가 주도해나가고 있죠. 그래서, &lt;strong&gt;기존 업무와 디자인 시스템 업무를 병행&lt;/strong&gt;할 수밖에 없습니다.&lt;/p&gt;

&lt;p&gt;디자인 시스템 회의는 매주 진행했지만, 막상 회의에서 나온 &lt;strong&gt;안건을 검토할 시간이 절대적으로 부족&lt;/strong&gt;해 별 소득 없이 몇 주가 지나기도 했습니다. 상황이 이렇다 보니, 담당 개발자는 괜히 미안한 마음에 위축되기도 했어요. &lt;strong&gt;사실은 다른 일이 너무 바빠&lt;/strong&gt; 도저히 검토할 시간이 나지 않았던 건데 말이죠. 😥&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/03.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;                                                       알맹이 없는 정기 회의를 끝낸 우리
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-개발하기로-확정했지만-정체된-이유는&quot;&gt;2) 개발하기로 확정했지만, 정체된 이유는?&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;기존 업무 프로세스는&lt;/strong&gt; 배포 주기 단위의 &lt;strong&gt;단기 업무 중심&lt;/strong&gt;인데, &lt;strong&gt;디자인 시스템은 장기 프로젝트라&lt;/strong&gt; 기존 업무 프로세스에서 정상적으로 진행되기 어려움&lt;/li&gt;
  &lt;li&gt;프로젝트가 계획 가능한 작은 단위로 정리되어 있지 않고, &lt;strong&gt;포괄적으로 뭉쳐있음 (“버튼 개발”이 아니라 “컴포넌트 구축하기” 이런 식으로.)&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;1, 2의 이유로 디자인 시스템이 정식 업무로 할당되지 않아, 디자인 시스템에 할애할 &lt;strong&gt;절대적인 시간이 부족&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;프로젝트에 대한 열정과 능력은 모두가 충분했지만, 실제로 수행할 준비가 되어있지 않았습니다. 지금까지 개념적 논의와 연구에 몰두하느라 &lt;strong&gt;프로젝트를 움직일 동력은 미처 준비하지 못했고&lt;/strong&gt; 그 결과가 바로 위와 같은 정체 상황이었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2--우여곡절-컴포넌트-구축-프로세스-만들기&quot;&gt;2. 🛠 우여곡절 컴포넌트 구축 프로세스 만들기&lt;/h2&gt;

&lt;p&gt;현 상황을 깨달은 우리는 해결책을 찾아야 했습니다. 마침, 파운데이션 구축을 마치고 &lt;strong&gt;파운데이션 구축 회고를 하며 무엇이 좋았고, 무엇이 문제인지, 그리고 이를 해결하려면 어떻게 할지&lt;/strong&gt; 머리를 맞대고 고민을 한 끝에 몇 가지 방안을 마련했습니다. &lt;strong&gt;요점은, 디자인 시스템 업무를 기존 프로세스에 맞도록 잘 나누고 정리해서 배포하는 것&lt;/strong&gt;이었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-컴포넌트를-원활하게-개발-하려면&quot;&gt;1) 컴포넌트를 원활하게 개발 하려면?&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;한 버전에 한 개의 컴포넌트 구축&lt;/strong&gt;이 가능한 수준의 범위로 프로젝트를 나눈다.&lt;/li&gt;
  &lt;li&gt;각 프로젝트마다 &lt;strong&gt;디자이너 1명이 PM&lt;/strong&gt;을 맡아 원활하게 이끈다.&lt;/li&gt;
  &lt;li&gt;반복되는 컴포넌트 구축을 위한 &lt;strong&gt;프로세스&lt;/strong&gt;를 만든다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/04.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
컴포넌트 구축 프로세스
&lt;/center&gt;

&lt;p&gt;위의 세 가지 내용을 바탕으로, &lt;strong&gt;효율적인 컴포넌트 구축을 위한 프로세스&lt;/strong&gt;를 만들었습니다. 그냥 보기에는 보편적인 프로젝트의 프로세스와 별 다를 바 없어 보이죠? 그럼, 단계별로 자세히 살펴볼까요!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-기획&quot;&gt;➊ 기획&lt;/h3&gt;

&lt;p&gt;완성된 컴포넌트의 유저는 디자이너와 개발자예요! 이 사실을 기억하며 유저가 사용하기 쉽게 기획을 진행합니다.&lt;/p&gt;

&lt;p&gt;📌   &lt;strong&gt;참고:&lt;/strong&gt; 공개된 쏘카프레임 웹사이트의 타겟은 디자이너, 개발자, 기획자 등등 좀 더 포괄적이지만 여기서는 디자인 시스템을 사용하는 유저를 의미합니다.&lt;/p&gt;

&lt;p&gt;우선 정의/개발하고자 하는 &lt;strong&gt;컴포넌트의 히스토리를 파악&lt;/strong&gt;합니다. 보통 모든 화면을 살펴보면서 해당 컴포넌트가 사용된 부분을 모아 &lt;strong&gt;다양한 케이스를 살펴보며 용도와 용법, 그리고 형태(모양)를 정의&lt;/strong&gt;합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/05.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
여러 화면에서 다양하게 사용중인 버튼
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;개발자를-위한-컴포넌트-가이드&quot;&gt;개발자를 위한 컴포넌트 가이드&lt;/h3&gt;

&lt;p&gt;위 과정을 끝내면, 본격적인 개발을 위한 컴포넌트 개발 가이드를 작성합니다. 이 가이드의 용도는 &lt;strong&gt;개발자가 컴포넌트를 구축할 때 필요한 속성(Origin, Option)과 형태(모양) 정보&lt;/strong&gt;를 담고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/06.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
컴포넌트의 정의를 담은 가이드 
&lt;/center&gt;

&lt;p&gt;컴포넌트의 &lt;strong&gt;속성&lt;/strong&gt;에는 이전 글에서 소개한 &lt;strong&gt;Origin(고정속성)과 Option(가변속성), 이름&lt;/strong&gt;, &lt;strong&gt;컴포넌트 컬러&lt;/strong&gt; 정보를 상세하게 정의해, 모든 개발자가 컴포넌트를 동일한 방식으로 개발할 수 있도록 돕습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/07.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;                                                     컴포넌트의 형태를 담은 가이드 
&lt;/center&gt;

&lt;p&gt;형태적 정의를 담은 가이드에는 &lt;strong&gt;각 컬러테마(Blue, Grey, Coral)와 상태별 옵션 값&lt;/strong&gt;, 그리고 &lt;strong&gt;라이트 모드와 다크 모드&lt;/strong&gt;일 때의 옵션 값을 정리해 전달합니다. 이때, 컴포넌트의 스펙도 잊지 말고 꼭 함께 전달합니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/08.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;
                                                         &lt;center&gt;
컴포넌트 스펙 가이드
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-킥오프&quot;&gt;➋ 킥오프&lt;/h3&gt;

&lt;p&gt;기획이 끝났다면 담당 개발자들을 모아 킥오프를 진행합니다. 저희는 매주 진행하는 디자인 시스템 회의를 활용했습니다. 주로 디자이너 입장에서 작성한 컴포넌트 기획을 들고 가면 &lt;strong&gt;거의 91.8%(?) 수정사항이 생깁니다.&lt;/strong&gt; 그럼 개발자와 함께 소통하며 기획을 적절히 수정합니다.&lt;/p&gt;

&lt;p&gt;개발자의 피드백을 반영하고 킥오프가 끝나면 담당 개발자들은 개발 검토에 들어가게 되는데, 이때 &lt;strong&gt;개발 검토 범위와 기간을 최대한 명확하게 정의&lt;/strong&gt;합니다. (막연하게 “검토하기”라고만 하지 않고, &lt;strong&gt;예상되는 변수가 무엇이고 얼마나 걸릴지&lt;/strong&gt; 논의해야 해요!) 그리고, 이 &lt;strong&gt;개발 검토 또한 하나의 일감으로 생성&lt;/strong&gt;해 개발자가 정식 업무로 할당받아 여유를 갖고 진행할 수 있도록 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/09.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;                                                          실제 태그 구축 프로젝트 과정
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-검토--모두가-만족할-때까지--&quot;&gt;➌ 검토 ( 모두가 만족할 때까지… 🔄 )&lt;/h3&gt;

&lt;p&gt;컴포넌트 개발은 쏘카프레임 TF 팀이 하지만, 쏘카의 &lt;strong&gt;모든 개발자와 디자이너가 쏘카프레임의 사용자&lt;/strong&gt;이기 &lt;strong&gt;때문에 **개발 검토의 **핵심은 팀원 전체의 합의와 피드백&lt;/strong&gt;입니다. 만약 이 과정을 소홀히 할 경우, 추후 논의가 다시 원점으로 돌아갈 수 있기 때문에(😱 진짜루…), 몇 주가 걸리더라도 &lt;strong&gt;개발 검토와 피드백을 통한 기획 보강을 철저히&lt;/strong&gt; 진행합니다. 저희 팀의 경우 복잡한 컴포넌트를 제작 할 경우엔 이 과정이 3~4주씩 걸리기도 하고 비교적 간단한 컴포넌트의 경우 1~2일 내에 끝나기도 했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/10.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
모두가 만족하기 위한 컴포넌트 개발의 무한 굴레
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-개발&quot;&gt;➍ 개발&lt;/h3&gt;

&lt;p&gt;개발 검토를 거친 뒤, 개발을 시작할 준비가 되면 이제 &lt;strong&gt;배포 가능 시기를 산정&lt;/strong&gt;합니다. 만약 개발 플랫폼별로 착수 가능 시기가 다르다면 &lt;strong&gt;가능한 플랫폼 먼저 착수&lt;/strong&gt;합니다. &lt;strong&gt;개발 순서는 동일&lt;/strong&gt;하게 가져가되, 배포 시기를 꼭 통일할 필요는 없습니다! (현실적으로 불가능에 가깝기도 했구요 ㅎㅎ) 디자인 시스템의 목적은, 하루빨리 효율적으로 일하기 위해서 아니겠어요? 😉&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/11.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
각 개발 플랫폼의 컴포넌트 배포 시기
&lt;/center&gt;

&lt;p&gt;경험상, 검토 과정을 충실히 거쳤다면 실제 개발은 생각보다 금방 끝났습니다. 개발이 완료되면, 개발자가 파일럿 화면에 컴포넌트를 사용해 보면서 &lt;strong&gt;불편한 점이 있는지 확인&lt;/strong&gt;한 뒤 더 사용하기 좋은 방식으로 개선하기도 하고 &lt;strong&gt;디자인 및 기능 검수(QC)를 거쳐 배포&lt;/strong&gt;합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/12.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;
                                                          &lt;center&gt;                                                        새로운 컴포넌트 적용 시점 및 기준
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;배포 이후에는, &lt;strong&gt;“새롭게 만들어진 컴포넌트를 언제부터 사용하지?”&lt;/strong&gt; 라는 고민에 빠지게 되는데요. 저희는, 컴포넌트 구축 이전에 만들어진 화면이 워낙 많아, 일단 &lt;strong&gt;신규 화면이나 수정하는 화면 위주로 컴포넌트를 적용&lt;/strong&gt;하고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-정리&quot;&gt;➎ 정리&lt;/h3&gt;

&lt;p&gt;컴포넌트의 배포가 완료되면, 이제 남은 일은 하나입니다. &lt;strong&gt;&lt;a href=&quot;https://socarframe.socar.kr/&quot;&gt;쏘카프레임 웹 사이트&lt;/a&gt;에 용도와 용법에 대해 정리&lt;/strong&gt;해서 업로드하기! 디자이너와 개발자 그리고 기획자 등 쏘카 프로덕트를 함께 만들어가는 동료들이 이해할 수 있도록 &lt;strong&gt;최대한 분명하고 체계적&lt;/strong&gt;으로 정리합니다. (쏘카프레임 웹사이트를 만드는 과정도 쉽지 않았는데요. 😂기회가 된다면 따로 정리해서 올리겠습니다!)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/13.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-컴포넌트-구축-우선순위-워크샵&quot;&gt;3. 컴포넌트 구축 우선순위 워크샵&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-개발합시다-근데-뭐부터&quot;&gt;1) 👨‍🔧개발합시다! 근데, 뭐부터?&lt;/h3&gt;

&lt;p&gt;이제, 모든 준비는 완료됐습니다. 근데, 어떤 컴포넌트부터 개발할까요? 앞서 말했듯이 우리 모두의 리소스는 한정되어 있기 때문에 &lt;strong&gt;공수 대비 가장 효과적으로 사용할 수 있는 컴포넌트부터 개발&lt;/strong&gt;해야 합니다. 처음에는 디자이너가 먼저 제안했습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-디자이너의-생각--개발자의-생각&quot;&gt;2) 디자이너의 생각 ≠ 개발자의 생각&lt;/h3&gt;

&lt;p&gt;첫 번째로 개발하는 컴포넌트는 버튼이었습니다. 비교적 가장 복잡한 컴포넌트인 버튼을 개발한 뒤 쉬어가는 의미로 &lt;strong&gt;두 번째는 조금 단순한 컴포넌트를 개발하기로&lt;/strong&gt; 했습니다.&lt;/p&gt;

&lt;p&gt;디자이너들끼리 논의한 결과, 버튼과 비슷한 형태를 가진 Chip이 가장 적당해 보였죠. 그래서 개발자들에게 Chip을 제안했습니다. 결과는 어땠을까요? 예상과는 달리 개발자분들이 난색을 보였습니다. &lt;strong&gt;보이는 것보다 복잡한 개발이 필요한 상태&lt;/strong&gt;였어요. 그래서 저희는 부랴부랴 &lt;strong&gt;다음 컴포넌트 후보를 찾는 데 시간을 추가로 사용했습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/13-1.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-합리적인-컴포넌트-개발-순서-정하기&quot;&gt;3) 합리적인 컴포넌트 개발 순서 정하기&lt;/h3&gt;

&lt;p&gt;위의 사건을 계기로 저희는 컴포넌트를 구축하는 순서를 위한 &lt;strong&gt;합리적인 의사결정이 필요&lt;/strong&gt;하다는 사실을 깨달았습니다. 그럼 어떤 기준으로 정해야 가장 이상적인 결과를 얻을 수 있을까요? 저는 한 &lt;a href=&quot;https://uxdesign.cc/workshop-how-to-prioritize-your-design-system-components-744aa99f07d7&quot;&gt;아티클을 참고&lt;/a&gt;해, &lt;strong&gt;컴포넌트를 어떤 순서로 개발 해야 할 지 담당자들과 함께 워크샵을 진행했습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/14.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
출처: https://uxdesign.cc/workshop-how-to-prioritize-your-design-system-components-744aa99f07d7
&lt;/center&gt;

&lt;p&gt;참고한 워크샵 방식을 &lt;strong&gt;현재 우리 팀의 상황에 맞게 수&lt;/strong&gt;정한 뒤, 개발자들과 디자이너가 모여 함께 약 1시간 30분 동안 워크샵을 진행했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/15.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
집중하는 우리팀  ✨
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-무엇을-언제-어떻게&quot;&gt;➊ 무엇을, 언제, 어떻게?&lt;/h3&gt;

&lt;p&gt;우선 올해를 목표 기간으로 정하고, &lt;strong&gt;올해 안에 컴포넌트화 하고 싶은 심볼 리스트&lt;/strong&gt;를 작성했습니다. 그 다음, 목표 단위를 분기별로 쪼갠 뒤 &lt;strong&gt;개발이 [단순(3일 이하) - 복잡(일주일 이상)] 한 것 그리고 [자주 - 가끔] 사용하는 것&lt;/strong&gt;의 기준을 정했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/16.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
컴포넌트 우선순위 워크샵을 위한 다이어그램
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-디자이너--개발자&quot;&gt;➋ 디자이너 💗 개발자&lt;/h3&gt;

&lt;p&gt;다이어그램을 그리기 위한 준비를 완료했으면, &lt;strong&gt;개발자와 디자이너 그룹으로 나누어&lt;/strong&gt; 각 그룹끼리 모여 &lt;strong&gt;심볼 리스트를 그래프에 배치&lt;/strong&gt;합니다. 1차 배치가 끝나면 두 그룹이 생각한 개발 순서에 대한 설명을 듣고, 모두 모여 최종 그래프를 완성합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/17.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;                                                       컴포넌트 우선순위 워크샵 진행 중
&lt;/center&gt;

&lt;p&gt;이렇게 그룹을 분리해서 &lt;strong&gt;다이어그램을 따로 만드는 이유는&lt;/strong&gt;, 비슷한 성격의 그룹으로 나뉘어 의견을 정리한 뒤 최종 논의를 시작하면 서로의 의견이 중구난방으로 섞이지 않고 &lt;strong&gt;더 효율적으로 의사결정&lt;/strong&gt;을 할 수 있기 때문입니다. 실제로, 아래 2개의 다이어그램을 비교하면 디자이너 그룹과 개발자 그룹 간 차이가 꽤 있어 보이죠?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/18.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
디자이너와 개발자 그룹이 각각 완성한 다이어그램
&lt;/center&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/19.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
일치하는 것과 불일치 하는 것
&lt;/center&gt;

&lt;p&gt;두 그룹이 완성한 다이어그램을 자세히 살펴보면, 개발자와 디자이너의 &lt;strong&gt;의견이 일치&lt;/strong&gt;하는 부분이 보이는데요, 이런 부분은 &lt;strong&gt;추가 논의 필요 없이&lt;/strong&gt; 넘어갑니다. 하지만, 두 그룹 간 &lt;strong&gt;생각이 크게 다른 경우&lt;/strong&gt;도 있습니다. 이런 경우에는 서로가 왜 그렇게 생각했는지 이야기를 나누며 &lt;strong&gt;서로를 이해한 뒤 협의를 진행&lt;/strong&gt;합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/20.png&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;                                                                          (극적 타협 🤝)
&lt;/center&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/21.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;                                                  디자이너와 개발자가 협의한 최종 다이어그램
&lt;/center&gt;

&lt;p&gt;두 그룹이 이야기하고 협의를 진행하다 보면, 어느새 최종 다이어그램을 완성할 수 있습니다!&lt;/p&gt;

&lt;p&gt;이 워크숍의 장점은 &lt;strong&gt;디자이너와 개발자가 서로를 이해하면서 합리적인 의사결정&lt;/strong&gt;을 내릴 수 있다는 점인데요. 쏘카프레임은 장기 프로젝트 입니다. 그렇기 때문에, 길을 잃지 않고 앞으로 나아가기 위해 &lt;strong&gt;충분히 합의된 장기적인 계획이 필요&lt;/strong&gt;합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;쏘카프레임은-현재-진행-중&quot;&gt;쏘카프레임은 현재 진행 중…&lt;/h2&gt;

&lt;p&gt;지금까지 쏘카 디자인 시스템을 위해 긴 시간을 달려왔네요! 여러 시행착오를 겪으며 느낀 점은, &lt;strong&gt;디자인 시스템의 의미가 디자이너와 개발자가 서로를 이해하는 것 자체&lt;/strong&gt;에 있다는 것입니다. 우리는 아직도 매주 모여 어떻게 하면 함께 효율적으로 일할 수 있는지 논의하고, 이를 실현하기 위해 노력하고 있습니다. 이보다 가치 있는 일이 있을까요? 디자인 시스템은 끝나지 않는 작업입니다. &lt;strong&gt;결국, 디자인 시스템을 지탱하는 것은 함께, 꾸준히, 서로를 이해하겠다는 합의&lt;/strong&gt;인 것 같습니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-02/22.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
시작한 뒤 단 1주만을 빼고 계속 달리고 있는 우리의 회의 🏃‍♀️
&lt;/center&gt;

&lt;p&gt;어느 글에서 &lt;strong&gt;디자인 시스템은 농사를 짓는 것&lt;/strong&gt;과 같다고 표현한 것을 보고 아주 공감했던 기억이 나네요.&lt;/p&gt;

&lt;p&gt;열매를 얻기 위해 씨앗을 심고 1년 내내 땀 흘려 일하는 농부처럼 끈기를 가지고 목표를 향해 함께 꾸준히 나아가다 보면 분명 아주 튼튼하고 맛있는 열매를 얻을 수 있을 거라 생각합니다! 디자인 시스템을 위해 달리는 모든 농부들 화이팅! 👨‍🌾&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;지금까지&quot;&gt;지금까지…&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;컴포넌트-제대로-만들어-쉽게-쓰자-1탄&quot;&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/31/component-01.html&quot;&gt;컴포넌트, 제대로 만들어 쉽게 쓰자! 1탄&lt;/a&gt;&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;컴포넌트 구축이 왜 필요한지&lt;/li&gt;
  &lt;li&gt;컴포넌트 네이밍 룰을 구축하고, 실제로 사용하는 방법&lt;/li&gt;
  &lt;li&gt;개발 친화적으로 컴포넌트를 구축하는 방식 (Option, Origin)&lt;/li&gt;
  &lt;li&gt;컴포넌트 컬러가 필요한 이유와 아쉬운 점&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;컴포넌트-제대로-만들어-쉽게-쓰자-2탄&quot;&gt;컴포넌트, 제대로 만들어 쉽게 쓰자! 2탄&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;디자인 시스템 실행의 어려움&lt;/li&gt;
  &lt;li&gt;컴포넌트 구축 프로세스 만들기&lt;/li&gt;
  &lt;li&gt;합리적인 컴포넌트 구축 순서 정하기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이렇게 1~2탄에 걸쳐서 &lt;strong&gt;쏘카프레임의 컴포넌트 구축&lt;/strong&gt;을 진행하면서 겪은 &lt;strong&gt;어려움과 극복하는 과정&lt;/strong&gt;을 소개했는데요. 아마 현재 많은 팀이 디자인 시스템에 많은 관심을 두고 계실 거라 생각합니다.&lt;/p&gt;

&lt;p&gt;저희가 디자인 시스템을 시작할 때만 해도 디자인 시스템을 구축한 국내 사례가 많이 없어, 크고 작은 고민도 &lt;strong&gt;주로&lt;/strong&gt; &lt;strong&gt;저희 팀에서 고민하고 해결&lt;/strong&gt;할 수밖에 없었습니다. 😭&lt;/p&gt;

&lt;p&gt;이제는 비교적 많은 팀이 디자인 시스템을 구축하거나 준비하고 있어 이렇게 저희 나름의 경험을 나누면 작은 도움이 되지 않을까 고민 끝에 이렇게 글을 쓰게 되었는데, 덕분에 저희도 기억을 거슬러 우리 팀의 기록을 정리할 수 있었던 소중한 시간이었던 것 같아 글을 쓰기 잘했다는 생각이 드네요. 지금까지 긴 글을 읽어 주셔서 감사합니다! 🙇‍♂️&lt;/p&gt;

&lt;p&gt;질문과 좋은 의견은 언제나 환영해요!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;쏘카-프로덕트-디자인팀의-영상--글-모음&quot;&gt;쏘카 프로덕트 디자인팀의 영상 &amp;amp; 글 모음&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;네이버 테크톡에서 진행한 &lt;a href=&quot;https://tv.naver.com/v/15842187&quot;&gt;&lt;strong&gt;“쏘카프레임 구축 배경과 과정”&lt;/strong&gt; 발표 영상&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/06/23/socar-design-system-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #1] 쏘카의 디자인 시스템 맛보기&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/10/dark-mode-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가!&lt;/strong&gt; (1탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/22/dark-mode-02.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가!&lt;/strong&gt; (2탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/31/component-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자!&lt;/strong&gt; (1탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/09/08/component-02.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자!&lt;/strong&gt; (2탄)&lt;/a&gt;(현재 글)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>sandy</name></author><category term="design" /><category term="design_system" /><summary type="html"></summary></entry><entry><title type="html">쏘카 데이터 그룹 - 데이터 사이언티스트 인턴 9개월 후기</title><link href="http://localhost:4000/data/2020/08/20/socar-data-group-intern-review.html" rel="alternate" type="text/html" title="쏘카 데이터 그룹 - 데이터 사이언티스트 인턴 9개월 후기" /><published>2020-08-20T05:00:00+09:00</published><updated>2020-08-20T05:00:00+09:00</updated><id>http://localhost:4000/data/2020/08/20/socar-data-group-intern-review</id><content type="html" xml:base="http://localhost:4000/data/2020/08/20/socar-data-group-intern-review.html">&lt;p&gt;안녕하세요 :)&lt;/p&gt;

&lt;p&gt;쏘카 데이터 그룹의 야마니(이유림)입니다! 😃&lt;/p&gt;

&lt;p&gt;최근 데이터, 인공지능 등에 대한 관심이 커지고 있습니다. 데이터는 여러 분야에 두루 적용될 수 있기 때문에, 다양한 업계에서 데이터 분석과 관련된 전문가를 필요로 하고 있죠😎, 이에 맞추어 많은 대학에서 머신러닝 및 데이터 관련 학과를 개설하고 있습니다. 기업에서도 데이터 조직을 만들어 데이터 인프라를 구축하고, 데이터를 기반의 업무 문화를 만들기 위해 노력하고 있습니다. 🔥🔥🔥&lt;/p&gt;

&lt;p&gt;하지만 회사의 &lt;strong&gt;데이터 인프라가 어느 수준인지, 회사에서 데이터를 어떻게 활용하고 있는지는 회사 관계자가 아니면 알기 힘듭니다.&lt;/strong&gt;🥺 뿐만 아니라 진행하는 업무의 종류와 중요도, 문화는 회사마다 큰 차이가 있습니다. 따라서 데이터 분야의 취업을 준비하는 많은 대학생분들이 충분한 정보를 접하지 못하곤 합니다. 지인을 통하거나 공개된 발표 자료를 토대로 추측해야 합니다.&lt;/p&gt;

&lt;p&gt;저는 대학교 4학년이던 2019년 11월부터 2020년 7월까지 총 9개월간 쏘카 데이터 그룹에서 인턴으로 근무했습니다. 그 경험을 바탕으로 &lt;strong&gt;쏘카 데이터 그룹에서는 어떤 일을 하고, 어떤 방식으로 하며, 어떤 문화를 가졌는지 알려드리고자 ‘야마니의 인턴기’를 적게 되었습니다.&lt;/strong&gt; 대학생분들이 제 글을 통해 궁금했던 것을 조금이라도 알아갈 수 있다면 좋겠습니다. 😊&lt;/p&gt;

&lt;p&gt;목차는 다음과 같습니다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#입사-전&quot;&gt;입사 전&lt;/a&gt;
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;#1-회사-고르기--왜-쏘카로-결정했나요&quot;&gt;회사 고르기 : 왜 쏘카로 결정했나요?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-회사와-첫-만남--면접은-어떻게-진행되었나요&quot;&gt;회사와 첫 만남 : 면접은 어떻게 진행되었나요?&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#입사-후&quot;&gt;입사 후&lt;/a&gt;
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;#1-쏘카-데이터-그룹-인턴은-어떤-일을-하나요&quot;&gt;쏘카 데이터 그룹 인턴은 어떤 일을 하나요?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-쏘카-데이터-그룹은-어떤-일을-하나요&quot;&gt;쏘카 데이터 그룹은 어떤 일을 하나요?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-데이터-분석에서-무엇이-중요한가요&quot;&gt;데이터 분석에서 무엇이 중요한가요?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-쏘카-데이터-그룹은-어떻게-일하나요&quot;&gt;쏘카 데이터 그룹은 어떻게 일하나요?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-쏘카-데이터-그룹은-어떤-문화가-있나요&quot;&gt;쏘카 데이터 그룹은 어떤 문화가 있나요?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6-쏘카-데이터-그룹은-어떻게-공부하나요&quot;&gt;쏘카 데이터 그룹은 어떻게 공부하나요?&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#어셈블&quot;&gt;어셈블&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#읽쓰정&quot;&gt;읽쓰정&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#세미나와-스쿨&quot;&gt;세미나와 스쿨&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#7-쏘카-데이터-그룹에서-무엇을-배웠나요&quot;&gt;쏘카 데이터 그룹에서 무엇을 배웠나요?&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#마무리&quot;&gt;마무리&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#데이터-분야-인턴은-어떻게-준비해야-할까요&quot;&gt;데이터 분야 인턴은 어떻게 준비해야 할까요?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#앞으로-계획은-무엇인가요&quot;&gt;앞으로 계획은 무엇인가요?&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/1.jpg&quot; alt=&quot;&quot; width=&quot;80%&quot; height=&quot;80%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
2020년 2월에 찍은 쏘카 데이터 그룹 단체 사진. 저는 뒷줄 왼쪽에서 두번째 검은 옷을 입고 웃고 있습니다. 
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;입사-전&quot;&gt;입사 전&lt;/h2&gt;

&lt;h3 id=&quot;1-회사-고르기--왜-쏘카로-결정했나요&quot;&gt;1) 회사 고르기 : 왜 쏘카로 결정했나요?&lt;/h3&gt;

&lt;p&gt;저는 학부에서 전자공학을 전공했습니다. 회로, 통신, 컴퓨터 등 여러 수업🔌🖥️을 들었는데, 그중에서도 확률과 머신러닝 분야가 가장 재미있었습니다. 대학교 2학년과 3학년 때는 IT 회사의 인공지능 연구 부서의 인턴을 경험했습니다. 사실 &lt;strong&gt;학부 졸업 후 바로 대학원에 진학할 계획이었지만, 한편으로는 학교 밖에서 ‘세상&lt;/strong&gt;🌏 &lt;strong&gt;돌아가는 모습’을 보고 싶다는 열망도 항상 있었습니다.&lt;/strong&gt; 고민 끝에, 데이터 분야의 인턴을 경험하고 대학원에 진학할 예정이었습니다.&lt;/p&gt;

&lt;p&gt;많은 회사 중에서, 어느 곳으로 갈 것인가를 결정해야 했습니다. 제가 고려한 것은 아래 두가지 입니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;회사가 나의 강점&lt;/strong&gt;💪&lt;strong&gt;을 살려주는가?&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;변성윤님, 김상우님 등 구성원들의 발표 자료나 블로그 글들을 자주 접해서 쏘카 데이터 그룹은 멋진 분들이 계신 곳이라는 생각이 들었습니다. 저는 ‘제가 배우고 싶은 멋진 분’들과 일할 때 더욱 좋은 성과를 보이는 사람이라고 생각해서 쏘카가 저의 강점을 살려주는 곳이라고 생각했습니다. 또한 데이터 그룹의 인원 규모가 매년 커지고 있는 점을 보고 데이터 기반의 업무 문화를 만들려는 회사의 의지를 보여준다고 생각했습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;회사의 사업 분야&lt;/strong&gt;🚙&lt;strong&gt;가 나에게 매력적&lt;/strong&gt;❣️&lt;strong&gt;인가?&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;혹시 통학하시는 분?🖐️ 저 또한 프로 통학러인데요, 학부 2학년부터 3년 간 왕복 3시간 반 통학을 해왔습니다. 시간, 돈, 앉아 갈 수 있는지 등 통학에서 가장 중요하게 여기는 점들은 사람마다 다른데, 이에 비해 선택할 수 있는 교통 수단은 제한되어 있다고 느꼈죠. 자연스럽게 소비자의 욕구를 더 잘 충족시킬 수 있는 다양한 이동 수단에 대해 관심을 가지게 되었습니다. 🚇🚌🚕🚲&lt;/p&gt;

    &lt;p&gt;기존 렌터카 산업은 ‘자차를 사용할 수 없는 여행지에서 차량을 대여해주는 서비스’로 정의됩니다. 그러나 &lt;strong&gt;쏘카의 카셰어링 서비스는 ‘일상 생활에서 언제든지 편하게 사용할 수 있는 이동 수단’으로 변모&lt;/strong&gt;하며 사용자에게 새로운 교통 수단을 제공하고 있고, 앞으로 소유의 개념이 약해지면서 이런 수요가 더욱 증가하리라 생각했습니다. 또한 공유 기반의 차량이 서울의 교통 문제를 해결할 수 있을 것이라는 믿음이 있었죠.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;따라서 쏘카에 지원하기로 결정했습니다. 🚗&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/2.png&quot; alt=&quot;&quot; width=&quot;65%&quot; height=&quot;65%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
학과 건물에서 바라본 서울의 야경. 저 멀리 밝게 빛나는 세상이 어떻게 돌아가는지 궁금해하곤 했습니다. 
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-회사와-첫-만남--면접은-어떻게-진행되었나요&quot;&gt;2) 회사와 첫 만남 : 면접은 어떻게 진행되었나요?&lt;/h3&gt;

&lt;p&gt;지원서 접수 후, 면접은 총 세 차례에 걸쳐 진행되었습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;30분의 전화📞 면접에서는 데이터 분석과 관련한 기본적인 지식 수준을 물어봅니다.
    &lt;ul&gt;
      &lt;li&gt;데이터 관련 전반적인 내용을 잘 이해하고 있는지 물어보는 질문이 많았고, 깊이 있게 이해하고 있는지 등을 물어보는 질문도 있었습니다.🧐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;첫 대면 면접은 1시간 30분 ~ 2시간 정도 진행됩니다. 간단한 코딩 테스트를 보고 지원서에 적은 내용을 바탕으로 심층적인 면접을 진행합니다. 코딩 테스트는 알고리즘 구현, SQL 등의 테스트가 있었습니다.
    &lt;ul&gt;
      &lt;li&gt;대면 면접은 코딩 테스트와 심층 면접으로 이루어졌습니다.👀 코딩 테스트에서는 알고리즘 문제가 주어졌기 때문에, 최대한 논리 전개 과정을 잘 설명하면서 문제를 풀었습니다. 이후엔 심층 면접이 이어졌습니다. 저는 주로 &lt;strong&gt;수업에서 진행한 프로젝트에서 제가 맡았던 부분과 협업 과정을 중심으로 이야기했습니다.&lt;/strong&gt; 프로젝트 주제, 분석 방법 선정 등 여러 단계에서 왜 이런 선택을 했는지에 대한 사고의 흐름도 설명했죠. 또한 머신러닝 관련한 학부, 대학원 수업을 찾아 들으며 데이터 분석에 대한 관심을 꾸준히 키운 점도 어필했습니다.💬&lt;/li&gt;
      &lt;li&gt;또한 교통과 관련한 여러 아이디어를 제안했습니다. 쏘카에 지원하던 당시 교통공학 수업을 수강해 교통과 데이터를 접목하면 유의미한 시너지 효과가 날 수 있다는 것을 알게 되었죠. 예를 들어 정부에서 데이터 기반으로 신호등을 운영하고 도로를 어디에 만들지를 결정하는 등 효율적으로 교통 인프라를 구축할 수 있습니다. 그렇다면 공유 차량을 운영하는 쏘카는?🚘 자가용과 대중교통의 장점을 살린 새로운 교통수단을 제공할 수 있습니다. 또한 환승을 자연스럽게 만든다면 각각 존재하던 기존의 교통수단들을 하나로 연결하는 것도 가능합니다. 만약 지하철과 타다, 전동 킥보드가 기다림 없이 환승이 가능하고 필요한 장소에 딱! 존재한다면 더욱 편리한 이동이 가능하겠죠. 이를 가능하게 하는 것은 데이터 기반의 운영이죠. 이처럼 심층면접에서 데이터를 통해 교통을 더 개선할 방안들, 그중에서 쏘카에서 적용 가능한 것들에 대해서 자유롭게 이야기했습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;마지막 대면🤠 면접은 회사의 CTO, 인사 담당자와 함께 1시간 진행됩니다. 지원서 내용을 기반으로 면접을 진행하고, 회사에 대해 궁금한 점도 자유롭게 질문할 수 있습니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/3.png&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
전화 면접을 봐주셨던 디케이 데이터 그룹장님 
&lt;/center&gt;

&lt;p&gt;결과는? 데이터 그룹장님, 전략팀장님 등 주요 회사 구성원들 앞에서 &lt;strong&gt;‘아이디어를 쏘카에서 실현하기 위한 구체적인 방안’에 대해서&lt;/strong&gt; 발표하게 되었습니다. 아래와 같은 꼼꼼한 코멘트도 받았습니다. 👩‍🏫 👨‍🏫&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이런 법적인 이슈들이 있어 이 아이디어는 구현이 힘들 수 있습니다.&lt;/li&gt;
  &lt;li&gt;이 아이디어는 회사에서 이렇게 시도를 해 보았는데, 이런 결과가 있었습니다.&lt;/li&gt;
  &lt;li&gt;회사의 이 부분에 이 아이디어를 이렇게 적용해볼 수 있을 것 같습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아이디어를 자유롭게 시도할 수 있는 학교 프로젝트가 1차 방정식이라면, &lt;strong&gt;회사의 경우 여러 법적인 제약과 사업성을 모두 고려한 고차 방정식&lt;/strong&gt;이란 것을 알 수 있었습니다. 연차에 관계없이 구성원을 모두 존중하는 회사라는 것도 느낄 수 있었죠.😊 (입사 후에는 이렇게 자리를 만들어 주셨던 이유를 알게 되었습니다. 하고 싶은 것이 많고 열정이 클수록 때로 쉽게 실망하는 법이죠. 따라서 제가 회사의 사업 범위가 제한되어 있다고 느끼지 않고 회사 생활에 만족할 수 있도록 자리를 만들어 주셨다고 합니다. 이 이유를 듣고 더욱 회사를 신뢰할 수 있게 되었습니다)&lt;/p&gt;

&lt;p&gt;그렇게 3번의 면접을 통해 2019년 11월 4일, 첫 출근을 하게 되었습니다. 🚃&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/4.png&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;

입사 전후로 많이 도움을 주신 동아리 선배님들. 현재 같은 동아리에서 6명이 쏘카에서 함께 일하고 있습니다. 
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;입사-후&quot;&gt;입사 후&lt;/h2&gt;

&lt;h3 id=&quot;1-쏘카-데이터-그룹-인턴은-어떤-일을-하나요&quot;&gt;1) 쏘카 데이터 그룹 인턴은 어떤 일을 하나요?&lt;/h3&gt;

&lt;p&gt;저는 타다데이터팀으로 입사했습니다. 타다데이터팀의 주 업무는 타다 서비스를 효율적으로 운영하기 위한 데이터 분석과 모델링입니다. 첫 두 달은 학교 수업 및 졸업 프로젝트를 병행하기 위해 주 4일 출근하며 회사에 적응했습니다. 저장되어 있는 데이터의 체계와 종류를 파악하고, 노션에 정리된 기존 업무를 훑어보았습니다. 12월부터는 본격적으로 업무를 시작했습니다. 🔥&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;저는 무엇보다 인턴과 정직원 구분 없이 모두 주도적으로 업무를 수행한다는 점이 좋았습니다.&lt;/strong&gt; 업무를 할 때, 정규직과 인턴을 따로 구분하지 않습니다. 저는 공항을 오가는 ‘타다 에어’✈️ 서비스를 담당해 데이터를 활용한 운영 방안을 제공하는 역할을 맡았습니다. 예를 들면 아래와 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2019년 설 예상되는 타다 에어 사용자는 n명이고, 따라서 m대의 차량을 인천공항에 배치해야 합니다.&lt;/li&gt;
  &lt;li&gt;타다 에어가 98%의 확률로 예약 시각에 늦지 않기 위해서 최소 t분 전에 사용자에게 이동해야 합니다. 해당하는 t의 계산법은 … 입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;사용할 데이터 종류, 알맞은 분석 방법을 결정하는 것부터 관련 운영 부서와 커뮤니케이션하는 모든 과정을 직접 진행했습니다. 데이터 분석이 운영에 접목되는 과정과 전반적인 업무 방식을 알아 갈 수 있었죠. 또한 &lt;strong&gt;제가 제공한 데이터로 인한 결과를 즉각적인 운영 지표📈로 확인 할 수 있었고, 따라서 맡은 업무에 대해서 더욱 책임감을 가질 수 있었습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/5.jpg&quot; alt=&quot;&quot; width=&quot;65%&quot; height=&quot;65%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;

제가 입사한 타다데이터팀. 입사 후에 정말 많은 도움을 받았습니다. 그중에서도 오른쪽에서 두번째 초록색 옷을 입은 분이 카일 팀장님. 

&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-쏘카-데이터-그룹은-어떤-일을-하나요&quot;&gt;2) 쏘카 데이터 그룹은 어떤 일을 하나요?&lt;/h3&gt;

&lt;p&gt;이후 2020년 3월부는 데이터 사이언스팀으로 이동해 쏘카 관련 업무를 수행했습니다.🚗 데이터 사이언스팀은 &lt;strong&gt;쏘카 운영 결정을 위해 필요한 데이터를 분석하고, 사업팀과 자주 회의하며 의견을 조율&lt;/strong&gt;합니다. 저는 수요 예측 및 증감차, 가격이 적절한지 판단하는 업무를 했는데 예를 들면 아래와 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;쏘카의 수요는 크게 5가지로 나눌 수 있습니다. 각 Trend를 분석했을 때, 코로나로 인한 영향을 가장 많이 받은 수요는 b이며, 지역으로는 g입니다. 수요를 나눈 기준은 아래와 같습니다.&lt;/li&gt;
  &lt;li&gt;과거의 데이터를 기반으로 보았을 때, 2020년 4월에는 서울 강남구에는 n대, 서초구에는 m대 … 증차하는 것이 손익을 가장 최대화할 것으로 예상됩니다.&lt;/li&gt;
  &lt;li&gt;강릉 KTX 역에 있는 쏘카존을 앱에서 클릭한 사용자 중에 p%는 이웃한 z번 쏘카존을 클릭합니다. 따라서 성수기 강릉역 증차 시에 함께 증차해야 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위와 같이 데이터 사이언스 팀은 전반적인 운영 결정을 최적화합니다. 외에도 머신러닝/딥러닝 모델을 만들고 운영하는 데이터 모델링팀, 쏘카 비즈니스 전반을 통해 나아갈 방향을 결정하는 비즈니스 데이터팀, 데이터 분석을 쉽게 할 수 있는 데이터 인프라를 만들어주는 데이터 엔지니어링팀, 데이터 기반 오퍼레이션 자동화를 담당하는 데이터 오퍼레이션팀이 있습니다.🏢 🏢&lt;/p&gt;

&lt;p&gt;저는 요즘 &lt;strong&gt;개인 프로젝트로 강화학습 모델을 사용해 적절한 가격&lt;/strong&gt;💰&lt;strong&gt;을 찾는 모델을 만들고 있습니다.&lt;/strong&gt; 책과 논문을 읽고, 구현된 오픈소스 코드를 이해하는 등 공부가 많이 필요한 프로젝트입니다. 현재까지 운영되어 왔던 방식을 개선하면서 동시에 안정적인 모델을 만들어야 하므로 난이도가 높은 편이죠. 하지만 회사에서도 집중할 수 있는 환경을 제공해주고, 도움을 받을 수 있는 외부 강화학습 전문가를 초빙하는 등 적극적으로 지원해주고 있습니다. 무엇보다 적성에도 맞아 즐겁게 임하고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/6.png&quot; alt=&quot;&quot; width=&quot;75%&quot; height=&quot;75%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;

출근 후, 하루의 일정을 확인하는 모습. 사진 잘 찍어주신 데이터 엔지니어링팀 제프 감사합니다. 
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-데이터-분석에서-무엇이-중요한가요&quot;&gt;3) 데이터 분석에서 무엇이 중요한가요?&lt;/h3&gt;

&lt;p&gt;데이터를 보다 보면 마치 눈👀을 감고 코끼리🐘의 다리, 발, 코를 만지고 있는 기분이 들 때가 있습니다. 데이터는 현상의 작은 부분만 설명하고 있고, 직접적인 현상은 데이터를 조합하여 분석가가 유추해야 합니다. 따라서 &lt;strong&gt;분석가의 사전 지식과 분석 방법, 시각화 방법에 따라 데이터는 다양하게 해석될 수 있습니다.&lt;/strong&gt; 백문이 불여일견!🙂 예시를 준비했습니다. 예시들은 모두 제가 임의로 만든 데이터입니다.&lt;/p&gt;

&lt;p&gt;야마니는 서울의 각 쏘카존을 모니터링하면서, &lt;strong&gt;각 존별로 증차량과 감차량을 결정하는 일을 맡게 되었습니다.&lt;/strong&gt; 이 때, 한양대 옆에 위치한 쏘카존의 이용 시간이 감소하고 있는 것을 포착하게 됩니다. 다른 서울의 쏘카존들과 비교해보면 그 감소폭은 더욱 두드러집니다. 그럼 한양대 옆 쏘카존(줄여서 한양대존)의 차량 수를 줄여야📉 할까요?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/7.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하지만, 한양대존의 매출을 확인해보니 오히려 증가했다는 것을 확인할 수 있었습니다. 이용 시간은 줄었지만 시간당 매출이 높아지면서 매출이 증가한 것으로 보입니다. 그럼 한양대존의 차량 수를 늘려야 할까요? 그런데 왜 이렇게 매출이 급격히 오른 걸까요? &lt;strong&gt;답을 찾기 위해 정리된 과거 분석 결과를 살펴보던 중, 연령 별로 시간 당 매출이 많이 차이가 난다는 것을 알게 되었습니다.&lt;/strong&gt;📜&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/8.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그렇게 한양대존의 매출을 연령 별로 나누어 살펴보니, 20대는 감소하고 30대 이상은 증가했다는 것을 확인했습니다. 대학교의 비대면 수업으로 인해 20대의 사용량이 줄고, 30대 이상은 출퇴근 시의 쏘카 이용이 증가한 경향이 반영된 것으로 보입니다. 그러면서 자연스레 존의 전체 사용량은 줄었지만 매출은 증가하는 현상이 나타났던 것입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/9.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 때, &lt;strong&gt;운영을 담당하시는 분이 사실 한양대존의 증가한 30대 이상의 수요는 뚝섬 근처에서 발생했을 것이라고 알려주시죠.&lt;/strong&gt;🤔 한양대존 사용자들이 어디서 예약을 했는지 위치를 살펴보니, 뚝섬 근처의 업무 지구였습니다. 또한 뚝섬의 쏘카존(줄여서 뚝섬존)은 차량이 매우 부족한 상태라는 것도 확인할 수 있었습니다. 뚝섬존의 차량이 부족하게 되자, 중랑천 너머의 한양대존까지 쏘카를 빌리러 오는 것이었죠.🏃‍♂️&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/10.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 확실해졌습니다. 증차가 필요한 곳은 한양대존이 아니라 뚝섬존📈입니다. 한양대존의 차량도 뚝섬존으로 옮기는 것이 맞아 보입니다.&lt;/p&gt;

&lt;p&gt;그림과 함께 예시를 들어 살펴보았습니다. 실제로는 개별 쏘카존을 살펴보기 보다는, 전체 쏘카존을 분석하고 정량적인 예상 매출, 손익을 비교하여 최종적인 증차 쏘카존과 증차량을 결정합니다. 하지만 위의 예시를 통해서 &lt;strong&gt;데이터 분석에서 1. 꼼꼼한 문서화와 2. 동료들과 업무 공유 및 논의가 매우 중요하다는 것은 확실히 알 수 있습니다.&lt;/strong&gt; 🚚&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-쏘카-데이터-그룹은-어떻게-일하나요&quot;&gt;4) 쏘카 데이터 그룹은 어떻게 일하나요?&lt;/h3&gt;

&lt;p&gt;쏘카 데이터 그룹에서는 노션을 활용하여 업무를 기록합니다. 업무를 잘 기록하기 위해서는 꼼꼼히 내용을 정리하는 것도 필요하지만, 짜임새 있게 잘 정리하는 것도 중요합니다. 우선 &lt;strong&gt;하나의 프로젝트는 여러개의 태스크로 이루어져 있고, 태스크 간의 발전 과정을 한눈에 파악할 수 있도록 정리해야 하죠.&lt;/strong&gt;📋 또한 태스크와 프로젝트에서 반드시 적어야 하는 사항들, 예를 들어 일정, 업무 적용 방법, 정량적 평가 방법 등을 포함해야 합니다. 이처럼 &lt;strong&gt;꼭 필요한 항목은 템플릿으로 저장하여 통일된 형식&lt;/strong&gt;📝&lt;strong&gt;으로 정리합니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;노션 사용과 관련한 내용은 노션에서 진행한 &lt;a href=&quot;https://www.notion.so/customers/socar&quot;&gt;쏘카 데이터 그룹의 노션 사용기&lt;/a&gt;를 참고해주세요 :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/11.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;

쏘카 데이터 그룹에서 사용하는 프로젝트와 태스크 템플릿. 프로젝트는 큰 그림을 파악할 수 있고, 태스크는 각 프로젝트 단계를 더 자세하게 기록하고 있습니다. 
&lt;/center&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/12.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;

노션 칸반을 이용해 태스크를 단계 별, 팀 별, 프로젝트 별로 한눈에 파악할 수 있도록 정리합니다. 
&lt;/center&gt;

&lt;p&gt;또한 ‘데일리 스크럼’과 ‘주간 정기 회의’를 통해 업무 공유 및 회의를 진행합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데일리 스크럼 : 매일 아침 출근 후 &lt;strong&gt;‘데일리 스크럼’ 시간에는 각자 하루의 업무를 공유합니다.&lt;/strong&gt;🗣️ 같은 팀 사람들이 어떤 업무를 하고 있는지 알 수 있고, 만일 관련한 데이터를 이미 살펴본 동료가 있는 경우 도움을 받을 수 있습니다.&lt;/li&gt;
  &lt;li&gt;주간 정기 회의 : 1주일에 한번 진행되는 &lt;strong&gt;주간 정기 회의는 일주일간 업무 진행 상황을 공유하는 시간입니다.&lt;/strong&gt; 🙋‍♀️🙋‍♂️ 지난주와 대비해서 업데이트된 사항을 간단하게 적어 정기회의 전에 공유합니다. 이 후 회의 시간에 각자 프로젝트 진행 상황과 분석 결과를 자세하게 설명하면서, 팀 동료들과 함께 논의합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이처럼 매일 간단하게, 매주 자세하게 팀 동료들과 업무를 공유하고 피드백을 받습니다. 과정에서 동료들과 서로 도움을 주고 받고, 좋은 인사이트를 나누게 되죠.👍&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-쏘카-데이터-그룹은-어떤-문화가-있나요&quot;&gt;5) 쏘카 데이터 그룹은 어떤 문화가 있나요?&lt;/h3&gt;

&lt;p&gt;업무 이야기할 때 빠질 수 없는 것이 사내 문화입니다. 쏘카에서는 매달 &lt;strong&gt;대표가 직접 회사의 방향성을 전 직원에게 공유하는 ‘타운홀 미팅’을 진행합니다.&lt;/strong&gt;👨‍🏫 회사 비즈니스에 대한 큰 그림을 설명하고, 각 부서의 업무와 신사업에 대해서도 소개합니다. 타운홀은 전체 구성원들이 하나의 목표를 공유하고 유기적으로 협력할 수 있도록 도와주는 시간이죠. ‘타운홀 미팅’ 외에도 ‘쏘모임’ 이라는 이름으로 사내의 각종 소모임을 지원합니다.&lt;/p&gt;

&lt;p&gt;회사 차원으로 이루어지는 프로그램 외에도, 데이터 그룹만의 독자적인 문화도 빼놓을 수 없습니다. 데이터 그룹은 자체적으로 구성원들이 더 가까워 질 수 있도록 다양한 프로그램을 운영하고 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;핍스 : 같은 데이터 그룹이라도 팀이 다르고 프로젝트가 다르면 대화의 기회가 많지 않습니다. 따라서 한 달에 두 번 &lt;strong&gt;데이터 그룹 내에서 다른 팀분들과 섞여 함께 점심을 먹습니다.&lt;/strong&gt;🍚 피플 매니저님이 2달마다 조를 바꾸기 때문에 모든 구성원과 골고루 친해질 수 있죠.&lt;/li&gt;
  &lt;li&gt;해피아워 : &lt;strong&gt;한 달에 한번 함께 외부에서 여가 활동을 합니다.&lt;/strong&gt; 🤗 🤣 데이터 그룹원이 돌아가며 자신이 하고 싶은 테마를 선정합니다. 지금까지 영화를 보거나 보드게임을 하고, 가락시장에서 맛난 저녁을 함께 먹는 등 다양한 활동을 함께 했습니다.&lt;/li&gt;
  &lt;li&gt;피플 매니저 및 면담 : 데이터 그룹은 피플 매니저가 있습니다.👨‍⚕️ 피플 매니저는 데이터 관련 발표, 블로그를 꾸준히 하고 계신 변성윤님(&lt;a href=&quot;https://zzsza.github.io/&quot;&gt;https://zzsza.github.io/&lt;/a&gt;)이 해주고 계십니다. &lt;strong&gt;한 달에 한 번 피플 매니저와 회사 생활의 고민도 이야기하고, 개인의 커리어를 잘 쌓기 위한 방법도 논의합니다&lt;/strong&gt;. 그 외에 팀장님, 그룹장님과 면담을 하면서 회사에 바라는 점과 업무 외적인 진로 고민을 이야기할 수 있습니다. (저는 회사 입사 후에도 진로 고민이 정말 많았는데, 제가 진정으로 하고 싶은 것이 무엇인지 답을 내릴 때 면담이 많이 도움이 되었습니다)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/13.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;

피플 매니저님과 면담하며 작성해주시는 개인 정보와 업무 정리. 월별 면담 일지를 보면 매달 조금씩 성장하고 있는 것을 한눈에 파악할 수 있습니다.
&lt;/center&gt;

&lt;p&gt;이렇게 쌓인 사람들간의 친밀도는 업무에도 도움을 주곤 합니다. 저는 수학적 기반이 필요한 업무를 선호하고, 자율적으로 업무를 진행하는 것을 선호합니다. &lt;strong&gt;이를 팀장님, 그룹장님과 이야기하면서 저의 강점을 강조하여 어필했는데,&lt;/strong&gt; (핍스나 해피아워를 통해 업무 외적으로도 가까워졌기에 솔직하게 이야기할 수 있었다고 생각합니다) &lt;strong&gt;결과적으로 데이터를 수학적 모델로 분석하는 증감차 업무나, 모델 기반으로 가격제 업무 등 적성에 맞는 일을 맡을 수 있었죠.&lt;/strong&gt; 🚕&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/14.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;

데이터 그룹 해피아워 시간에 함께 한 보드게임. 이 날 정말 많이 웃었던 기억이 납니다. 
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;6-쏘카-데이터-그룹은-어떻게-공부하나요&quot;&gt;6) 쏘카 데이터 그룹은 어떻게 공부하나요?&lt;/h3&gt;

&lt;p&gt;회사 생활에서의 가장 큰 고민 중 하나는, 회사의 업무와 개인 성장 사이의 괴리가 아닐까 싶습니다. 특히 &lt;strong&gt;데이터 분석 방법과 분석 툴, 프로그래밍은 계속 새로운 것들이 등장하기 때문에 끊임없이 배워야 합니다.&lt;/strong&gt; 데이터 그룹에서는 구성원들의 자기 개발을 위해 어셈블, 읽쓰정, 세미나, 스쿨 등의 프로그램을 운영하고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;어셈블&quot;&gt;어셈블&lt;/h3&gt;

&lt;p&gt;먼저 ‘어셈블’은 격주로 진행되며 데이터 그룹 전체의 세미나입니다. 2명의 발표자가 각자 30분씩 데이터 그룹 전체를 대상으로 발표합니다. 발표의 주제는 본인이 공유할 가치가 있다고 생각되는 것으로 선정하게 됩니다. 예를 들어 &lt;strong&gt;데이터 그룹에서 함께 사용하는 데이터 테이블의 형식과 처리 과정을 설명하거나, 공유하면 유익한 분석 결과를 공유합니다.&lt;/strong&gt;💁‍♀️ 아래 내용은 제가 분석한 내용을 수정한 예시입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;쏘카의 수요는 크게 5가지로 나눌 수 있습니다. 각 trend를 분석했을 때, 코로나로 인한 영향을 가장 많이 받은 수요는 b이며, 지역으로는 g입니다.&lt;/li&gt;
  &lt;li&gt;활용) 타겟 쿠폰 : 최근 a 수요의 손익이 증가하고 있습니다. 따라서 수요를 장려하기 위해 y 연령 이하, m회 이상 사용자에게 c 쿠폰을 보내야 하고, 예상되는 손익 증가는 주당 ~원입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;어셈블에서 쏘카의 수요를 분류하는 방법을 공유하였고, 다양한 업무에도 활용되었습니다.&lt;/strong&gt; 이처럼 어셈블은 유의미한 내용을 그룹 내에 공유하고, 각자 하는 일에 대해서 알아가는 시간입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/15.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;

어셈블에서 발표한 자료. 데이터 그룹의 여러 프로그램들이 저 스스로의 동기부여에 많은 도움을 줍니다. 
&lt;/center&gt;

&lt;p&gt;제 발표 외에도 데이터 엔지니어링팀의 하디의 “똥 코드 깨끗하게 만들기” 발표도 있었습니다. 파이썬을 클린하게 짜는 방법에 대해서 재치있게 설명해주셔서 매우 재미있었죠. 데이터 사이언스팀의 캐롯이 발표해주신 “수학적 모델링과 최적화”는 비즈니스 문제를 최적화 문제로 바꾸는 과정을 배울 수 있었습니다. 다들 정말 흥미롭게 들었어요! 😍😘&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;읽쓰정&quot;&gt;읽쓰정&lt;/h3&gt;

&lt;p&gt;다음으로는 팀별 스터디인 ‘읽쓰정’이 있습니다. ‘읽고 쓰고 정리하고’의 줄임말인 &lt;strong&gt;‘읽쓰정’은 스스로 공부한 내용을 공유하는 시간입니다.&lt;/strong&gt;📔 매주 2-3명이 각자 10분 정도 자신이 공부한 내용의 핵심을 설명합니다. 업무 외에 개인적으로 공부한 내용이면 분야와 상관없이 주제로 다룰 수 있습니다.  데이터 관련 다양한 이론과 라이브러리에 대한 설명, 논문 읽는 방법, 책 소개, 논문 리뷰 등 매우 다양한 주제로 진행됩니다. 꾸준히 개인 공부를 하게 도와주는 활동입니다.📚📖&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;세미나와-스쿨&quot;&gt;세미나와 스쿨&lt;/h3&gt;

&lt;p&gt;위의 어셈블과 읽쓰정은 개인이 각자 공부한 내용을 공유하며, 팀에서 진행하는 고정 활동입니다. 반면에 세미나와 스쿨은 함께 공부하며, 선택적으로 참여할 수 있습니다. 세미나의 경우 각자 인프런 강의를 듣고 일주일에 한번 함께 자료를 공부하거나, 함께 코드를 리뷰하는 등 자유롭게 진행됩니다.👯&lt;/p&gt;

&lt;p&gt;스쿨은 주최자가 정기적으로 1시간 정도 수업하고, 데이터 그룹에서 원하는 사람들이 참석하는 형식입니다. 통계학을 주제로 한 리미 스쿨이 있었고, 인생관과 신입 교육을 한 &lt;a href=&quot;https://github.com/zzsza/kyle-school&quot;&gt;카일 스쿨&lt;/a&gt;🏫도 진행 중입니다. &lt;strong&gt;저 또한 머신러닝을 주제로 야마니 스쿨을 진행했습니다. 수업을 준비하면서 내용을 더 깊이 이해할 수 있었고, 제가 아는 것을 다른 사람들에게 잘 설명하는 방법에 대해서도 배워갈 수 있었습니다.&lt;/strong&gt;👩‍🎓👨‍🎓&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/16.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;

수업을 위해 만들었던 야마니 스쿨 자료. 10회에 걸쳐 매주 자료를 만들고, 수업을 하면서 내용을 확실히 이해할 수 있었습니다. 
&lt;/center&gt;

&lt;p&gt;업무시간 외에도 공부를 하기 위해 노력하고, 스쿨과 세미나에 적극적으로 참여하는 동료들을 보며 저도 꾸준히 공부하게 됩니다. 이렇게 &lt;strong&gt;적극적으로 배우고 나누고자 하는 멋진 동료들과 함께 있다는 것이 쏘카 데이터 그룹의 큰 장점 중 하나라고 생각합니다.&lt;/strong&gt; 🚀&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;7-쏘카-데이터-그룹에서-무엇을-배웠나요&quot;&gt;7) 쏘카 데이터 그룹에서 무엇을 배웠나요?&lt;/h3&gt;

&lt;p&gt;대학생 때는 수업을 같이 듣는 학과 친구, 같은 학교의 또래 친구 등 주로 자신과 비슷한 사람들을 만나곤 합니다. 하지만 회사에선 연령부터 전공, 살아온 삶이 다른 사람들을 만나게 되고, 자연스럽게 스스로에 대해서 더 잘 알아가게 됩니다.🧘🧘‍♀️🧘‍♂️ &lt;strong&gt;저는 회사에 와서 제가 잘하는 것은 무엇인지, 제가 좋아하는 것은 무엇인지 더 잘 알 수 있었습니다.&lt;/strong&gt; 아래는 저의 예시입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;야마니 스쿨과 어셈블을 통해 &lt;strong&gt;사람들 앞에서 발표하고 설명하는 것을 좋아한다&lt;/strong&gt;는 것을 알 수 있었습니다.&lt;/li&gt;
  &lt;li&gt;업무에서 복잡한 학습 모델을 정교하게 다듬는 것 보다는 &lt;strong&gt;비즈니스의 문제를 효과적으로 풀 수 있는 수학 모델을 구상하는 것을 좋아하고, 이런 업무를 할 때 퍼포먼스가 좋다는 것&lt;/strong&gt;을 알 수 있었습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;자신에 대해 깊게 이해하게 되면서, 회사에서 제가 잘할 수 있는 부분이 무엇인지 고민하게 되었습니다. &lt;strong&gt;대체 불가능한 사람이 되기 위해 무엇을 강화하고 무엇을 보완해야 할 지에 집중하게 되었다고 할까요.&lt;/strong&gt;🙂&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/17.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;

진로, 스스로의 강점, 회사 생활에서 보완할 점 등에 대해서 고민하며 적었던 2020년의 기록들. 회사에서의 경험들이 제가 한 발자국 더 성장하는 데에 많은 도움이 되었습니다. 
&lt;/center&gt;

&lt;p&gt;업무를 다루는 방법에서도 유의미한 발전이 있었습니다. 사실 학교에서는 정제된 데이터를 이용하여 모델을 만들고, 성능 자체보다는 작동원리와 수학적 기반에 집중하는 편입니다. 하지만 실무에서는 노력 대비 최대의 효과를 보여주는 모델을 선택해야 하고, 그 효과가 운영에서 바로 나타날 수 있어야 합니다.⏳⌛&lt;/p&gt;

&lt;p&gt;프로젝트의 완성도를 0에서 100으로 표현한다면, 학부 시절의 저는 99에서 100을 만드는 것에 관심이 많았던 학생이었습니다. 현재의 것을 조금 더 개선할 수 있는 발전된 기술을 연구하는 것만이 엔지니어의 역할이라고 생각했습니다. 반면에 데이터 그룹의 업무는 빠르게 0에서 99를 만드는 것으로 설명할 수 있습니다. 완성도를 100까지 올리는 것보다는, 노력 input에 비해 프로젝트 완성도를 효과적으로 올리기 위해 노력하는 것이죠. &lt;strong&gt;즉, 프로젝트 시작부터 운영에 접목하는 전 과정을 최대한 효율적으로 진행하는 것에 집중합니다.&lt;/strong&gt;📶👨‍💻👩‍💻&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-data-group-intern-review/18.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;노력에 대비한 프로젝트 완성도의 그래프. 처음에는 단위 노력  input 당 완성도 증가량이 크지만(기울기가 가파르지만) 점점 감소하는 것을 볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;따라서 저 역시 수요 분석, 증차, 존 관리, 가격제 등 다양한 업무를 맡으면서 손익을 효과적으로 개선하기 위한 방향을 고민할 수 있었습니다. (예시를 들어 설명하는 것이 좋으시죠?👇) 아래는 업무에서 마주치게 되는 여러 고민입니다. ‘종류 1’은 공부를 통해 배울 수 있는 영역이라면, ‘종류 2’는 회사에서 배울 수 있는 영역이라고 생각합니다. 쏘카 데이터 그룹은 두 종류를 모두 배울 수 있는 곳이었죠. 1️⃣➕2️⃣&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(종류 1️⃣) 어떤 분석 방법을 사용해야 통계적으로 오류가 없을까? 또 데이터의 특성이 잘 드러날까?&lt;/li&gt;
  &lt;li&gt;(종류 1️⃣) 이 문제는 어떻게 수학적으로 모델링하고 최적화할 수 있을까?&lt;/li&gt;
  &lt;li&gt;(종류 2️⃣) 매출에 큰 영향을 주는 수요는 무엇이고, 따라서 어떤 조치를 취하는 것이 좋을까?&lt;/li&gt;
  &lt;li&gt;(종류 2️⃣) 손익을 많이 증가시킬 수 있으려면 어느 지역의, 어느 시기의 가격제를 먼저 개선해야 할까?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;또한 여러 업무를 맡는 것은 회사의 사업이 이루어지는 전체 과정을 이해하는 데에도 많은 도움이 되었습니다. 관련한 운영 부서와 잘 협업하는 방법도 배워갈 수 있었죠. &lt;strong&gt;분석 결과를 어떻게 전달해야 실무적으로 잘 활용될 수 있는지, 어떻게 가공해야 사업팀에서 자동화가 쉬울지 등을 고려하게 되었습니다.&lt;/strong&gt; 🛥️🛳️🚢&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;마무리&quot;&gt;마무리&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;데이터-분야-인턴은-어떻게-준비해야-할까요&quot;&gt;데이터 분야 인턴은 어떻게 준비해야 할까요?&lt;/h3&gt;

&lt;p&gt;데이터 분야에 관심이 많은 대학생분들께 추천하는 것은 아래와 같습니다.&lt;/p&gt;

&lt;p&gt;인턴 결정 단계에서! 🌱&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;어떤 일을 왜 하고 싶으신지 진지하게 고민&lt;/strong&gt;해보세요.
    &lt;ul&gt;
      &lt;li&gt;앞으로 일을 해야 하는 시간은 길어요. 우리는 왜 데이터 관련 일을 하고 싶은지, 나아가 더 자세히(데이터 분석가, 데이터 엔지니어, 데이터 사이언티스트, 비즈니스 분석가 등) 왜 하고 싶은지 등을 고민하면 좋을 것 같아요.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;대학원 진학을 생각하더라도, 인턴 경험을 해보면 좋아요.
    &lt;ul&gt;
      &lt;li&gt;인턴십은 회사의 조직이 어떻게 구성되어 있는지, 회사가 어떻게 운영되는지 직접 볼 수 있는 좋은 기회입니다. 또한 산업에서 실제로 사용하는 데이터를 사용해 볼 수 있는 기회에요.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;지원하는 회사에서 인턴이 맡는 업무를 정확히 파악&lt;/strong&gt;하면 좋습니다.
    &lt;ul&gt;
      &lt;li&gt;인턴에게 주도적인 업무를 주지 않는 경우가 많으니 꼭 확인해야 합니다. 회사 이름보다는 업무가 중요합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;업무를 조금이라도 경험하고 싶다면 기간은 최소한 4~6개월 이상을 추천합니다.
    &lt;ul&gt;
      &lt;li&gt;만일 회사의 분위기만 대강 파악하는 것이 목표라면 아예 방학에 짧게 진행하는 것이 좋습니다. 업무를 경험하고 싶다면? 최소 4~6개월은 필요한 것 같아요.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;인턴 준비 과정에서! 🌿&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 분석 분야라면 &lt;strong&gt;SQL의 기본적인 문법&lt;/strong&gt;은 숙지하는 것을 추천해요.
    &lt;ul&gt;
      &lt;li&gt;회사마다 구체적인 데이터 관리 방법은 다르겠지만 기본적으로 데이터는 Database에 있고, 그 데이터를 추출하기 위해 SQL이 많이 사용됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;면접 전에 &lt;strong&gt;데이터를 통해 회사가 부가적으로 얻을 수 있는 수익은 무엇일지 생각&lt;/strong&gt;해보면 좋습니다.
    &lt;ul&gt;
      &lt;li&gt;회사는 데이터 분석 자체가 목적이 아닌 수익 창출이 궁극적인 목표입니다. 따라서 비즈니스를 함께 고민할 줄 아는 분석가, 문제 정의를 할 줄 아는 분석가를 선호할 수밖에 없죠.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;왜 이 회사를 지원했는지, 회사에서 희망하는 바가 무엇인지&lt;/strong&gt; 생각해봐도 좋아요.
    &lt;ul&gt;
      &lt;li&gt;회사에서 자주 나오는 질문 중 하나인데, 왜 회사를 지원했는지 회사의 어떤 점이 끌렸고, 어떤 일을 하고 싶은지 등을 미리 고민해보면 좋아요.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;부족하지만 최대한 추천하기 위해 노력했는데, 꼭 여러분께 도움이 되었으면 좋겠습니다. 😊😋&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;앞으로-계획은-무엇인가요&quot;&gt;앞으로 계획은 무엇인가요?&lt;/h3&gt;
&lt;p&gt;원래 계획대로라면 저는 2020년 9월에 대학원에 입학할 예정이었습니다. 공부가 재미있었고 주체적으로 연구하는 방법을 배우고 싶었습니다. 쏘카 인턴을 지원한 것은 세상을 조금 경험하고 대학원에 가기 위해서였죠.&lt;/p&gt;

&lt;p&gt;쏘카 데이터 그룹에 온 후로 책이나 논문으로 정의되지 않는 것을 익히게 되었습니다. “쏘카 데이터 그룹에서 무엇을 배웠나요?”에서 설명해 드린 것처럼 실무적인 부분들, 즉 손익과 매출의 측면에서 문제를 바라보는 관점을 배울 수 있었습니다. 동시에 “쏘카 데이터 그룹은 어떻게 공부하나요?”에서 설명한 것처럼 업무 외적으로 스터디나 스쿨에서 배우는 것도 많았죠. 즉, 쏘카 데이터 그룹에서 저는 업무 실력을 향상시키고 공부를 병행하는 습관을 기를 수 있었습니다.&lt;/p&gt;

&lt;p&gt;인턴쉽이 마무리될 즈음 진로 고민도 많아졌습니다. 특히 제가 10년, 15년 후에 어떤 사람이 되고 싶은지 깊이 생각해 보았죠.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;비즈니스 센스가 있고 + 산업의 니즈를 연구 결과로 만족시켜 줄 수 있는 &lt;strong&gt;연구자&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;연구 관리 능력을 갖추고 + 비즈니스에 알맞는 기술 전략을 수립하는 &lt;strong&gt;사업가&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2번, 사업가가 되고 싶다는 결론을 내릴 수 있었습니다. 이 경우, 연구를 잘 관리하는 것도 필요한 능력입니다. 하지만 회사의 비즈니스를 정확하게 파악하고 수익성 있는 결정을 내리는 능력이 가장 중요합니다. 따라서 현재 쏘카에서 배우는 것들이 너무 소중했고, 멋있는 동료들과 많은 것을 배울 수 있는 쏘카에서 정직원으로 함께하기로 결정했습니다.🎊🎊&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;현재 목표는 회사에서 실력으로 신뢰를 줄 수 있는 사람이 되는 것입니다.&lt;/strong&gt; 점차 회사의 다양한 사업에도 참여하고 개인적으로도 꾸준히 공부해서 분석 실력과 업무 실력을 두루 갖춘 엔지니어로 성장하는 것이 다음 목표입니다. (이렇게 블로그 글에 호언장담했으니 열심히 하는 것만 남았네요😁) 그렇게 하나씩 쌓아가는 과정이 즐거움 아닐까요?😊😋 &lt;strong&gt;인생의 목표은 언제든지 바뀔 수 있다고 생각합니다. 저 또한 과거에 수많은 여러 꿈들이 있었고 여러분도 마찬가지일 테지요. 중요한 것은 자신이 진정 원하는 길을 위해 꾸준히 노력하는 것이라고 생각합니다&lt;/strong&gt;. 때론 막연하고 두렵겠지만 의미 있는 도전을 이어가다 보면 어느새 훌쩍 성장해 있는 여러분을 발견할 수 있을 거예요.🍀&lt;/p&gt;

&lt;p&gt;쏘카 데이터 그룹 채용에 관심 있다면 저희 &lt;a href=&quot;https://bit.ly/SOCAR-RECRUIT&quot;&gt;채용 페이지&lt;/a&gt;에 방문하셔서 공고를 확인해주세요. 데이터 분석가/데이터 사이언티스트, 데이터 엔지니어, 비즈니스 분석가 등 상시 채용 중입니다!&lt;/p&gt;

&lt;p&gt;긴 글 읽어주셔서 감사합니다. 혹시 제가 작성한 내용에 궁금하시거나 다른 내용이 있다면 말씀해주세요! 추후엔 머신러닝과 AI 관련한 글로 찾아뵙겠습니다!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>yamani</name></author><category term="data" /><category term="data" /><summary type="html">안녕하세요 :)</summary></entry><entry><title type="html">[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자! (1탄)</title><link href="http://localhost:4000/design/2020/07/31/component-01.html" rel="alternate" type="text/html" title="[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자! (1탄)" /><published>2020-07-31T10:00:00+09:00</published><updated>2020-07-31T10:00:00+09:00</updated><id>http://localhost:4000/design/2020/07/31/component-01</id><content type="html" xml:base="http://localhost:4000/design/2020/07/31/component-01.html">&lt;p&gt;안녕하세요, 가디와 푸린에 이어 [SOCAR FRAME 만들기] 컴포넌트 편을 작성하게 된 쏘카 디자인팀 샌디(전수빈)입니다!&lt;/p&gt;

&lt;p&gt;시리즈의 이전 글에서 소개했듯이, 쏘카 디자인팀은 지난 6월 쏘카프레임을 런칭했습니다. 해당 웹 사이트에는 파운데이션을 포함한 컴포넌트의 용도, 스타일, 용법 등이 잘 설명되어 있는데요. &lt;strong&gt;그럼, 이렇게 잘 정의되기까지 어떤 과정을 거쳤을까요?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;저는 이번 글에서 쏘카프레임 사이트에서는 볼 수 없는 &lt;strong&gt;디자이너와 개발자의 생생한 비하인드 스토리&lt;/strong&gt;를 전하려 합니다. 저희처럼 디자인 시스템을 처음 시작하는 팀과 기존에 잘 만들어진 디자인 시스템이 있는 팀에서도 참고할만한 좋은 기록이 되면 좋겠어요! 😁&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://socarframe.socar.kr/8bb3aba4a/p/8246da-button&quot;&gt;쏘카 프레임 컴포넌트 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/01.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다들 잘 아시다시피, 컴포넌트는 디자인 시스템의 효율성을 극대화하는 중요한 역할을 합니다. 저는 이 컴포넌트를 정의하고 개발하기 위해 &lt;strong&gt;디자인 팀이 개발자와 어떻게 타협하고 해답을 찾아&lt;/strong&gt; 프로젝트를 이끌어가고 있는지 1~2탄에 걸쳐 소개할게요! 시-작!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-컴포넌트-왜-필요한데&quot;&gt;1. &lt;strong&gt;컴포넌트, 왜 필요한데?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;2019년 봄 대대적인 쏘카 앱 리뉴얼 런칭 후 서비스가 고도화됨에 따라 새 페이지는 계속 늘어나고, 일관적인 사용자 경험을 위해 동일한 UI를 활용하는 일이 잦아졌습니다. 반복되는 불편함에 디자인시스템과 컴포넌트의 필요성은 모두가 공감하는 아젠다가 됐죠. 디자인 시스템은 산업혁명의 발생처럼 &lt;strong&gt;필연적인 결과&lt;/strong&gt;였습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-똑같은-ui-어떻게-재사용하고-있어요&quot;&gt;1) &lt;strong&gt;똑같은 UI, 어떻게 재사용하고 있어요?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--디자이너는&quot;&gt;💬  &lt;strong&gt;디자이너는…&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;디자인 시스템을 도입하기 전, &lt;strong&gt;디자이너들은 스케치 심볼 기능을 사용해&lt;/strong&gt; 비교적 편하게으로 UI를 재사용하고 있었습니다. 스케치의 Master Symbol로 모든 Instance를 제어했죠. 그러나, 이 기능은 단순히 동일한 UI를 연결하는 기능일 뿐 각각의 상태와 용도, Interaction 등을 정의할 수 없기 때문에 디자이너들은 UI 스타일 가이드 문서로 최소한의 규칙을 공유했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/02.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
스케치 심볼과 UI 스타일 가이드
&lt;/center&gt;

&lt;p&gt;하지만, 아무리 디자이너들끼리 같은 규칙을 사용해도 매번 다른 개발자가 개발하면 당연히 조금씩 변형되겠죠? 그래서 디자이너들은 항상 &lt;strong&gt;똑같은 UI도 매번 다시 확인&lt;/strong&gt;해야 했습니다. (예를 들어 버튼의 Pressed 상태를 놓친 건 아닌지…? 등등)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--개발자는&quot;&gt;&lt;strong&gt;💬  개발자는…&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;그럼, 개발자들은 똑같은 UI를 어떻게 재사용하고 있었을까요? 누군가 먼저 코드를 설계해놓으면 그 &lt;strong&gt;코드를 비슷하게 쓰거나&lt;/strong&gt;, 해당 UI가 어느 화면에 개발되어 있는지 알 수 없을 땐 &lt;strong&gt;새로 개발하기도 했습니다.&lt;/strong&gt; 이런 크고 작은 불편함이 쌓여, 자연스럽게 컴포넌트 개발에 대한 논의를 시작했습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-말-모아-마음-모아-디자인-시스템-한번-해-보자구요&quot;&gt;2. &lt;strong&gt;말 모아, 마음 모아. 디자인 시스템. 한번 해 보자구요!&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;이제, 저희가 컴포넌트를 개발하며 얻은 경험을 몇 가지 소개할게요! 그에 앞서, 디자인 시스템의 궁극적인 목적은 모두가 효율적으로 일하는데 있으며, 정답은 없다고 말하고 싶습니다. 저희 팀도 처음 해보는 일이기에 시행착오도 있었지만, 덕분에 선입견 없이 저희에게 가장 필요한 방식으로 디자인 시스템을 구축할 수 있었습니다!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-네이밍-통일하기-aka-말모이&quot;&gt;1) &lt;strong&gt;네이밍 통일하기 a.k.a 말모이&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;영화 말모이를 아시나요? 1940년대 일제 강점기, 전국의 말을 모아 우리말 사전을 만들었던 조선어학회 사건을 다룬 작품인데요. 영화에는 각 지방 사람들이 가위, 가새, 강우, 까새 등 다르게 부르는 단어를 모아 표준어를 만드는 장면이 나옵니다. 말이 곧 그 민족의 정체성을 나타내듯, 저희가 컴포넌트를 개발하면서 가장 먼저 한 일도 각 팀이 다르게 부르던 &lt;strong&gt;컴포넌트를 하나의 용어와 용도로 통일&lt;/strong&gt;하는 일이었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/03.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-버튼-너의-이름은&quot;&gt;2) &lt;strong&gt;버튼! 너의 이름은?&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;기존에는 각 팀이 사용하는 툴에서만 관리하고 있어서 이름을 통일할 필요가 없었지만, 이제 디자이너와 각 플랫폼 개발자가 함께 사용하게 되면서 &lt;strong&gt;모두에게 친화적인 이름&lt;/strong&gt;이 필요했습니다. 단순히 부르기 편한 이름이 아니라, 용도와 스타일 그리고 타입 등이 &lt;strong&gt;명료하게 구분되어야 하고 모두가 사용하기 편해야 하죠.&lt;/strong&gt; 그렇게 우리는 새로운 컴포넌트 네이밍 룰을 만들기로 했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/04.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;새로운 네이밍 룰을 정하기에 앞서, &lt;strong&gt;현재 사용하고 있는 이름을 파악&lt;/strong&gt;할 필요가 있었습니다. 우리는 시트를 하나 만들어, 각자 컴포넌트별 현재 사용 중인 이름을 적었습니다. 그 결과, 위 이미지와 같이 같은 버튼도 다양한 이름으로 부르고 있었으며 각자 구분하는 기준도 다르다는 사실을 알았습니다. &lt;strong&gt;각자 툴에서 버튼을 생성하고 관리하는 방식에 따라 필요한 정보가 달랐던 거죠.&lt;/strong&gt; 가령, 디자인팀은 컬러를 포함한 버튼의 모든 속성을 구분하고, 개발팀은 각자 필요한 정보만 간략하게 구분하다 보니 결국 동일한 버튼이 다양한 이름을 가지게 되었습니다.&lt;/p&gt;

&lt;p&gt;하지만, 이제 모든 팀이 동일한 규격과 형태의 버튼의 “틀(프레임)”을 만들어두고 가져다 써야 하기 때문에 형태에 기반한 &lt;strong&gt;새로운 이름이 필요&lt;/strong&gt;했습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-컴포넌트-네이밍-룰&quot;&gt;3) &lt;strong&gt;컴포넌트 네이밍 룰&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;새로운 네이밍 룰을 만들면서, 우리는 &lt;strong&gt;꼭 필요한 정보만 넣어 이름의 길이를 최대한 줄이자!&lt;/strong&gt; 라는 규칙을 세웠습니다. 그러려면 우리에게 꼭 필요한 정보가 무엇인지 알 필요가 있었죠. 디자이너들은 간단한 개발자 인터뷰를 통해 몇 가지 중요한 포인트를 발견했고 이를 토대로 단순하지만 강력한 규칙을 마련했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/05.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;                                                       컴포넌트 네이밍 룰에 대한 개발자 인터뷰
&lt;/center&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/06.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;                                                              새롭게 통일한 컴포넌트 네이밍 룰
&lt;/center&gt;

&lt;p&gt;새로운 네이밍 룰이 적용된 버튼을 살펴볼까요? 쏘카프레임의 버튼은 우선 3가지 Size와 3가지 디자인 Type으로 구분합니다. 개발자분들의 의견에 따라 Main, Primary와 같은 용도나 위계로 구분하기보다, &lt;strong&gt;실제 형태(Shape)를 기준으로 구분&lt;/strong&gt;했습니다. 대신, 용도와 상태 같은 상세한 정보는 컴포넌트를 정의할때 더 상세히 명시하기로 했습니다.&lt;/p&gt;

&lt;p&gt;새로운 네이밍 룰의 가장 큰 특징은 &lt;strong&gt;컴포넌트 명(Button)이 가장 뒤에&lt;/strong&gt; 온다는 사실인데요. 이 또한 모든 플랫폼의 개발자가 개발 환경에서 가장 편리하도록 의견을 반영한 결과입니다. 그리고 정확한 커뮤니케이션을 위해 BTN과 같은 &lt;strong&gt;약어를 사용하지 않고 Button 풀네임으로 명시&lt;/strong&gt;합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-컴포넌트와-테마theme-&quot;&gt;4) &lt;strong&gt;컴포넌트와 테마(Theme) 🎨&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/07.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;                                                         Large_Fill_Button 의 다양한 테마
&lt;/center&gt;

&lt;p&gt;그런데 말이죠, 위의 네이밍 룰에서 Button 뒤에 “Theme”는 무엇일까요?  “Theme”는 &lt;strong&gt;같은 컴포넌트지만, 구성된 컬러가 다를 때 표기&lt;/strong&gt;합니다. 예를 들어 모양과 텍스트 스타일은 완전히 같은데 컬러만 다를 경우, 매번 새로운 컴포넌트로 등록해야 할까요? 🙅 아닙니다. 그럼 너무 비효율적이잖아요? 그래서 우리는 같은 컴포넌트에서 속성 컬러만 수정하는 “Theme”라는 개념을 사용합니다. 이를 통해 형태의 일관성과 컴포넌트의 효율성을 유지하면서도 다양한 버튼을 유연하게 사용할 수 있는 확장성을 살렸습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/08.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
테마까지 구분한 모든 버튼 컴포넌트의 이름
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-실무에서-활용-방법&quot;&gt;5) 실무에서 활용 방법&lt;/h3&gt;

&lt;p&gt;어렵게 통일한 네이밍은, 디자이너와 개발자가 &lt;strong&gt;협업을 할 때 진가를 발휘&lt;/strong&gt;합니다. 디자이너가 스케치에서 심볼을 내보내면, 개발자는 제플린에서 컴포넌트 명을 확인한 후, 미리 구축해놓은 컴포넌트를 불러다 사용합니다.&lt;/p&gt;

&lt;p&gt;하지만, 아쉬운 점은 스케치에서 심볼의 Grouping 기능을 활용하려면, &lt;strong&gt;심볼명에 [카테고리명+/]&lt;/strong&gt; 를 더해서 사용해야 합니다. 그래서 우리는 컴포넌트 명의 &lt;strong&gt;맨 마지막 / 앞&lt;/strong&gt; 까지는 &lt;strong&gt;디자이너만 사용하는 영역&lt;/strong&gt;, 컴포넌트 명의 &lt;strong&gt;맨 마지막 / 뒤&lt;/strong&gt; 부터는 &lt;strong&gt;개발자가 확인하는 영역&lt;/strong&gt;으로 땅땅땅! 규칙을 정해 사용하고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/09.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-컴포넌트-어떻게-만들어야-편할까-origin-option&quot;&gt;3. 컴포넌트, 어떻게 만들어야 편할까? &lt;strong&gt;(Origin, Option)&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;이름을 정했으니 이제 본격적으로 컴포넌트를 만들어야겠죠? 이번에도 버튼을 예로 살펴보겠습니다. 쏘카에는 아래와 같이 5종류의 버튼이 있습니다. 이 버튼들을 어떻게 구축해야 개발자와 디자이너가 실제로 사용할 때 효율적일까요? 여러 번의 열띤 논의를 이어간 결과, 저희는 &lt;strong&gt;개발 환경과 유사한 “Origin(고정 속성)”과 “Option(가변 속성)”&lt;/strong&gt; 이라는 개념을 만들었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/10.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
쏘카프레임 버튼 컴포넌트
&lt;/center&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/11.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
컴포넌트 개발 방식에 대한 개발자 의견
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-origin고정-속성&quot;&gt;1) &lt;strong&gt;Origin(고정 속성)&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;버튼은 용도에 따라 각각 고유한 형태와 상태를 가지고 있습니다. 저희는 이 특징들을 &lt;strong&gt;거의 변하지 않는 그 버튼만의 아이덴티티로, “Origin”이라 정의&lt;/strong&gt;했습니다. 만약 Origin 속성 중 하나라도 다르면, 새로운 버튼 컴포넌트로 구분합니다. 예를 들어 아래 버튼의 Origin은 사이즈(높이만 고정됨, 너비는 주로 기기 비율에 따라 대응함)와 텍스트 스타일입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/12.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
Origin 예시
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-option가변-속성&quot;&gt;2) &lt;strong&gt;Option(가변 속성)&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;같은 버튼이지만, &lt;strong&gt;Theme에 따라 달라지는 속성을 “Option”이라 정의&lt;/strong&gt;합니다. 옵션은 자주 바뀔 여지가 있는 속성인데, 주로 컴포넌트를 이루는 각 부분의 컬러가 해당돼요. 만약 이미 있는 형태의 버튼의 새로운 컬러가 필요할 경우, 몇 가지 Option 값 만 설정하면 순식간에 새로운 버튼 완성입니다! 🎉&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/13.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
Option 예시
&lt;/center&gt;

&lt;p&gt;디자인 시스템을 활용하면 단순히 가져다 쓰기 쉬워지는 것뿐만 아니라, 컴포넌트의 추가 및 수정 또한 훨씬 간단해져 다양한 상황에 신속하게 대응할 수 있어요.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-실무에서-활용-방법&quot;&gt;3) 실무에서 활용 방법&lt;/h3&gt;

&lt;p&gt;실제 디자인, 개발 환경에서는 어떻게 Origin과 Option을 개념을 활용할까요? &lt;strong&gt;디자이너는 스케치에서 Symbol Overrides&lt;/strong&gt;를 활용해 Option 값을 수정하고 개발자는 개발 환경에서 &lt;strong&gt;미리 Option 값을 쉽게 수정할 수 있도록 세팅&lt;/strong&gt;해놓고 사용합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/14.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
각 툴에서 컴포넌트 옵션을 설정하는 방식
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-컴포넌트만을-위한-컬러-꼭-필요할까&quot;&gt;4. 컴포넌트만을 위한 컬러, 꼭 필요할까?&lt;/h2&gt;

&lt;p&gt;앞선 글(파운데이션 컬러 글 링크)에서 설명했듯이, 쏘카프레임의 컬러는 크게 베이직 컬러와 시멘틱 컬러로 구분합니다. 처음엔 저도 단순하게 컴포넌트에 바로 베이직과 시멘틱 컬러를 적용했는데요. 그러자 아래와 같이 &lt;strong&gt;일부 컴포넌트에서 라이트와 다크 모드 컬러가 1:1 매칭이 되지 않는 상황이 발생&lt;/strong&gt;했습니다. (여러분, 쉬운 일이 없어요…😂)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/15.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
문제의 발단: 라이트와 다크모드에서 베이스 컬러가 다른 버튼
&lt;/center&gt;

&lt;p&gt;이 문제를 풀기 위한 힌트는 &lt;a href=&quot;https://spectrum.adobe.com/&quot;&gt;Adobe 디자인 시스템 Spectrum&lt;/a&gt;에서 얻었습니다. 바로, &lt;strong&gt;각 컴포넌트만을 위한 컬러를 생성하는 것&lt;/strong&gt;입니다. 컴포넌트별로 컬러를 한 번 더 묶으면 하나의 컬러로 다크 모드와 라이트 모드에서 서로 다른 컬러를 적용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/16.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
Component-specific tokens / 출처_Spectrum
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-컴포넌트-컬러-정의하기&quot;&gt;1) &lt;strong&gt;컴포넌트 컬러 정의하기&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;위에서 말했듯이 범용으로 정의한 기존 컬러셋 만으로는 컴포넌트 대응에 어려움이 있었기 때문에, 우리는 &lt;strong&gt;시멘틱 컬러에 컴포넌트 컬러를 추가&lt;/strong&gt;했습니다. 컴포넌트 컬러는 각 &lt;strong&gt;컴포넌트만을 위한 다크와 라이트 컬러를 조합&lt;/strong&gt;해 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/17.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;                                                                    컴포넌트 컬러 개념
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-두-개의-컬러를-하나로&quot;&gt;2) 두 개의 컬러를 하나로!&lt;/h3&gt;

&lt;p&gt;컴포넌트 컬러를 사용하면, 동일한 버튼의 베이스 컬러가 &lt;strong&gt;다크와 라이트 모드에서 다르더라도 하나의 컬러 명을 사용&lt;/strong&gt;할 수 있고 나아가 해당 컴포넌트만 컬러를 변경할 수 있어 관리도 쉬워집니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/18.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
버튼 컴포넌트 컬러
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-현재-방식의-아쉬운-점&quot;&gt;3) 현재 방식의 아쉬운 점&lt;/h3&gt;

&lt;p&gt;우여곡절 끝에 정리한 컴포넌트 컬러도, &lt;strong&gt;완벽한 방식은 아닙니다!&lt;/strong&gt; 눈치채신 분들도 계시겠지만, 현재 방식은 컴포넌트의 종류가 많아지면 &lt;strong&gt;컴포넌트 컬러도 그만큼 비례해서 늘어나는 방식&lt;/strong&gt;이기 때문인데요.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/19.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
컴포넌트의 수만큼 늘어나는 컴포넌트 컬러
&lt;/center&gt;

&lt;p&gt;이러한 한계를 알면서도 강행한 이유는 사실, &lt;strong&gt;단순히 시간이 부족&lt;/strong&gt;해서였습니다. 컴포넌트 컬러를 활용하는 가장 좋은 방법은, 모든 컴포넌트에 대응하는 통합 컬러 체계를 구축하는 것이지만, 그만큼 고려할만한 사항이 많았기 때문에 꽤 많은 리소스가 필요한 일이죠.&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;1) 컴포넌트 컬러 체계까지 완벽히 구성한 뒤 시작할까,&lt;/strong&gt; (&lt;strong&gt;2) 우선 개발한 뒤 사용해보며 점진적으로 개선할까&lt;/strong&gt; 👈 이 두 가지 중 하나를 선택해야 하는 상황에서 저희는 (2)안을 선택했습니다. 일단 빠르게 컴포넌트를 구축해서 얻는 이점이 추후 컴포넌트 컬러를 통합하는데 드는 공수보다 더 크리라 판단했어요!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/20.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
우리가 바라는 미래의 컴포넌트 컬러 체계
&lt;/center&gt;

&lt;p&gt;&lt;img src=&quot;/img/component-01/21.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;
출처 : https://twitter.com/ogu_official_kr
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;지금까지&quot;&gt;지금까지…&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;컴포넌트 구축이 왜 필요한지&lt;/li&gt;
  &lt;li&gt;컴포넌트 네이밍 룰을 구축하고, 실제로 사용하는 방법&lt;/li&gt;
  &lt;li&gt;개발 친화적으로 컴포넌트를 구축하는 방식 (Option, Origin)&lt;/li&gt;
  &lt;li&gt;컴포넌트 컬러가 필요한 이유와 아쉬운 점&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;👆 이런 순서로, 디자이너와 개발자가 컴포넌트를 구축하면서 얻은 경험을 적어봤습니다! 도움이 되셨나요? 디자인 시스템 특히 컴포넌트는 처음 만들기는 까다롭지만, 실제 사용하면서 얻는 &lt;strong&gt;편리함과 뿌듯함은 그보다 훨씬 크다고 장담&lt;/strong&gt;할 수 있으니까 모두 포기하지 마세요!!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;다음-글에서는&quot;&gt;&lt;strong&gt;다음 글에서는…&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;이어서 다음 글에서는 &lt;strong&gt;컴포넌트를 효율적으로 구축하기 위한 프로세스&lt;/strong&gt;와 수많은 컴포넌트 중 어떤 컴포넌트를 먼저 개발해야 할지 정하기 위한 &lt;strong&gt;컴포넌트 개발 우선순위 워크숍&lt;/strong&gt;에 대해 소개할게요! 커밍쑨!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;쏘카-프로덕트-디자인팀의-영상--글-모음&quot;&gt;쏘카 프로덕트 디자인팀의 영상 &amp;amp; 글 모음&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;네이버 테크톡에서 진행한 &lt;a href=&quot;https://tv.naver.com/v/15842187&quot;&gt;&lt;strong&gt;“쏘카프레임 구축 배경과 과정”&lt;/strong&gt; 발표 영상&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/06/23/socar-design-system-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #1] 쏘카의 디자인 시스템 맛보기&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/10/dark-mode-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가!&lt;/strong&gt; (1탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/22/dark-mode-02.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가!&lt;/strong&gt; (2탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/31/component-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자!&lt;/strong&gt; (1탄)&lt;/a&gt;(현재 글)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/09/08/component-02.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자!&lt;/strong&gt; (2탄)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>sandy</name></author><category term="design" /><category term="design_system" /><summary type="html">안녕하세요, 가디와 푸린에 이어 [SOCAR FRAME 만들기] 컴포넌트 편을 작성하게 된 쏘카 디자인팀 샌디(전수빈)입니다!</summary></entry><entry><title type="html">[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가! (2탄)</title><link href="http://localhost:4000/design/2020/07/22/dark-mode-02.html" rel="alternate" type="text/html" title="[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가! (2탄)" /><published>2020-07-22T10:00:00+09:00</published><updated>2020-07-22T10:00:00+09:00</updated><id>http://localhost:4000/design/2020/07/22/dark-mode-02</id><content type="html" xml:base="http://localhost:4000/design/2020/07/22/dark-mode-02.html">&lt;p&gt;안녕하세요. 쏘카 프로덕트 디자인팀 가디, 푸린입니다!&lt;/p&gt;

&lt;p&gt;이번 글에서는 1탄에서 열심히 다크 모드에 대해 공부한 내용을 토대로,&lt;/p&gt;

&lt;p&gt;쏘카의 새로운 컬러 시스템을 실제로 어떻게 구축했는지 낱낱이 얘기해보려 해요.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_01.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;본문으로 들어가기 전에, 모든 디자인이 그렇듯 컬러 시스템 정리에 정답은 없고 각 서비스 디자인에 맞는 방법으로 하면 된다는 점을 염두하면서 컬러 정리의 한 가지 방법으로 생각하고 읽어주시면 감사하겠습니다!&lt;/p&gt;

&lt;p&gt;잠깐, 혹시 아직도 &lt;a href=&quot;https://tech.socarcorp.kr/design/2020/06/23/socar-design-system-01.html&quot;&gt;디자인 시스템 맛보기&lt;/a&gt;,  &lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/10/dark-mode-01.html&quot;&gt;다크 모드 1탄&lt;/a&gt; 안 읽으셨다면 보고 오셔도 좋을 것 같아요 :)&lt;/p&gt;

&lt;p&gt;특히 다크 모드 1탄을 읽고 오시면 이번 글이 더 쉽게 이해되고 유익할 거에요. 🤩&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-쏘카-컬러-시스템--베이직-컬러와-시멘틱-컬러를-중심으로&quot;&gt;1. 쏘카 컬러 시스템 : 베이직 컬러와 시멘틱 컬러를 중심으로&lt;/h2&gt;

&lt;p&gt;새로운 컬러 시스템을 설명하기 전에 먼저 ASIS(기존) 컬러시스템을 잠깐 살펴볼게요.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ASIS 컬러 시스템&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_02.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;기존에는 오직 컬러를 명도와 기능에 따라서 정의했습니다. 그리고, 각각의 컬러가 어떤 UI 요소에 적용한다는 가이드라인이 있어, 해당 UI를 사용할 때 가이드라인을 보고 그에 맞는 컬러를 가져 와서 사용하고 있었습니다. (예를 들어, 라인에는 grey02 컬러를 사용하는 방식으로 말이죠.)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TOBE 컬러 시스템&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;새로운 컬러 시스템은 컬러는 크게 두 가지로 나누었습니다. 기존처럼 명도와 기능에 따라서 색상을 정의한 &lt;strong&gt;베이직 컬러&lt;/strong&gt;와 UI 요소에 사용되는 &lt;strong&gt;시멘틱 컬러로 나누었어요.&lt;/strong&gt; 이 중 &lt;strong&gt;베이직 컬러&lt;/strong&gt;는 쏘카의 ASIS 시스템을 보완하고 추가하여 재구축하였고, &lt;strong&gt;시멘틱 컬러&lt;/strong&gt;는 기존에 없던 개념이었기 때문에 온전히 새롭게 구축했습니다.&lt;/p&gt;

&lt;p&gt;그리고 모든 컬러는 라이트 모드와 다크 모드의 컬러 시스템이 &lt;strong&gt;1:1 대응이 되도록 2벌씩&lt;/strong&gt; 만들었습니다.&lt;/p&gt;

&lt;p&gt;👇 &lt;strong&gt;ASIS TOBE 컬러시스템&lt;/strong&gt; 구조를 간단히 정리해 보았습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_03.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그럼 이제 베이직 컬러와 시멘틱 컬러로 나누어 자세히 살펴볼게요.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-베이직-컬러&quot;&gt;1) 베이직 컬러&lt;/h3&gt;

&lt;p&gt;베이직 컬러는 컬러 팔레트의 개념으로 명도 혹은 기능과 서비스에 따라 정의합니다.&lt;/p&gt;

&lt;p&gt;베이직 컬러는 앞서 말했듯, 기존 쏘카 컬러 시스템을 보강하여 재구축했습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;컬러-구조-변경&quot;&gt;&lt;strong&gt;컬러 구조 변경&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;위의 ASIS 컬러 시스템 이미지를 보시면 기존에는 컬러를 크게 main과 sub로 나누었던 것을 볼 수 있는데요. 해당 방식보다 색조의 유무를 기준으로 tint와 grey로 나누는 것이 좀 더 명확하고 확장성이 있다고 판단하여 아래와 같이 새롭게 구조를 나누었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_04.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;새로운 컬러 구조 :&lt;/strong&gt; 색조 유무에 따라서 tint와 grey로 나누고 tint를 다시 main과 sub , service컬러로 나누었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;색상-스펙트럼-보강&quot;&gt;&lt;strong&gt;색상 스펙트럼 보강&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;ASIS 컬러 시스템에서는 한가지 컬러를 최대 7가지 명도를 분류했는데요,
재구축을 하면서 좀 더 다양하게 활용할 수 있도록 최대 8가지로 컬러로 보강하고, 색상 뒤에 10의 자리 숫자를 붙여서 중간에 컬러가 들어올 수 있도록 확장성 있게 컬러명을 수정하였습니다. (예를 들어 grey010과 grey020사이 명도의 컬러가 필요할 때 grey015로 명명할 수 있도록 말이죠.)&lt;/p&gt;

&lt;p&gt;또한, grey컬러 뿐만 아니라 tint컬러 중 main 컬러도 더 넓은 스펙트럼의 컬러를 보강했습니다. (&lt;a href=&quot;https://material.io/design/color/the-color-system.html#tools-for-picking-colors&quot;&gt;머테리얼 팔레트 generator&lt;/a&gt;을 사용해서 컬러를 최초 추출하고, 디테일한 값을 수정하여 컬러를 구축했습니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_05.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;👆 머테리얼 팔레트 generator&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;새롭게 정리한 베이직 컬러 입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;반으로 쪼갠 부분의 상단이 라이트 모드, 하단이 다크 모드 컬러입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_06.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;개발상의 베이직 컬러 시스템&lt;/strong&gt;입니다. (각각에 라이트 모드(Any Apearance) : 다크 모드(Dark Appearance) 컬러가 쌍으로 들어간 것을 볼 수 있습니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_07.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-시멘틱-컬러&quot;&gt;2) 시멘틱 컬러&lt;/h3&gt;

&lt;p&gt;시멘틱 컬러는 사용되는 목적과 UI에 따라 네이밍하고 적용하는 컬러를 말하며, 시멘틱 컬러가 있음으로써 컬러의 관리와 유지보수가 쉬워지며 다크 모드에도 최적화된 컬러로 화면을 구성할 수 있습니다.&lt;/p&gt;

&lt;p&gt;( 쏘카에서 다크 모드를 대응을 위해 꼭 필요한 개념으로 사용하였습니다. &lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/10/dark-mode-01.html&quot;&gt;1탄&lt;/a&gt;에서 자세히 설명하고 있어요! )&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기본-개념과-개발-방식&quot;&gt;기본 개념과 개발 방식&lt;/h3&gt;

&lt;p&gt;시멘틱 컬러는 컬러 팔레트의 개념인 베이직 컬러를 가져와서 사용합니다.&lt;/p&gt;

&lt;p&gt;디자인뿐만 아니라 &lt;strong&gt;코드상에서도 시멘틱 컬러에 베이직 컬러를 매핑&lt;/strong&gt;해서 개발하였습니다.&lt;/p&gt;

&lt;p&gt;즉, 아래와 같이 베이직 컬러를 특정 hex코드로 명명하고, 시멘틱 컬러에 베이직 컬러를 다시 가져다 입히는 방식입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_08.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;👇  &lt;strong&gt;디자인 파일&lt;/strong&gt; : 베이직 컬러(grey010)를 시멘틱 컬러(background_elevated)에 입힌 모습&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_09.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;👇  &lt;strong&gt;코드(swift)&lt;/strong&gt; : 베이직 컬러(white/grey/black)를 시멘틱 컬러(background~)에  입힌 모습&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_10.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;다크-모드에-최적화된-컬러-대응이-가능한-이유&quot;&gt;다크 모드에 최적화된 컬러 대응이 가능한 이유&lt;/h3&gt;

&lt;p&gt;앞서 다크 모드 대응을 위해서는 시멘틱 컬러가 꼭 필요하며, 시멘틱 컬러가 있음으로써 다크 모드에 최적화된 컬러 대응이 가능하다고 여러 번 설명했는데요. 이를 좀 더 자세히 설명하면, 바로 &lt;strong&gt;시멘틱 컬러가 라이트 모드와 다크 모드에서 각각 다른 베이직 컬러를 참조&lt;/strong&gt;할 수 있기 때문입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_11.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 한 번 이 코드를 볼까요? 오른쪽 하이라이트한 부분을 보면, 한가지 &lt;strong&gt;시멘틱 컬러가 라이트 모드와 다크 모드에서 각기 다른 베이직 컬러를 참조&lt;/strong&gt;한 것을 볼 수 있어요.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_12.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;👆  background_elevated컬러(시멘틱 컬러)에는 라이트 모드의 경우 white(베이직 컬러)가 맵핑되어 있고 다크 모드에는 grey010(베이직 컬러)이 매핑되어 있습니다.&lt;/p&gt;

&lt;p&gt;이렇게 각각의 모드에서 각기 다른 베이직 컬러값을 참조한 시멘틱 컬러를 만들 수 있기 때문에 &lt;strong&gt;다크와 라이트가 반전 되어서 시멘틱 컬러가 1:1 대응되어도 다크 모드에서 최적화된 컬러의 화면 구현이 가능해지는 것입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*컬러 맵핑 참고 레퍼런스&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Adobe Spectrum과 Carbon Design System에서도 디자인 토큰이라는 용어로 저희가 얘기하는 베이직 컬러의 개념을 UI에 적용되는 컬러로 맵핑 시키는 작업을 하고 있는 것을 볼 수 있어 궁금하신 분들은 링크로 들어가 더 공부해보셔도 좋을 것 같습니다!&lt;/p&gt;

&lt;p&gt;👇 Adobe Spectrum &lt;a href=&quot;https://spectrum.adobe.com/page/design-tokens/&quot;&gt;[ 자세히 보기 ]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_13.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;👇 Carbon Design System &lt;a href=&quot;https://www.carbondesignsystem.com/guidelines/color/usage&quot;&gt;[ 자세히 보기 ]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_14.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;주요-시멘틱-컬러-설명&quot;&gt;주요 시멘틱 컬러 설명&lt;/h3&gt;

&lt;p&gt;그럼 이제 쏘카의 주요 시멘틱 컬러를 대표로 두 가지 살펴볼게요!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Background Color&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;base와 elevated 컬러
Background color를 기본 배경 컬러인 base와 한 단계 위에 올라가는 레이어의 배경색상인 elevated로 구분했습니다.  &lt;strong&gt;(&lt;/strong&gt; 1탄에서 설명했듯이, 다크 모드에서는 가장 하단의 레이어와 그 위에 올라가는 레이어가 색상으로 구분되어야 합니다. - 다크 모드에서는 그림자의 표현이 두드러질 수 없기 때문입니다. )&lt;/p&gt;

&lt;p&gt;grouped 컬러
그리고 한 화면 안에 컨텐츠가 블록으로 나누어져 있는 화면에 사용하는 grouped 색상을 별도로 마련하여, 컨텐츠 블록에는 사용되는 group_contents와 하단 베이스 컬러로 사용되는 grouped_base컬러를 정의하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_15.png&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shadow Color&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;쉐도우 컬러는 &lt;strong&gt;라이트와 다크 모드에서 의미상으로 1:1 대응하지 않는 시멘틱 컬러&lt;/strong&gt;입니다. 그림자는 라이트 모드에서는 보여야 하는데, 다크 모드에서는 보이지 않아야 하기 때문이죠.&lt;/p&gt;

&lt;p&gt;이런 경우 &lt;strong&gt;시멘틱 컬러 자체는 각각의 모드에서 똑같은 이름으로 만들지만, 다크 모드에서는 그림자 색상이 필요하지 않아 해당 컬러에 비어있는 색상 값을 적용하는 방식&lt;/strong&gt;으로 개발하였습니다.&lt;/p&gt;

&lt;p&gt;의미상 1:1 대응이 안 될 수 밖에 없는 컬러를 개발상, 디자인 파일 상 1:1 대응이 되도록 한 것입니다.&lt;/p&gt;

&lt;p&gt;👇  &lt;strong&gt;개발상의 shadow 컬러&lt;/strong&gt; (Dark Appearance가 비어있음)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_16.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;👇 &lt;strong&gt;디자인 정의&lt;/strong&gt; (Dark mode에 none값 적용)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_17.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;📌 참고 : 컬러 네이밍 방법&lt;/p&gt;

&lt;p&gt;다크 모드의 컬러와 라이트 모드의 컬러 속성이 다른 경우, 컬러의 이름은 라이트 모드 기준으로 작명하되 이름 뒤 &lt;code class=&quot;highlighter-rouge&quot;&gt;(*괄호)&lt;/code&gt;안에 다크 모드 컬러 속성을 추가로 표기하도록 했습니다. (개발상의 컬러 이름에는 포함되지 않지만, 디자이너들이 인지 가능한 방향으로 네이밍하였어요.)&lt;/p&gt;

&lt;p&gt;즉, 쏘카의 Shadow 컬러에는 basic과 thin이 있는데, 둘 다 다크 모드에서는 표현되지 않아야 하기에 컬러 이름을 shadow_basic(*none*)* / shadow_thin(*none) 으로 작명하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;다크-모드-시멘틱-컬러-선정-시-고려했던-것&quot;&gt;&lt;strong&gt;다크 모드 시멘틱 컬러 선정 시 고려했던 것&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;추가로, 다크 모드에서 background 색상과 앞에 나오는 텍스트, 컴포넌트 컬러 들의 대비를 체크할 때 &lt;a href=&quot;https://webaim.org/resources/contrastchecker/&quot;&gt;콘트라스트 체커&lt;/a&gt;를 통해서 한 번 더 검수 하였습니다. (WCAG 기준 최소 명암비 4.5 이상이 적절합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_18.png&quot; alt=&quot;&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;더 많은 시멘틱 컬러가 궁금하시다면 &lt;a href=&quot;https://socarframe.socar.kr/8bb3aba4a/p/514072-color/t/152892&quot;&gt;SOCAR FRAME&lt;/a&gt; 에서 확인해주세요! 😉&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-컬러-시스템-어떻게-스케치로-작업하고-제플린에-반영했을까&quot;&gt;2. 컬러 시스템. 어떻게 스케치로 작업하고 제플린에 반영했을까?&lt;/h2&gt;

&lt;p&gt;그렇다면 이렇게 정리한 컬러 시스템을 어떻게 스케치로 작업하고, 개발자가 인지할 수 있도록 제플린에 반영했을까요?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-베이직-컬러와-시멘틱-컬러의-반영&quot;&gt;1) 베이직 컬러와 시멘틱 컬러의 반영&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;툴의-한계로-봉착한-난관&quot;&gt;툴의 한계로 봉착한 난관&lt;/h3&gt;

&lt;p&gt;먼저, 저희는 스케치로 디자인 작업을 하고 제플린을 통해서 개발자들에게 전달하고 있어요.&lt;/p&gt;

&lt;p&gt;새로운 컬러 시스템을 전달하기 위해서 가장 큰 난관이 있었는데요, 바로 &lt;strong&gt;제플린 Color palette 에는 같은 Hex 코드의 컬러를 다른 이름으로 중복해서 등록할 수 없다는 점&lt;/strong&gt;이에요.&lt;/p&gt;

&lt;p&gt;저희가 새로 구축한 시멘틱 컬러는 두 컬러가 동일한 Hex코드를 가질 수 있기 때문에 이것이 큰 문제가 되었어요.&lt;/p&gt;

&lt;p&gt;👇 #FFFFFF는 background_base 컬러임과 동시에 background_elevated 컬러입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_19.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;( TMI : 이 문제 때문에 피그마로 갈아탈까 고민도 했지만, 기존에 모든 디자이너, 개발자가 익숙해져 있던 툴을 컬러 시스템 구현으로 인해 급하게 바꾸는 것이 꽤 위험부담이 크다고 판단하여, 툴은 스케치와 제플린으로 유지하기로 고심 끝에 결정했어요. )&lt;/p&gt;

&lt;p&gt;스케치에서는 동일한 hex 코드를 지닌 컬러를 2개의 Layer style로 정의할 수 있지만, 스케치의 Layer style을 제플린으로 추출할 수 없단 것도 새삼 깨닫게 되었습니다. 😱&lt;/p&gt;

&lt;p&gt;그럼 도대체 어떻게 시멘틱 컬러를 어떻게 작업해서 어떻게 제플린에 올려서 개발자들이 볼 수 있게 할 수 있었을까요?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;베이직-컬러와-시멘틱-컬러-작업-방식-정리&quot;&gt;베이직 컬러와 시멘틱 컬러 작업 방식 정리&lt;/h3&gt;

&lt;p&gt;결론부터 말씀드리면, 다음과 같이 정리하기로 정했습니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_20.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;베이직 컬러 : 레이어 스타일로 작업, 컬러 팔레트로 업로드&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;베이직 컬러는 스케치에서는 Layer style으로 작업한 후 제플린에 color palette로 업로드했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_21.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;시멘틱 컬러 : 심볼로 작업, 컴포넌트로 업로드&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;스케치 작업 방식&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_22.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;시멘틱 컬러는 스케치에서 심볼로 작업하였고, 해당 심볼에 베이직 컬러를 레이어 스타일로 입혔습니다. (당연히 심볼 override 기능에서 layer style은 해제하여 화면 작업에서 시멘틱 컬러 사용 시, 시멘틱 컬러에 입혀진 베이직 컬러는 변경하지 못하도록 하였습니다.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제플린 반영&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;심볼로 작업한 시멘틱 컬러를 제플린에 컴포넌트로 업로드하였습니다. 그러면 시멘틱 컬러가 적용된 화면에서는 아래와 같이 보이게 됩니다. 개발 시에 우측 패널에서 Colors에 적힌 베이직 컬러가 아닌, Component패널의 시멘틱 컬러를 보면 되는 것이죠.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_23.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-두-개의-심장&quot;&gt;2) 두 개의 심장&lt;/h3&gt;

&lt;p&gt;라이브러리는 라이트 모드와 다크 모드를 따로따로 구축하였습니다. 그리고 실제 화면 작업 파일에 두 가지 라이브러리를 함께 연결하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_24.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 각각의 모드에 컬러 시스템을 비롯해 모든 스타일과 컴포넌트들을 각각의 모드에서 동일한 이름으로 구축하였습니다.&lt;/p&gt;

&lt;p&gt;👇 그러면 &lt;a href=&quot;https://github.com/Pausansol/Camilo&quot;&gt;camilo라는 플러그인&lt;/a&gt;을 통해 두 가지 라이브러리를 순식간에 스위칭할 수 있습니다. (이름 기반으로 라이브러리가 스위칭 되는 플러그인입니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_25_high.gif&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;결과적으로 플러그인 클릭 1번이면 쉽게 라이트, 다크 모드 화면을 확인할 수 있게 되었습니다! 👏👏&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;다크-모드합니다&quot;&gt;다크 모드합니다.&lt;/h2&gt;

&lt;p&gt;정리, 요약하면서 이번 글을 마무리해 볼게요.&lt;/p&gt;

&lt;p&gt;다크 모드 1탄 글에서 자세히 설명했듯이 쏘카는 다크 모드 대응의 토대를 닦기 위해 컬러 시스템을 새롭게 구축하기로 하였습니다.&lt;/p&gt;

&lt;p&gt;이어서 이번 2탄 글에서는 실제로 컬러 시스템을 어떻게 구축했는지 아래와 같은 내용을 정리해보았습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;쏘카 컬러 시스템 : 베이직 컬러와 시멘틱 컬러&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;1) 베이직 컬러 : 기존 컬러 스타일을 수정, 보완하여 재구축&lt;/li&gt;
      &lt;li&gt;2) 시멘틱 컬러 : 쓰이는 목적과 UI에 따라 네이밍하고 적용하는 시멘틱 컬러를 새롭게 구축&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;컬러 시스템, 어떻게 스케치로 작업하고 제플린에 반영했을까?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;1) 베이직 컬러는 스케치에서 레이어 스타일로 작업, 제플린에 컬러 팔레트로 업로드하고 시멘틱 컬러는 스케치에서 심볼로 작업, 제플린에 컴포넌트로 업로드&lt;/li&gt;
      &lt;li&gt;2) 두 개의 심장 : 라이트, 다크 모드 두 가지 라이브러리를 하나의 화면 작업 파일에 연결, camilo라는 플러그인으로 클릭 한 번으로 스위칭!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;다크 모드 컬러 시스템의 구축과정을 자세히 설명한 글이 거의 없어서 여러 라이브러리를 까보고 유추하고 삽질하면서 우리만의 방법을 찾아갔습니다. 하지만 그 덕에 &lt;strong&gt;컬러 시스템을 좀 더 정교하게 다듬고 정리하면서 전체적으로 기존보다 훨씬 더 체계적인 컬러 시스템&lt;/strong&gt;을 마련할 수 있었어요. 👏👏&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-02/3_26.jpg&quot; alt=&quot;&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;center&gt;

후훗.. 다크 모드를 정복할 날이 머지 않았다!!
&lt;/center&gt;

&lt;p&gt;이렇게 마련해둔 컬러 시스템을 기반으로, 눈, 코, 입이 모두 잘 반전된 아수라 백작처럼 모든 컴포넌트가 라이트와 다크 모드에서 1:1 대응하도록 차근차근 구축하고 있습니다.&lt;/p&gt;

&lt;p&gt;물론, 쏘카 다크 모드를 실제로 런칭하기 위해서는 쏘카 앱에서 사용하고 있는 네이버 맵이 우선으로 다크 모드를 대응해야 저희도 이를 사용해서 다크 모드를 런칭할 수 있는 등 제약이 있습니다. 하지만 모든 조건이 갖추어졌을 때 최대한 발 빠르게 다크 모드를 대응할 수 있도록 열심히 작업하고 있습니다!&lt;/p&gt;

&lt;p&gt;그럼 &lt;strong&gt;다음 편에서는 컴포넌트 구축으로 넘어가서 개발자와 어떻게 협업하며 컴포넌트를 구축&lt;/strong&gt;하였는지 얘기해볼 거에요. 다음 편도 많은 기대 부탁드려요! 😆&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;쏘카-프로덕트-디자인팀의-영상--글-모음&quot;&gt;쏘카 프로덕트 디자인팀의 영상 &amp;amp; 글 모음&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;네이버 테크톡에서 진행한 &lt;a href=&quot;https://tv.naver.com/v/15842187&quot;&gt;&lt;strong&gt;“쏘카프레임 구축 배경과 과정”&lt;/strong&gt; 발표 영상&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/06/23/socar-design-system-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #1] 쏘카의 디자인 시스템 맛보기&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/10/dark-mode-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가!&lt;/strong&gt; (1탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/22/dark-mode-02.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가!&lt;/strong&gt; (2탄)&lt;/a&gt;(현재 글)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/31/component-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자!&lt;/strong&gt; (1탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/09/08/component-02.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자!&lt;/strong&gt; (2탄)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>gadi, purin</name></author><category term="design" /><category term="design_system" /><summary type="html">안녕하세요. 쏘카 프로덕트 디자인팀 가디, 푸린입니다!</summary></entry><entry><title type="html">[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가! (1탄)</title><link href="http://localhost:4000/design/2020/07/10/dark-mode-01.html" rel="alternate" type="text/html" title="[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가! (1탄)" /><published>2020-07-10T10:00:00+09:00</published><updated>2020-07-10T10:00:00+09:00</updated><id>http://localhost:4000/design/2020/07/10/dark-mode-01</id><content type="html" xml:base="http://localhost:4000/design/2020/07/10/dark-mode-01.html">&lt;p&gt;안녕하세요! 프로덕트 디자인팀 가디, 푸린입니다.&lt;/p&gt;

&lt;p&gt;두 번째 글, 많이 기다리셨죠~?&lt;/p&gt;

&lt;p&gt;이번 글에서는 &lt;strong&gt;다크 모드 도입을 검토하게 된 이유와 공부한 내용,&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;그리고 &lt;strong&gt;다크 모드와 디자인시스템을 같이 작업하게 된 과정&lt;/strong&gt;을 얘기해보려고 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_01.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;본문으로 들어가기 전 예상 독자는요,&lt;/p&gt;

&lt;p&gt;다크 모드와 디자인 시스템에 대한 기본적인 이해도가 있는 분이 읽으시면 가장 유익할 것 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://brunch.co.kr/@outlines/39&quot;&gt;다크 모드 파헤치기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://story.pxd.co.kr/1434&quot;&gt;디자인 시스템이란&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-다크-모드-검토의-시작과-이유&quot;&gt;1. 다크 모드 검토의 시작과 이유&lt;/h2&gt;

&lt;p&gt;작년 6월, 애플이 WWDC발표에서 iOS13의 다크 모드에 대해 공식 발표를 하였고 9월에 정식 버전이 런칭되었습니다. 그 후 다크 모드를 적용한 앱 서비스들이 빠르게 등장하기 시작했습니다.&lt;/p&gt;

&lt;p&gt;( 안드로이드에는 2018년에 런칭된 P버전에 이미 야간 모드가 있었고, 작년에 런칭한 10(Q)버전에 다크 테마를 한층 강화했습니다. 그러나 본격적으로 다크 모드가 화두가 된 것은 단연 iOS13 출시 이후라고 볼 수 있습니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_02.jpg&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://news.appstory.co.kr/plan12652&quot;&gt;참고 : 안드로이드와 iOS의 다크 모드 비교&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;다크 모드를 적용해야 하는 이유는 다음과 같이 다양합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;저시력자를 위한 접근성 향상&lt;/li&gt;
  &lt;li&gt;어두운 환경에 적합 (취침 전 휴대폰 탐색 등)&lt;/li&gt;
  &lt;li&gt;취향 (Private, Premium 감성)&lt;/li&gt;
  &lt;li&gt;배터리 절감 (OLED + 검정배경일 때)&lt;/li&gt;
  &lt;li&gt;컨텐츠 집중 (넷플릭스 등)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;사실 쏘카에서는 이런 모든 이유를 차치하고서라도 결국에는 다 대응할텐데 우리만 안 할 순 없다는 이유로 시작한 것이 컸습니다. → 나중에 &lt;strong&gt;우리만 안하면 아주 색다른 사용자 경험을 줄 수 있어 지금부터 준비해야 한다라는 결론에 이르렀어요.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_03.jpg&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;👆 훗날 쏘카만 다크 모드를 대응하지 않았을 경우, 예상되는 쏘카 앱을 켰을 때 사용자 경험&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-다크-모드-공부-시작&quot;&gt;2. 다크 모드 공부 시작!&lt;/h2&gt;

&lt;p&gt;먼저, 다크 모드에 대해 공부하며 정리한 내용을 공유해보려고 합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;다크 모드를 잘 설명한 가이드라인&lt;/strong&gt;과 2. &lt;strong&gt;다크 모드를 적용한 앱&lt;/strong&gt;들을 공부하고 분석하기 시작했어요.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;먼저 가이드라인부터 살펴볼게요!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;다크-모드-가이드라인의-비교와-분석&quot;&gt;다크 모드 가이드라인의 비교와 분석&lt;/h3&gt;

&lt;p&gt;여러 가지 가이드라인의 다크 모드를 공부했지만, 가장 많이 참고한 (디자이너들이 가장 믿고 보는 두 가이드라인인) &lt;strong&gt;구글의 Material Design&lt;/strong&gt;과 &lt;strong&gt;애플의 Human Interface Guideline&lt;/strong&gt;를 공부한 내용을 공유해보려 합니다.&lt;/p&gt;

&lt;p&gt;두 가지 가이드라인을 비교 분석한 뒤 동일하게 가져가고 있는 부분은 믿고 따라가고, 다르게 반영한 부분은 쏘카 앱에 적절한 방법이 어떤 것인지 추가로 고민하고 테스트해보며 더 맞는 방향으로 가져왔습니다.&lt;/p&gt;

&lt;p&gt;*가이드라인 참고&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Material Deisgn :&lt;/strong&gt; &lt;a href=&quot;https://material.io/design/color/dark-theme.html&quot;&gt;다크 테마의 컬러&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Human Interface Guideline :&lt;/strong&gt; &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/dark-mode/](https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/dark-mode/)&quot;&gt;다크 모드에 대한 부분&lt;/a&gt; / &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/color/](https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/color/)&quot;&gt;컬러 전반에 대한 부분&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;참고로, 애플의 HIG에 사이트에 정리된 내용은 Material만큼 자세하지 않습니다.
iOS13 다크 모드와 그 가이드라인에 대해 공부를 더 하시려면 WWDC2019의 발표영상을 보고, 추가로 라이브러리 스케치파일을 받아서 컬러 가이드 페이지를 열어보는 것을 추천합니다.
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2019/808/&quot;&gt;WWDC 2019 다크 모드 설명 영상&lt;/a&gt;
&lt;a href=&quot;https://developer.apple.com/design/resources/&quot;&gt;iOS 라이브러리 다운받기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;material과-hig-다크-모드-가이드라인-같은-점과-다른-점&quot;&gt;Material과 HIG 다크 모드 가이드라인, 같은 점과 다른 점&lt;/h3&gt;

&lt;p&gt;두 가지 가이드 라인에서 다크 모드에서 컬러를 선정할 때 고려해야 할 가장 중요한 요소들을 뽑아서 비교, 대조해보았습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_04.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그럼 위의 사항들에 대해 하나하나 자세히 살펴보도록 할게요.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-컬러명과-체계--의미론적-컬러-시스템을-사용-일치&quot;&gt;1) 컬러명과 체계 : 의미론적 컬러 시스템을 사용 (일치)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_05.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;의미론적 컬러를 한마디로 설명해보면 &lt;strong&gt;“컬러를 Hex값이 아닌 컬러가 사용되는 목적과 적용되는 UI에 따라 네이밍하고 시스템화하는 것을 의미”&lt;/strong&gt;합니다.&lt;/p&gt;

&lt;p&gt;예를 들어 라이트모드 &lt;strong&gt;배경색에 적용되는 #FFFFFF값의 컬러 이름을 White 컬러가 아닌, Background 컬러라고 정의&lt;/strong&gt;하는 것입니다.&lt;/p&gt;

&lt;p&gt;이를 iOS에서는 Semantic 컬러라고 정확히 명명하는 반면 머테리얼에서는 정확한 용어 없이 가이드라인에 녹여서 설명하고 있지만, 분명한 것은 두 가지 가이드라인 모두 의미론적으로 컬러 시스템을 사용하고 있다는 점입니다.&lt;/p&gt;

&lt;p&gt;*의미론적 컬러 시스템에 대한 부분은 다크 모드가 디자인시스템과 함께 갈 수밖에 없는 가장 중요한 이유이며 이번에 쏘카 프레임 컬러 시스템을 구축하면서 가장 신경 쓴 부분이기도 합니다. 그래서 “3. 그래서 왜 디자인 시스템이랑 같이 가야 한다고?” 항목에서 더 자세하게 설명할 예정입니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-상단의-레이어일수록-밝은색-적용-일치&quot;&gt;2) 상단의 레이어일수록 밝은색 적용 (일치)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_06.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다크 모드에서 컬러 선정 시 중요한 부분은 두 가지 레이어가 중첩되어 표현될 때 하단과 상단의 레이어를 어떻게 구분하느냐 하는 것입니다. 라이트 모드에서는 보통 이를 그림자로 표현하는데요, 다크 모드에서는 그림자의 표현이 두드러질 수 없기 때문에 다른 방법으로 두 가지 레이어를 구분해야 할 필요가 있습니다.&lt;/p&gt;

&lt;p&gt;그래서 &lt;strong&gt;iOS와 Material은 모두 하단 기초 배경색보다 한 단계 밝은 색을 그 위의 레이어에 적용하는 방법을 사용&lt;/strong&gt;하고 있습니다.&lt;/p&gt;

&lt;p&gt;단, 다른 점은 Material은 레이어가 올라가면 올라갈수록 더 밝은 색을 적용(화이트 오버레이를 깔고 그 투명도를 변형하는 방식을 선택하고 있네요)하는 반면에 HIG는 기본 배경(base)과 그 위의 한단계 높은 배경색(elevated)이 있을 뿐 그보다 더 상단 레이어에서 더 밝아지지는 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-배경색-불일치&quot;&gt;3) 배경색 (불일치)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_07.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다크 모드의 배경색을 두 가지 가이드라인에서 다르게 정의합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;머터리얼에서는 눈의 피로를 덜고 그림자의 표현을 위해 블랙보다는 짙은 회색 사용&lt;/strong&gt;을 사용합니다.&lt;/p&gt;

&lt;p&gt;반면에, &lt;strong&gt;HIG에서는 순수 블랙(#000)을 사용했는데, 그 이유는 배경 위에 올라가는 컴포넌트 들과의 명확한 대비를 주고, 추가로 베젤과의 경계를 없애 확장된 UI경험을 주기 위함&lt;/strong&gt;이고 설명하고 있어요.&lt;/p&gt;

&lt;p&gt;(iOS에서는 강력한 대비를 통한 가독성을 더 중시하였고, Material에서는 가독성 보다는 눈의 편안함을 강조하고 있다고 볼 수도 있겠네요.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;→ 그럼 쏘카의 선택은?&lt;/strong&gt; 
여러 가지 디바이스에 넣어 테스트해본 결과 쏘카의 컴포넌트 및 UI요소들이 모두 브랜드 컬러가 조금씩 반영된 쿨그레이 컬러여서 완전한 중립 컬러인 순수블랙보다는 쿨그레이컬러가 어울렸습니다. 그리고 다양한 디바이스에서 순수블랙보다는 그레이 컬러가 조금 더 눈에 편안하게 들어왔습니다. 그래서 쏘카의 기본 배경색은 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#171B1C&lt;/code&gt;의 진한 쿨그레이 색상&lt;/strong&gt;으로 정하게 되었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_08.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하단에 보이는 것처럼 다양한 디바이스에서 배경색을 여러 가지로 넣어서 테스트해보고 기초 배경색을 선정하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_09.jpeg&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-상단의-레이어에-그림자-적용-불일치&quot;&gt;4) 상단의 레이어에 그림자 적용 (불일치)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_10.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;머터리얼은 다크 모드에서도 라이트 모드와 동일하게 레이어가 상단에 올라올 때 쉐도우를 적용&lt;/strong&gt;하였지만, &lt;strong&gt;HIG는 다크 모드에서는 쉐도우를 사용하지 않았어요&lt;/strong&gt;. HIG의 설명을 보면 다크 모드에서는 쉐도우가 잘 보이지 않기 때문에 레이어의 색(앞서 얘기한 Elevated 개념)만으로 상단과 하단 레이어를 구분한다고 설명하고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;→ 쏘카의 선택은?&lt;/strong&gt;
저희도 직접 폰에 넣어서 실험을 해봤는데요, 다크에서 쉐도우가 있다고 해도 크게 눈에 띄지 않았어요. 눈에 띄지 않는데 공수를 들여 그림자를 구현할 필요는 없다고 판단하여 다크 모드에서는 &lt;strong&gt;쉐도우 없이 가기로 했습니다&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_11.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기까지 Material과 HIG의 다크 모드 가이드라인을 정리한 내용을 공유해보았는데요,&lt;/p&gt;

&lt;p&gt;각각의 가이드 라인에서 쏘카가 선택하여 가져 온 부분을 다시 한번 정리봅니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_12.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;추가로, 두 가지 가이드라인 외에, 다크 모드가 비교적 잘 설명되어 있어 많이 참고했던 가이드라인의 링크를 첨부합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.carbondesignsystem.com/guidelines/color/overview&quot;&gt;IBM의 Carbon Design System&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://spectrum.adobe.com/page/color/#Semantic-colors&quot;&gt;Adobe의 Spectrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;다크-모드가-적용된-앱들-탐구&quot;&gt;다크 모드가 적용된 앱들 탐구&lt;/h2&gt;

&lt;p&gt;가이드라인 외에도 다크 모드가 적용된 앱들을 캡쳐해서 분석해보았습니다.&lt;/p&gt;

&lt;p&gt;다크 모드를 출시한 &lt;strong&gt;카카오페이, 익스피디아, 슬랙, 토스&lt;/strong&gt; 등의 앱과 기본 테마가 다크 모드인 &lt;strong&gt;넷플릭스, 유투브 뮤직, 테드&lt;/strong&gt; 등의 앱도 캡쳐해서 색을 스포이드로 집어보고 라이트와 다크 모드를 비교하면서 조사를 하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-배경색-탐구--기본-배경색과-elevated-배경색을-위주로-&quot;&gt;1) 배경색 탐구 ( 기본 배경색과 Elevated 배경색을 위주로 )&lt;/h3&gt;

&lt;p&gt;먼저, 각 앱의 색 자체를 스포이드로 찍어보며 기본 배경색을 순수 블랙으로 했는지,&lt;/p&gt;

&lt;p&gt;최하단 배경색과 Elevated(상단) 배경색을 어느 정도의 차이로 구분했는지 등을 살펴보았습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_13.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여러 가지 앱들을 나열하고 분석해 보니 (당연하게도) 배경색과 시스템이 모두 다 달랐습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;배경의 명도와 채도&lt;/strong&gt; : 유투브 뮤직처럼 배경색을 완전한 블랙으로 한 경우도 있었고 Notion처럼 굉장히 밝은 회색을 적용한 경우도 있었어요. 또한, 순수 그레이색을 사용한 앱들과 쿨그레이를 사용한 앱의 비율도 반반 정도였습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;배경 레이어 색 구분&lt;/strong&gt; : 대부분 레이어의 색상으로 상하단 레이어의 위치를 표현하고 있었는데요, 오히려 트위터는 (위에서 살펴본 대표적 가이드라인들과 다르게) elevated된  레이어에 더 어두운색을 적용한 것을 볼 수 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-라이트--다크-모드의-컬러-비교&quot;&gt;2) 라이트 : 다크 모드의 컬러 비교&lt;/h3&gt;

&lt;p&gt;한가지 앱에서 라이트 모드와 다크 모드의 컬러를 어떻게 대칭되게 구현했는지도 눈여겨보았어요. (뒤에서  더 자세히 설명드리겠지만, 다크 모드를 구현하기 위해서는 라이트 : 다크 모드의 컬러가 1:1로 대응되는 것이 원칙인데, 이를 어떻게 구현했는지 살펴보았습니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_14.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;각 서비스의 다크 모드 컬러를 어떻게 선정했는지 그리고 어떻게 라이트 모드 : 다크 모드 컬러를 1:1 매칭시켰는지 그 정확한 내용은 알 수 없었기에 정말 짐작만 하며 조사하였습니다.&lt;/p&gt;

&lt;p&gt;예상했던 결과지만, 공통으로 보이는 절대적 규칙은 없었고 각자의 앱에 맞는 방법을 채택한 것으로 짐작하였습니다. &lt;strong&gt;당연한 얘기지만, 우리도 쏘카앱에 맞는 우리만의 컬러 시스템을 구축하면 된다는 결론에 이르렀어요.&lt;/strong&gt; (사실, 이게 제일 어렵죠 😂)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-그래서-다크-모드와-디자인-시스템-왜-같이-가야-한다고&quot;&gt;3. 그래서 다크 모드와 디자인 시스템, 왜 같이 가야 한다고?&lt;/h2&gt;

&lt;p&gt;앞서 슬쩍슬쩍 언급하였지만, &lt;strong&gt;다크 모드를 실제 개발로 구현하기 위해서는 다크 컬러 시스템과 라이트 컬러 시스템이 1:1 대응&lt;/strong&gt;이 되어야 합니다.&lt;/p&gt;

&lt;p&gt;즉 &lt;strong&gt;라이트 모드에서 A라고 명명한 컬러가 다크 모드의 A컬러로 대치&lt;/strong&gt;되어야 합니다.&lt;/p&gt;

&lt;p&gt;이러한 1:1 대응을 위해서는 꼭 시멘틱(의미론적) 컬러 시스템이 필요한데요,&lt;/p&gt;

&lt;p&gt;그 이유를 설명하기 위해서 역으로 &lt;strong&gt;시멘틱 컬러가 없던, 쏘카프레임 구축 전의 쏘카 컬러 시스템을 반전하여 다크 모드 화면을 구현&lt;/strong&gt;하면 어떻게 되는지 보여드리겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;기존-쏘카의-컬러-시스템&quot;&gt;기존 쏘카의 컬러 시스템&lt;/h3&gt;

&lt;p&gt;쏘카프레임 구축 전, 쏘카의 컬러 시스템은 시멘틱하지 않았고&lt;/p&gt;

&lt;p&gt;grey01 / grey02 / grey03 / grey04 등 명도별로 나열된 이름의 컬러들이 UI에 각각 적용되어 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_15.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그럼 단순하게 생각해서, 다크 모드를 적용하기 위해서 이를 정확히 반전하여 그대로 다크 모드 적용하면 되지 않을까 하는 생각이 들 수 있을 겁니다. 그래서 제가 한번 그렇게 해보았습니다!&lt;/p&gt;

&lt;p&gt;먼저 쏘카의 기존 컬러 스케일을 상황과 이를 1:1 반전하면 아래와 같이 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_16.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이를 그대로 1:1 반전하여 화면에 적용해보았습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_17.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그 결과 위와 같이 무서운 화면이 만들어집니다! (다크 모드 화면을 보세요.)&lt;/p&gt;

&lt;p&gt;태그 안에 글자는 보이지 않게 되고, 변경하기 등의 중요 텍스트도 마치 비활성 상태처럼 보이게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;그렇다면-어떻게-해야-할까&quot;&gt;그렇다면 어떻게 해야 할까?&lt;/h3&gt;

&lt;p&gt;그래서 라이트모드와 다크 모드 1:1 대응을 하기 위해서는 Hex값이나 명도로 네이밍 된 컬러가 아닌,&lt;/p&gt;

&lt;p&gt;각각의 요소들과 목적에 맞는 시멘틱한 이름의 컬러 체계를 다시 구축해야 합니다.&lt;/p&gt;

&lt;p&gt;즉, grey01 ↔  grey01 컬러가 아닌,&lt;/p&gt;

&lt;p&gt;background ↔  background 컬러와 매칭해야 하는 것이죠.&lt;/p&gt;

&lt;p&gt;그 결과, 1:1 반전 시 아래와 같이 예쁜 다크 모드 화면을 볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_18.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;다크 모드 화면이 훨씬 정리되어 보이죠? (체감이 잘 안 되신다면, 올라가서 이전 이미지와 비교해보시길 추천드립니다)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;다크-모드를-위해-시멘틱-컬러-시스템은-선택이-아닌-필수&quot;&gt;다크 모드를 위해 시멘틱 컬러 시스템은 선택이 아닌 필수!&lt;/h3&gt;

&lt;p&gt;물론 시멘틱한 컬러 시스템은 다크 모드를 위해서 뿐만 아니라, 컬러의 관리와 유지보수를 쉽게 하기 위해서 필요한 체계이기도 합니다. &lt;strong&gt;하지만 이런 시멘틱 컬러 시스템이 다크 모드 도입을 위해서는 선택이 아닌 필수가 되는 것이죠.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;즉, 쏘카에서는 다크 모드를 위해서라도 기존에 시멘틱하지 않았던 쏘카의 컬러 시스템 자체를 재구축 해야한다는 결론을 얻었습니다.&lt;/p&gt;

&lt;p&gt;마침 저희는 디자인 시스템 구축을 검토하고 있었고. 그러면 &lt;strong&gt;디자인 시스템 구축을 하면서 첫걸음으로 컬러 시스템을 재정비해 다크 모드를 위한 발판을 마련하자는 결론&lt;/strong&gt;을 내렸습니다.&lt;/p&gt;

&lt;p&gt;나아가, 파운데이션 이후 구축할 컴포넌트에서도 다크 모드 컬러 시스템을 적용한 다크 모드 컴포넌트를 라이트 모드의 컴포넌트와 한 쌍으로 만드는 토대가 되었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_19.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;다크 모드 tf 채널 안녕&lt;/strong&gt; 👋&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;여기까지-따라오시느라-고생하셨습니다-&quot;&gt;여기까지 따라오시느라 고생하셨습니다! 👏&lt;/h2&gt;

&lt;p&gt;정리/요약하면서 이번 글을 마무리해 볼게요.&lt;/p&gt;

&lt;p&gt;쏘카에서는 iOS13 런칭에 발맞추어 다크 모드 공부를 시작했습니다.&lt;/p&gt;

&lt;p&gt;각종 가이드라인과 다크 모드가 적용된 앱들을 분석해서 쏘카에 어떤 가이드라인을 구축하면 좋을지 탐구하였는데요, 이렇게 다크 모드 공부를 진행하면서 다크 모드 구현을 위해서는 기존 컬러 시스템을 뒤엎고 시멘틱한 컬러 시스템으로 재구축해야 한다는 사실을 깨달았습니다.&lt;/p&gt;

&lt;p&gt;그래서 디자인 시스템의 첫 걸음으로 다크 모드를 고려한 시멘틱 컬러 시스템을 구축하게 되었습니다!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;그래서 도대체 이렇게 공부한 내용을 쏘카의 컬러 시스템에 어떻게 녹인지 궁금하시죠?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;다음 글에서는 다크 모드에 대해 공부하고 탐구해본 내용을 바탕으로 실제로 어떻게 쏘카앱의 컬러 시스템을 정리하고 개발하였는지 자세히 살펴보도록 할게요.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;단합이 잘되던 다크 모드 선행 연구 멤버의 모습을 첨부하며 마무리해봅니닷 😃&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/dark-mode-01/2_20.png&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;쏘카-프로덕트-디자인팀의-영상--글-모음&quot;&gt;쏘카 프로덕트 디자인팀의 영상 &amp;amp; 글 모음&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;네이버 테크톡에서 진행한 &lt;a href=&quot;https://tv.naver.com/v/15842187&quot;&gt;&lt;strong&gt;“쏘카프레임 구축 배경과 과정”&lt;/strong&gt; 발표 영상&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/06/23/socar-design-system-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #1] 쏘카의 디자인 시스템 맛보기&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/10/dark-mode-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가!&lt;/strong&gt; (1탄)&lt;/a&gt;(현재 글)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/22/dark-mode-02.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가!&lt;/strong&gt; (2탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/31/component-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자!&lt;/strong&gt; (1탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/09/08/component-02.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자!&lt;/strong&gt; (2탄)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>gadi, purin</name></author><category term="design" /><category term="design_system" /><summary type="html">안녕하세요! 프로덕트 디자인팀 가디, 푸린입니다.</summary></entry><entry><title type="html">[SOCAR FRAME 만들기 #1] 쏘카의 디자인 시스템 맛보기</title><link href="http://localhost:4000/design/2020/06/23/socar-design-system-01.html" rel="alternate" type="text/html" title="[SOCAR FRAME 만들기 #1] 쏘카의 디자인 시스템 맛보기" /><published>2020-06-23T10:00:00+09:00</published><updated>2020-06-23T10:00:00+09:00</updated><id>http://localhost:4000/design/2020/06/23/socar-design-system-01</id><content type="html" xml:base="http://localhost:4000/design/2020/06/23/socar-design-system-01.html">&lt;p&gt;안녕하세요, 쏘카 프로덕트 디자인팀의 가디입니다.&lt;/p&gt;

&lt;p&gt;먼저, &lt;strong&gt;쏘카 앱의 디자인 시스템&lt;/strong&gt;인 &lt;strong&gt;SOCAR FRAME&lt;/strong&gt; 사이트를 공개합니다!! 🎉&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-design-system-01/1_01.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://socarframe.socar.kr/&quot;&gt;&lt;strong&gt;👉 SOCAR FRAME 바로 가기&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;앞으로 SOCAR FRAME 구축 과정을 글로 조금씩 풀어나가려고 하는데요,&lt;/p&gt;

&lt;p&gt;이 글에서는 맛보기로 다음과 같은 내용을 전달하려고 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-design-system-01/1_02.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;본문으로 들어가기 전, &lt;strong&gt;예상 독자는요 👩‍💻&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이 글은 직접 쏘카에서 디자인 시스템을 도입하며 겪은 내용에 집중하기 때문에 디자인 시스템에 대한 기본 지식이 있는 상태에서 디자인 시스템 구축을 진행 중이거나 도입을 검토 중인 분들이 들으시면 가장 유익할 것 같아요.&lt;/p&gt;

&lt;p&gt;디자인 시스템 사전 지식을 쌓기 유용한 글들을 몇 개 공유해봅니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;👉  &lt;a href=&quot;https://story.pxd.co.kr/1434&quot;&gt;디자인 시스템의 필요성 (PXD)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;👉  &lt;a href=&quot;https://brunch.co.kr/@thinkaboutlove/288&quot;&gt;디자인 시스템 구축 준비 (디독)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;👉  &lt;a href=&quot;https://brunch.co.kr/@designforhuman/2&quot;&gt;에어비앤비의 디자인 시스템 만들기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-글을-쓰게-된-이유와-다루고-싶은-내용&quot;&gt;1. 글을 쓰게 된 이유와 다루고 싶은 내용&lt;/h2&gt;

&lt;p&gt;쏘카 프로덕트 디자인팀은 작년 하반기부터 디자인 시스템 구축을 본격적으로 시작했습니다.&lt;/p&gt;

&lt;p&gt;상당히 치열하게 고민을 했고 과정 자체가 의미있다고 느꼈습니다.&lt;/p&gt;

&lt;p&gt;실제 겪으며 성장했던 이 성장의 과정들을 그냥 흘려보내기에는 아쉬웠어요.&lt;/p&gt;

&lt;p&gt;그래서 이러한 과정을 전파하는 동시에 멤버 개개인이 글을 쓰면서 내용을 체화하고 글쓰기 능력도 성장시키기 위해 글로 공유해보기로 결정했습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;그래서-우리가-얘기하고-싶은-내용은&quot;&gt;그래서 우리가 얘기하고 싶은 내용은?&lt;/h3&gt;

&lt;p&gt;저희는 결과물 그 자체보다는 &lt;strong&gt;디자인 시스템을 만들면서 겪은 과정과 어려움, 극복하고 있는 과정&lt;/strong&gt;을 꽤 상세하게 적어보려고 합니다.&lt;/p&gt;

&lt;p&gt;다른 기업에서 공유한 디자인 시스템의 아티클들을 살펴보니, 결과물에 대한 글은 많이 있지만, 그 구축 과정이 세세하게 글로 공유된 경우가 많지 않았어요. &lt;strong&gt;저희는 결과물에 대한 정리보다는 고민의 과정! 우리가 쌓아온 노하우! 돈 주고도 살 수 없는 비법!을 공유하고 싶어요.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(참고로 시스템 자체에 대한 정리는 쏘카 프레임 사이트에서 잘 볼 수 있습니다. 😉)&lt;/p&gt;

&lt;p&gt;슬쩍 맛보기 주제들을 공유하자면  :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;디자인 시스템과 다크 모드를 한꺼번에 진행하게된 과정&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;디자이너-개발자가 어떻게 협업하고 함께 주체성을 이끌어내며 시스템을 구축하고 있고&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;컴포넌트 개발 우선순위는 어떻게 정했으며&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;디자인 시스템이 우선순위에서 한없이 밀릴 때 어떻게 대처하고 있으며&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;제플린에 디자인 시스템을 담기 어려워서 어떤 꼼수를 썼는지?&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;기타 등등&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이렇게 공식 사이트에 정리하기는 힘들지만 엄청 중요하고 유의미했던 직접 삽질을 하면서 터득한, 논 오피셜한 비법들을 얘기해보고자 합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;시스템-구축은-현재-진행형-&quot;&gt;시스템 구축은 현재 진행형! 🚧&lt;/h3&gt;

&lt;p&gt;디자인 시스템을 진행하면서 처음의 원대한 꿈은 개발 구축 완료 후 배포를 하고 개발효율을 수치화하여 보여주는 동시에, 디자인 시스템 사이트와 공유 글을 함께 오픈하는 것이 목적이었는데요.&lt;/p&gt;

&lt;p&gt;시스템 개발 외의 다양한 업무들로 시스템 구축은 천천히 그러나 꾸준하게 할 수밖에 없다는 결론에 이르렀어요.&lt;/p&gt;

&lt;p&gt;그래서 그때그때 구축을 완료한 컴포넌트에 대해 차례로 공유하려고 합니다. 그만큼 더 생생하게 전달할 수 있을 것이라 기대합니다. (긍정긍정!)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-디자인-시스템-구축--시작부터-현재-진행-과정&quot;&gt;2. 디자인 시스템 구축 : 시작부터 현재 진행 과정&lt;/h2&gt;

&lt;p&gt;그럼 이제 쏘카 디자인 시스템 구축의 시작과 진행해온 과정을 설명할게요.&lt;/p&gt;

&lt;p&gt;전체적 보면 아래와 같이 진행을 해왔습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-design-system-01/1_03.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-디자인-시스템-개발-전의-쏘카-디자인-현황&quot;&gt;1) 디자인 시스템 개발 전의 쏘카 디자인 현황&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-design-system-01/1_04.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;쏘카는 작년(2019년) 5월에 앱을 대대적으로 개편하여 런칭했어요.&lt;/p&gt;

&lt;p&gt;개편을 진행하면서 새로운 디자인 라이브러리와 UI 규칙을 마련했습니다. 이는 디자이너들끼리 공유되고 있었고, 개발로는 구현되지 않은 상태였어요. (UI 컴포넌트들이 스케치(심볼)로 작업으로 작업해 제플린(컴포넌트)에 업로드되어있지만 코드로 정리되진 않은 상태였죠.)&lt;/p&gt;

&lt;p&gt;그리고 그 UI 규칙도 엄격하지 않았고 상당히 유연하게 작업하고 있었습니다. 물론 이렇게 작업하는 것 또한 디자이너들끼리의 규칙이기에 가능했어요.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-디자인-시스템-구축의-설득과-시작&quot;&gt;2) 디자인 시스템 구축의 설득과 시작&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-design-system-01/1_05.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;앱 개편 이후에 다양한 서비스 개선, 확장, 추가 등으로 화면은 계속 수정되고 추가되었으며 이를 개발하는 개발자들도 늘어나고 있었습니다. 이런 상황이 개발, 디자인 리소스 절감과 UI 통일성 유지를 위한 디자인 시스템을 도입하기에 적기라고 판단하여 프로덕트 디자인팀에서 디자인 시스템 구축을 추진하기로 마음먹게 되었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;구축-전-물밑작업&quot;&gt;구축 전 물밑작업&lt;/h4&gt;

&lt;p&gt;개발 본격 시작 전 2-3개월 정도 디자인 시스템 관련 아티클 등을 수시로 던지고, 개발하다가 “아, 이거 버튼 거기랑 똑같은 건데?? 다 따로 만드셨어요? 이럴 때 디자인 시스템이 있으면 좋겠네요.” 등의 얘기를 꺼내며 은은하게 지속적으로 밑밥을 깐 것 같아요. 그 결과 본부 내에 공감대가 어느 정도 형성되었고 설득은 비교적 수월했습니다.😏&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;디자인-시스템-구축과-다크-모드&quot;&gt;디자인 시스템 구축과 다크 모드&lt;/h4&gt;

&lt;p&gt;디자인 시스템 구축 검토를 하는 와중에 iOS13이 출시되며 다크 모드를  대응한 앱들이 늘어나기 시작했어요. 쏘카도 이에 발맞춰 다크 모드 도입 검토를 하게 되었는데요, 조금 공부를 해보니 다크 모드 대응을 디자인 시스템 구축과 함께 진행하는 것이 효율적이라는 결론에 이르렀습니다. 그래서 라이트 모드와 다크 모드 디자인 시스템을 함께 구축하는 형식으로 두 가지를 동시에 진행하게 되었습니다. (이것이 바로 다음 아티클에서 다룰 주제입니다!)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-tf-결성과-개발-본격-시작&quot;&gt;&lt;strong&gt;3) TF 결성과 개발 본격 시작!&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-design-system-01/1_06.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-design-system-01/1_07.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;디자인팀이 선행해서 정리한 내용을 바탕으로 디자인 시스템+다크 모드 설명회를 진행하고, 그 결과 디자인 시스템을 본부 내에서 진행하기로 결정, 각 플랫폼 개발자와 디자이너로 구성된 어벤져스 TF가 결성되었어요! 🎉💯&lt;/p&gt;

&lt;p&gt;iOS 개발자 1명, 안드로이드 개발자 1명, 모바일웹 개발자 1명 + 디자인팀 2명으로 구성되어 시작을 하였고 매주 정기 회의시간을 마련했습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;소수-정예-멤버로-시작해서-전체로-확장&quot;&gt;소수 정예 멤버로 시작해서 전체로 확장!&lt;/h4&gt;

&lt;p&gt;디자인 시스템 TF 멤버들은 모두 기존의 업무를 진행하는 동시에 디자인 시스템 구축을 진행하고 있어요. 이런 환경에서 장기전인 디자인 시스템을 초기 멤버끼리만 지속해서 구축하는 것이 다소 어려웠습니다.&lt;/p&gt;

&lt;p&gt;그래서 초기에는 앞서 말한 TF 초기 멤버가 파운데이션을 구축하고 최초 컴포넌트를 개발하면서 디자인 시스템 구축의 토대를 닦았습니다. 그리고 그 내용을 각 개발팀에 잘 전파했습니다. 이후로는 각 OS 팀의 다른 멤버들이 돌아가며 들어와서 새로운 요소를 구축하고 있어요.&lt;/p&gt;

&lt;p&gt;디자인팀에서는 2명이 주축이 되어 시작했지만 초반부터 디자인팀 전원(4명)이 모두 깊은 이해도를 가지고 참여를 했어요. 이런 깊은 이해도를 바탕으로 점차 돌아가면서 1가지씩 요소를 도맡아서 진행하고 있습니다. (그래서 앞으로 팀원들이 돌아가며 글을 작성할 예정이에요.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-design-system-01/1_08.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-현재-진행-상황과-앞으로의-로드맵&quot;&gt;4) 현재 진행 상황과 앞으로의 로드맵&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-design-system-01/1_09.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리하여 2019년 4분기에 본격적으로 개발을 시작해서 올해 1분기까지 컬러, 타이포, 아이콘 등 파운데이션 구축을 완료했습니다.&lt;/p&gt;

&lt;p&gt;올해 2분기부터 본격적으로 컴포넌트 구축을 시작했는데요, 현재 버튼과 태그 구축을 완료한 상태입니다.&lt;/p&gt;

&lt;p&gt;구축 과정에서 많은 유의미한 논의 포인트들이 있었고 앞으로의 글에서 이에 대해 차근차근 공유해보고자 합니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-design-system-01/1_10.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하반기에도 컴포넌트 우선순위 워크샵에서 정한 순서를 기준으로 위와 같은 컴포넌트를 꾸준하게 구축할 예정이에요. 앞으로도 어떤 흥미진진한 논의가 생길지 기대가 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;쏘카-프로덕트-디자인팀의-다짐으로-마무리&quot;&gt;쏘카 프로덕트 디자인팀의 다짐으로 마무리!&lt;/h3&gt;

&lt;p&gt;프로덕트 디자인팀 멤버 전원이 글을 돌아가며 쓰는 만큼, 개개인의 다짐으로 글을 마무리해보려 해요.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;가디 : 이번 기회에 글쓰기 천재로 거듭나고 싶습니다!&lt;/li&gt;
  &lt;li&gt;푸린 : 제 입으로 말하면 자랑 같아서 글로 남겨요.&lt;/li&gt;
  &lt;li&gt;샌디 : 그동안의 피땀 눈물 아낌없이 공개합니다!&lt;/li&gt;
  &lt;li&gt;언자(육아휴직 중) : 나는 출산의 고통, 너희는 디자인 시스템의 고통&lt;/li&gt;
  &lt;li&gt;산체스 : 옆에서 자꾸 쓰래요.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/socar-design-system-01/1_11.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같은 다짐을 각자 되새기며,&lt;/p&gt;

&lt;p&gt;앞으로 디자인 시스템을 구축하며 직접 겪으면서 성장한 과정을 생생하게 공유해보겠습니다.&lt;/p&gt;

&lt;p&gt;그럼 꾸준히 연재할 테니 기대해주세요! 🤩&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;쏘카-프로덕트-디자인팀의-영상--글-모음&quot;&gt;쏘카 프로덕트 디자인팀의 영상 &amp;amp; 글 모음&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;네이버 테크톡에서 진행한 &lt;a href=&quot;https://tv.naver.com/v/15842187&quot;&gt;&lt;strong&gt;“쏘카프레임 구축 배경과 과정”&lt;/strong&gt; 발표 영상&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/06/23/socar-design-system-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #1] 쏘카의 디자인 시스템 맛보기&lt;/strong&gt;&lt;/a&gt;(현재 글)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/10/dark-mode-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가!&lt;/strong&gt; (1탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/22/dark-mode-02.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #2] 다크 모드 받고 디자인 시스템 더블로 가!&lt;/strong&gt; (2탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/07/31/component-01.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자!&lt;/strong&gt; (1탄)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/design/2020/09/08/component-02.html&quot;&gt;&lt;strong&gt;[SOCAR FRAME 만들기 #3] 컴포넌트, 제대로 만들어 쉽게 쓰자!&lt;/strong&gt; (2탄)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>gadi</name></author><category term="design" /><category term="design_system" /><summary type="html">안녕하세요, 쏘카 프로덕트 디자인팀의 가디입니다.</summary></entry><entry><title type="html">딥러닝 모델 Serving 간단 구축기</title><link href="http://localhost:4000/data/2020/03/10/ml-model-serving.html" rel="alternate" type="text/html" title="딥러닝 모델 Serving 간단 구축기" /><published>2020-03-10T17:00:00+09:00</published><updated>2020-03-10T17:00:00+09:00</updated><id>http://localhost:4000/data/2020/03/10/ml-model-serving</id><content type="html" xml:base="http://localhost:4000/data/2020/03/10/ml-model-serving.html">&lt;div class=&quot;photo-copyright&quot;&gt;
Photo by &lt;a href=&quot;https://unsplash.com/@fabmag?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Fabrizio Magoni&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/serving?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;쏘카에서 개발한 딥러닝 기반 차량 파손 탐지 모델을 시스템에 반영하는 과정에 대해 작성한 글입니다. 딥러닝 기반 차량 파손 탐지 모델에 대한 내용이 궁금하시면 &lt;a href=&quot;https://tech.socarcorp.kr/data/2020/02/13/car-damage-segmentation-model.html&quot;&gt;Semantic Segmentation을 활용한 차량 파손 탐지 딥러닝 모델 개발기&lt;/a&gt;을 참고하시면 좋을 것 같습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;목차&quot;&gt;목차&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#index1&quot;&gt;딥러닝 모델을 서빙하기 위한 시스템은 어떻게 구성할까?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index2&quot;&gt;Serving Architecture&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#index3&quot;&gt;이미지 수집: S3&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#index4&quot;&gt;사내 시스템과 모델간의 인터페이스: AWS SQS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#index5&quot;&gt;Model Serving : AWS S3 + Agent(Python Application / Docker) + Kubernetes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#index6&quot;&gt;서빙 관련 배포 및 모니터링: Git + Rancher&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index7&quot;&gt;이제 큐가 비었습니다&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;차량을 대여할 때 가장 먼저 하게 되는 일이 무엇일까요?
여러 가지가 있겠지만 우선 차량에 손상이나 긁힘이 없는지를 꼼꼼히 살펴봅니다. 나중에 반납할 때 손상이 발견되면 해당 건의 책임을 물 수 있어 곤란을 겪게 되는 상황이 발생할 수도 있습니다. 그래서 차량을 구석구석 살펴본 뒤, 이미 손상이 있는 부분은 사진을 찍어놓기도 합니다.&lt;/p&gt;

&lt;p&gt;쏘카 역시 차량을 운행하기 전에 사용자가 각 부분의 사진을 찍어 전송하는 과정이 있습니다. 그럼 이러한 차량의 사진들은 어떠한 방식으로 처리되고 있을까요?
3개월 전만 하더라도, 쏘카의 차량 검수팀은 사용자가 전송한 차량 사진들을 한 땀 한 땀 눈으로 확인하며 손상 유무를 판정했습니다. 하루에 업로드되는 사진이 8만 장 정도 되니 전수조사를 하는 데에 어려움이 많았고, 다른 업무들에 우선순위가 밀려 샘플 조사도 쉽지 않은 상태였습니다.&lt;/p&gt;

&lt;p&gt;이에 따라, 이미지를 확인하고 차량의 손상을 판정하는 과정에 대한 자동화 방안을 찾아보게 되었고, DL(Deep Learning)을 이용하여 차량 손상을 판정하는 모델을 개발하여 이를 운영하는 시스템을 구축하는 프로젝트가 시작되었습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index1&quot;&gt;딥러닝 모델을 서빙하기 위한 시스템은 어떻게 구성할까?&lt;/h3&gt;
&lt;p&gt;딥러닝 모델을 개발할 때는 Input과 Output이 비교적 명확한 편입니다. 이미지를 분석하여 차량 파손을 탐지하는 모델의 경우에는 Input으로 차량 이미지(JPG, PNG 등)를 받고, Output으로 차량의 파손과 관련된 정보(파손 종류, 파손 확률 등)와 파손 영역이 표시된 결과 이미지를 생성하게 됩니다.&lt;/p&gt;

&lt;p&gt;그런데 딥러닝 모델을 실제 시스템과 결합하여 사용할 때에는 고려할 사항들이 좀 더 많아지고 복잡해지게 됩니다.&lt;br /&gt;
사용자가 찍어 올리는 차량 이미지를 딥러닝 모델을 구동하는 머신에 다운로드 받아야 하고, 판정 결과는 시스템이 원하는 장소에 파일로 저장하거나 또는 데이터베이스에 저장하기도 합니다. 딥러닝 모델을 운영하려면 시스템 성능도 중요하게 고려해야 하는데, 이미지를 판정하는 처리량(시간당 몇 장의 이미지를 판정할 수 있는가)이 실제 이미지 업로드 양을 감당할 수 있어야 하기 때문입니다.&lt;/p&gt;

&lt;p&gt;쏘카의 경우, 차량 파손 판정 DL 모델을 서빙하기 위해 고려할 사항은 다음과 같았습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;현재 차량 검수 운영 방식 (전반적인 프로세스 확인)&lt;/li&gt;
  &lt;li&gt;모델이 판정해야 하는 이미지의 수량 (시간당 처리량 판단)&lt;/li&gt;
  &lt;li&gt;어떻게 이미지를 모델에 전달할 것인가?&lt;/li&gt;
  &lt;li&gt;이미지 판정 결과는 어떻게 전달할 것인가?&lt;/li&gt;
  &lt;li&gt;전체 시스템의 동작 상태를 확인할 수 있는 방법은?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위와 같은 고려 사항과 요구 사항들을 만족시키기 위해, 딥러닝 모델 서빙을 위한 다양한 방안들에 대해 리뷰했습니다.
현재 각 클라우드 플랫폼들이 제공하는 모델 서빙 시스템 중 대표적인 것으로 Kubeflow, SageMaker, AutoML 등이 있습니다. 이와 같은 서비스들은 모델의 학습부터 배포, 서빙에 이르기까지 모든 기능을 제공하는 End-to-End platform입니다.&lt;/p&gt;

&lt;p&gt;그런데, 이처럼 전 과정에 걸쳐 다양한 서비스를 지원하는 만큼 빠른 시간에 사용방법을 습득하여 입맛에 맞게 적용하기에는 약간의 허들이 존재합니다. 또한, 이러한 플랫폼 중의 일부는 현재 빠른 속도로 업데이트가 진행되고 있어서 실제 서비스에 투입하기에는 약간 불안정한 것도 사실입니다.&lt;/p&gt;

&lt;p&gt;그래서 저희 쏘카 데이터 엔지니어링팀에서는 딥러닝 모델을 안정적으로 서빙하는 것에 포커스를 두고, 빠른 시간에 설계 및 개발을 완료하여 사내 시스템과 통합하는 것이 목표입니다. 몇 번의 논의와 수정을 거쳐 최종적으로 결정된 시스템은 아래 그림과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts_dl_serving/picture01.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;center&gt;그림 1. 전체 시스템 구성도 - AWS SQS + Kubernetes + Git + Rancher + S3, DB&lt;/center&gt;

&lt;p&gt;그럼, 이어서 위 그림에 표현된 각각의 모듈 및 시스템 구축 방법에 대해 좀 더 자세히 설명하도록 하겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;index2&quot;&gt;Serving Architecture&lt;/h2&gt;
&lt;p&gt;이 후 설명하는 내용은 사내 시스템 부분을 제외한 모델 서빙 시스템 관련 내용입니다. 사내 시스템과 관련된 내용은 향후 기회가 있을 때 쏘카 개발본부에서 자세히 소개드리는 것으로 하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;index3&quot;&gt;이미지 수집: S3&lt;/h3&gt;
&lt;p&gt;차량을 대여한 사용자가 스마트폰으로 찍어서 업로드하는 사진은 S3에 저장됩니다. 이렇게 저장된 사진들은 사내 시스템을 담당하고 있는 개발본부에서 관리합니다. 각각의 이미지는 인증을 통해 CloudFront로 접근 가능합니다.&lt;/p&gt;

&lt;h3 id=&quot;index4&quot;&gt;사내 시스템과 모델간의 인터페이스: AWS SQS&lt;/h3&gt;
&lt;p&gt;사내 시스템과 차량 손상 판정 모델의 커플링을 최소화하기 위해 외부 시스템과 모델 간의 인터페이스는 AWS SQS로 결정했습니다. 인터페이스로 메세지큐를 사용하는 장점은 여러 가지가 있는데 이번 케이스에서는 다음과 같은 사항들이 고려되었습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1) 쉽고 빠른 인터페이스의 구축 및 사용&lt;/li&gt;
  &lt;li&gt;2) 향후 검수 시스템의 변경 또는 차량 손상 판정 모델의 변경 시 상호간의 영향 최소화&lt;/li&gt;
  &lt;li&gt;3) 이미지 처리량의 변화에 따른 유연한 Scaling 지원&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;1-쉽고-빠른-인터페이스의-구축-및-사용&quot;&gt;1) 쉽고 빠른 인터페이스의 구축 및 사용&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;AWS SQS는 특별한 설정 없이 기본 설정으로 사용해도 별 문제가 없으며, Queue에 메시지를 전송하는 방법 또한 간단합니다.&lt;/li&gt;
  &lt;li&gt;아래 이미지는 AWS SQS를 생성할 때 입력하게 되는 페이지인데, 대기열 이름을 작성하고 맨 아래쪽 대기열 생성 버튼만 누르면 Queue가 생성됩니다. 구성하려는 서비스에 따라 대기열 유형을 결정하고, 대기열 속성의 값들을 적당히 조정하면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts_dl_serving/picture02.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;center&gt;그림 2. AWS 콘솔에서의 SQS 생성 페이지&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;Queue에 메시지를 전송하고, 메시지를 받아오기 위해서는 Python의 boto 라이브러리를 사용하면 됩니다. 메시지 Send, Receive, Delete는 아래 코드에서처럼 boto 라이브러리 함수를 호출하여 구현할 수 있습니다 (실 서비스 적용 시에는 개발 환경에 따른 예외 처리 방안들을 포함하여 구현해야 합니다).&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import boto3
import json
import logging
import os

class SqsHelper():
    def __init__(self, aws_sqs_url):
        self.aws_sqs_url = aws_sqs_url
        aws_access_key = os.getenv('AWS_ACCESS_KEY_ID')
        aws_secret_key = os.getenv('AWS_SECRET_ACCESS_KEY')
        aws_region = os.getenv('AWS_REGION')
        self.sqs = boto3.client(&quot;sqs&quot;,
                                region_name=aws_region,
                                aws_access_key_id=aws_access_key,
                                aws_secret_access_key=aws_secret_key)

    def send_message(self, message_body):
        response = None
        try:
            # for standard queue (not FIFO)
            response = self.sqs.send_message(QueueUrl=self.aws_sqs_url, 
                                             MessageBody=message_body)
        except Exception as e:
            logging.getLogger(LOGGER_NAME).error(&quot;send_message() error [%s]&quot;, e)
        finally:
            return response

    def receive_message(self):
        self.receipt_handle = None
        message_body_json = None
        try:
            sqs_response = self.sqs.receive_message(QueueUrl=self.aws_sqs_url, 
                                                    AttributeNames=[&quot;All&quot;], 
                                                    MaxNumberOfMessages=1, 
                                                    VisibilityTimeout=90, 
                                                    WaitTimeSeconds=0)
            if sqs_response is not None:
                message = sqs_response[&quot;Messages&quot;][0]
                self.receipt_handle = message[&quot;ReceiptHandle&quot;]
                message_body = message[&quot;Body&quot;]
                message_body = message_body.replace(&quot;\'&quot;, &quot;\&quot;&quot;)
                message_body_json = json.loads(message_body)
        except KeyError:
            # do nothing - there is no message
            logging.getLogger(LOGGER_NAME).debug(&quot;receive_message() error [%s]&quot;, e)
        except Exception as e:
            logging.getLogger(LOGGER_NAME).error(&quot;receive_message() error [%s]&quot;, e)
        finally:
            return message_body_json

    def delete_message(self):
        try:
            if self.receipt_handle is not None:
                self.sqs.delete_message(QueueUrl=self.aws_sqs_url, 
                                        ReceiptHandle=self.receipt_handle)
        except Exception as e:
            logging.getLogger(LOGGER_NAME).error(&quot;delete_message() error [%s]&quot;, e)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;본 프로젝트에서 메시지는 간단한 JSON 형태로 구성하여 전송했으나, 초당 처리량이 수십, 수백건으로 증가하는 것을 대비하여 Protocol Buffers를 고려하는 것도 좋습니다. Protocol Buffers를 사용하면 메시지의 특성에 따라 드라마틱하게 메시지 전송량과 처리속도를 향상시킬 수 있습니다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2-향후-검수-시스템의-변경-또는-차량-손상-판정-모델의-변경-시-상호간의-영향-최소화&quot;&gt;2) 향후 검수 시스템의 변경 또는 차량 손상 판정 모델의 변경 시 상호간의 영향 최소화&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Queue를 통해 전달하게될 메시지 구조만 협의되면 이후 작업은 메시지를 Push 하거나 Pull 하기만 하면 됩니다.&lt;/li&gt;
  &lt;li&gt;본 시스템은 모델에 판정을 의뢰할 사내 시스템은 판정 대상 이미지의 URL과 기타 정보를 메시지로 묶어 SQS에 Push하면 되고, 판정 모델 쪽은 SQS를 Polling 하면서 요청된 메시지를 받아와 판정 작업을 처리하고 결과를 업데이트하면 됩니다.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3-이미지-처리량의-변화에-따른-유연한-scaling-지원&quot;&gt;3) 이미지 처리량의 변화에 따른 유연한 Scaling 지원&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;AWS SQS는 처리량 제한이 없습니다. 다 받아줍니다.&lt;/li&gt;
  &lt;li&gt;다만 메시지 저장 제한 기간이 있으므로, 그 기간 안에 Queue의 메시지를 꺼내가면 됩니다. Push되는 메시지가 많아지는 경우에는 Pull하는 모델의 처리량을 늘려주면 되는데 모델 처리량을 늘리는 방법에 대해서는 잠시 후 설명하도록 하겠습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index5&quot;&gt;Model Serving : AWS S3 + Agent(Python Application / Docker) + Kubernetes&lt;/h3&gt;
&lt;p&gt;손상 판정 모델의 작업은 이미지를 Input으로 받고, 판정 결과가 표시된 이미지와 관련 정보들을 Output으로 리턴합니다. 모델이 판정 작업에 집중하는 동안, 사내 시스템과 여러 작업들을 수행하기 위한 서빙 시스템이 필요합니다. 본 프로젝트에서는, 이러한 서빙 시스템을 Agent로 지칭하도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;Agent의 주요 담당 업무는 아래와 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1) 손상 판정 모델을 초기화&lt;/li&gt;
  &lt;li&gt;2) AWS SQS로부터 메시지를 Pull하고, 모델에 이미지를 전달&lt;/li&gt;
  &lt;li&gt;3) 모델의 판정 결과를 사내 시스템에 전달&lt;/li&gt;
  &lt;li&gt;4) 모델 및 Agent의 상태를 확인하고 로그 저장&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Agent는 Python으로 작성하였고, Docker Image로 빌드했습니다. 차량 손상 모델은 PyTorch를 사용하여 개발되었고, Python 코드를 사용 시 다양한 Cloud 플랫폼의 API를 사용하는 것도 쉬우므로 자연스럽게 Python을 선택했습니다.
&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-손상-판정-모델을-초기화&quot;&gt;1) 손상 판정 모델을 초기화&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Agent가 시작되면 S3에 저장된 모델의 Weight 값들을 다운로드하고, 모델의 내부 상태를 초기화 하게 됩니다.&lt;/li&gt;
  &lt;li&gt;차량 손상 판정 모델이 사용하는 내부의 Network Layer가 7개여서 각각 학습된 Weight들을 모아보면 크기가 상당히 큽니다. 해당 Weight들을 Docker Image에 포함하게 된다면 Image가 너무 커질 뿐만 아니라, 향후 Weight 값이 재학습으로 인하여 수정되는 경우 Docker Image를 다시 빌드해야 하는 불편함이 있습니다.&lt;/li&gt;
  &lt;li&gt;이에 따라, Weight 값들은 분리하여 저장하고 Agent가 시작되는 시점에 해당 Weight들을 다운로드받아 사용합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2-aws-sqs로부터-메시지를-pull하고-모델에-이미지를-전달&quot;&gt;2) AWS SQS로부터 메시지를 Pull하고, 모델에 이미지를 전달&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;모델을 초기화한 후, Agent는 AWS SQS로부터 판정 대상 이미지의 정보가 저장된 메시지를 1개씩 Pull하여, 메시지를 파싱한 후, 모델에 이미지 정보(URL)를 전달합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3-모델의-판정-결과를-사내-시스템에-전달&quot;&gt;3) 모델의 판정 결과를 사내 시스템에 전달&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;모델은 이미지를 분석하여 차량의 손상 여부를 판정한 뒤, 손상 영역을 표시한 이미지와 관련 정보들을 Agent에 리턴합니다. 현재 이미지 분석에 소요되는 시간은 장당 3~10초 정도 소요되는데 손상 여부에 따라 판정시간이 조금씩 달라지게 됩니다.&lt;/li&gt;
  &lt;li&gt;Agent는 전달받은 결과 이미지를 S3에 저장하고, 관련 정보는 데이터베이스에 저장합니다. 결과 이미지와 데이터베이스의 정보는 사내 시스템에서 관리하는 차량 검수 자동화 시스템에서 사용하게 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;4-모델-및-agent의-상태를-확인하고-로그-저장&quot;&gt;4) 모델 및 Agent의 상태를 확인하고 로그 저장&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Agent는 작업 간 각종 로그를 생성하여 모델의 상태와 Agent 자체의 상태를 기록하게 되는데 이러한 정보는 Fluentd를 사용해 수집한 후, S3에 저장하고 있습니다.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;여기까지 외부 시스템과 차량 손상 판정 모델을 연동할 수 있는 기본 시스템(Agent)은 마련된 상태입니다. 이제 이 Agent를 병렬적으로 운영하여 처리량을 높이는 방법에 대해 설명하도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;이미 짐작하시겠지만 Agent는 SQS에 쌓여있는 메시지를 능력껏 받아서 열심히 처리하는 구조이고, Agent가 추가로 하나 더 구성되면 자연스럽게 처리량은 두 배가 됩니다. 이는 각각의 이미지를 판정할 때, 판정 작업간 의존성이 없고, Queue에 저장된 작업의 순서가 특별히 고려될 필요도 없기 때문입니다. 따라서 Agent가 늘어날수록 처리량도 비례하여 늘어납니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;실 운영에서는 평일과 주말의 차량 이미지 수가 많은 차이를 보이고 있고, 업로드되는 시간대도 주간, 야간, 새벽에 따라 편차가 큰 관계로 Agent의 수를 유연하게 운영할 수 있다면 가장 효과적일 것입니다&lt;/strong&gt;. 이를 위하여 본 프로젝트에서는 Kubernetes를 사용하고 각각의 Node는 Spot Instance로 지정하였으며, Pod 배포시 Resource Limit을 설정하여 작업량에 따라 유연하게 Scaling이 적용되도록 했습니다.&lt;/p&gt;

&lt;p&gt;현재 운영중인 설정에서는 작업이 없을 때 Node 1대에 Agent Pod이 2개가 배포되어 대기하고 있다가, SQS에 메시지가 쌓이기 시작하면 Node 5대에 Pod이 14개 배포될 때까지 Auto Scaling이 동작합니다. 이후, SQS 메시지를 모두 처리하게 되면 다시 처음의 상태로 Node와 Pod의 수가 조정됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts_dl_serving/picture03.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;center&gt;그림 3. 처리량에 따른 Auto Scaling&lt;/center&gt;

&lt;p&gt;Kubernetes를 사용할 때의 또 다른 잇점은 Pod의 상태를 확인하여 이상이 있는 경우, Pod을 재배포하여 복구시키는 방법이 간편하다는 점입니다.&lt;/p&gt;

&lt;p&gt;서빙 Agent의 경우, 사내 시스템과 인터페이스 되는 부분이 다양하므로 오류가 발생할 가능성이 있으며, 특히 내부의 손상 판정 모델이 리소스를 상당히 소모하는 과정에서 예기치 못한 오류를 일으킬 가능성도 있습니다. 일반적인 오류는 예외처리를 통해 문제를 해결할 수 있으나 Agent가 좀비상태가 되어 떠 있는 경우도 있을 수 있어, Kubernetes의 livenessProbe를 이용하여 Agent의 비정상 상태를 탐지할 수 있도록 했습니다.&lt;/p&gt;

&lt;p&gt;Agent는 주기적으로 SQS를 Polling하고 메시지에 따라 이 후 작업을 진행하게 되는데 이 때 주기적으로 Heartbeat 파일을 생성하도록 구현했습니다. 그리고 Kubernetes는 이 Heartbeat 파일이 일정시간 이상 계속 업데이트가 되지 않는 상태이면, 해당 Agent를 제거하고 새로운 Agent(Pod)를 배포하도록 설정했습니다.&lt;/p&gt;

&lt;p&gt;그리고 동작 중 발생하는 오류에 대해서는 슬랙 채널로 알림을 발송하도록 처리했습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index6&quot;&gt;서빙 관련 배포 및 모니터링: Git + Rancher&lt;/h3&gt;
&lt;p&gt;엔지니어의 욕심은 끝이 없는 법. Kubernetes가 엔지니어의 삶을 편안하게 도와주긴 하지만 배포도 좀 더 간단하면 어떨까 생각을 해봅니다. 배포 및 모니터링을 위한 다양한 툴들이 있는데, 데이터 엔지니어링팀에서는 요즘 꽤 핫한 &lt;a href=&quot;https://rancher.com/&quot;&gt;Rancher&lt;/a&gt;를 사용하는 것으로 결정하였습니다. 이미 개발본부에서 Rancher를 배포 및 모니터링에 적극 활용하고 있는 모습을 볼 수 있었기 때문에 팀에서도 별다른 고민 없이 채택할 수 있었습니다.
일단 사용해 본 결과로는 조금 보완할 점도 있긴 하지만, 전반적으로 만족하며 사용하고 있습니다. Rancher와 함께 Git을 연동하면 다음과 같은 운영상의 편리함이 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;rancher와-git-연동시-생기는-장점&quot;&gt;Rancher와 Git 연동시 생기는 장점&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;1) Git에 소스를 push하면 docker image 빌드부터 Kubernetes 배포까지 한방에!&lt;/li&gt;
  &lt;li&gt;2) 복잡한 설정 없이 간편하게 Node와 Pod 상태 모니터링 및 로그 확인 가능
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;1-git에-소스를-push하면-docker-image-빌드부터-kubernetes-배포까지-한방에&quot;&gt;1) Git에 소스를 push하면 docker image 빌드부터 Kubernetes 배포까지 한방에!&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Git 브랜치는 master, release, develop로 구분하여 운영하고 있습니다.
    &lt;ul&gt;
      &lt;li&gt;각자의 기능 개발은 develop-xxxx 브랜치를 생성하여 작업하고 develop 브랜치에 리뷰 후 머지됩니다.&lt;/li&gt;
      &lt;li&gt;개발된 기능들이 모이게 되면 develop 브랜치의 내용이 release 브랜치로 Pull Request 요청에 의해 머지가 됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Rancher에서는 설정된 Git 브랜치에 이벤트가 발생하면 빌드 Pipeline을 Trigger 할 수 있는 기능이 있습니다. 위와 같이 release 브랜치에 새로운 소스가 머지되면 해당 브랜치의 소스를 다운하여 Docker Image를 빌드하고 지정된 위치에 업로드 할 수 있도록 설정이 가능합니다. 쏘카에서는 release 브랜치 머지의 결과를 stage에 배포하도록 설정되어 있습니다.&lt;/li&gt;
  &lt;li&gt;stage에 배포된 서빙 모델이 별도의 테스트를 통해 정상적으로 동작하는 것으로 확인되면 release 브랜치를 master 브랜치에 머지합니다.&lt;/li&gt;
  &lt;li&gt;이후, 새 버전에 해당하는 Tag를 달게 되면 해당 Tag로 Docker Image를 빌드하여 production에 배포하도록 설정했습니다. 운영상의 실수로 master 브랜치에 의도하지 않게 소스가 머지될 수도 있으므로 명시적으로 Tag를 작성하는 경우에만 production에 배포가 됩니다.&lt;/li&gt;
  &lt;li&gt;결과적으로 Git 관련 작업만으로 서빙 모델이 보다 간편하게 배포될 수 있는 구성이 가능합니다. 한가지 유의하실 점은, Tag가 변경되지 않으면 Rancher Pipeline에서 해당 Docker Image의 배포가 Skip 되므로 Image의 Tag는 수정이 되어야 합니다. 만약 latest 등의 Tag를 사용하는 경우에는, Rancher UI 상에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Redeploy&lt;/code&gt; 를 클릭하여 수동으로 재배포할 수 있습니다.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2-복잡한-설정-없이-간편하게-node와-pod-상태-모니터링-및-로그-확인-가능&quot;&gt;2) 복잡한 설정 없이 간편하게 Node와 Pod 상태 모니터링 및 로그 확인 가능&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Rancher는 간단한 설정만으로 Node, Pod 상태를 모니터링 할 수 있는 기능을 제공합니다.&lt;/li&gt;
  &lt;li&gt;보다 상세한 상태를 파악하기 위해서는 Prometheus, Grafana 등을 사용하여 모니터링 할 수도 있으나, 본 프로젝트에서는 Node가 Spot Instance로 동작하고 있어서 Node의 수가 가변적으로 운영되고 있고, 현재 동작중인 상태만 간단히 확인할 수 있는 정도면 되기 때문에 Rancher가 제공하는 기본 모니터링 기능만을 사용하여 운영중입니다.
아래 그림에서와 같이 CPU, Memory, Storage, Network 사용량 등을 한눈에 확인할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts_dl_serving/picture04.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;center&gt;그림 4. Rancher 모니터링 예시&lt;/center&gt;

&lt;p&gt;현재 서빙 시스템의 로그는 Fluentd를 이용하여 별도의 S3 버킷에 저장하고 있습니다. 실시간 로그를 확인하여 Pod의 상태를 보고 싶은 경우 Rancher UI 상에서 쉽게 확인 가능합니다. 아래 그림과 같이 stdout으로 기록되는 로그를 붙잡아서 볼 수 있으므로 서빙 시스템의 상태를 간단히 체크하거나, 버전이 업데이트 되어 배포되는 시점에 동작 상태를 실시간으로 확인하기에 좋습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts_dl_serving/picture05.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;center&gt;그림 5. Rancher UI에서 Pod 로그 확인&lt;/center&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index7&quot;&gt;이제 큐가 비었습니다&lt;/h3&gt;
&lt;p&gt;DL 모델 서빙 시스템을 구축하기 위해 사용된 주요 서비스와 연동 방법들에 대해 간단히 정리해 보았습니다.
본문 내용을 세 줄로 요약한다면 아래와 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;검수 시스템과 모델은 커플링 최소화를 위해 AWS SQS를 이용하여 인터페이스 구축&lt;/li&gt;
  &lt;li&gt;Kubernetes를 이용한 Scaling 및 안정성 확보&lt;/li&gt;
  &lt;li&gt;Rancher와 Git을 이용한 배포 자동화
이제 8만장이 아니라 80만장도 처리 가능합니다!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;약 한 달 정도의 기간내에 빠르게 서빙 시스템을 구축하는 것이 목표였으므로, 기존 쏘카의 시스템과 연동이 쉽고 가볍게 개발 가능한 수준의 시스템을 구성했습니다. 그로 인하여 더 깊이있는 내용을 고려하지는 못하였으나, 일단 원하는 목표는 만족스럽게 달성했다고 생각합니다.&lt;/p&gt;

&lt;p&gt;현재 딥러닝 모델의 학습은 별도의 시스템에서 이루어지고, 이후 학습이 완료된 모델을 적용하는 단계부터 서빙 시스템이 구축된 상태입니다. 앞으로는 모델의 성능을 모니터링하며, 신규 차량 이미지들을 학습에 적용하여 모델의 성능을 지속적으로 개선할 수 있는 시스템으로 확장할 예정입니다.&lt;/p&gt;

&lt;p&gt;끝까지 읽어주셔서 감사합니다.&lt;/p&gt;</content><author><name>thomas</name></author><category term="data" /><category term="deeplearning" /><category term="serving" /><category term="sqs" /><category term="kubernetes" /><category term="rancher" /><summary type="html">Photo by Fabrizio Magoni on Unsplash</summary></entry><entry><title type="html">Semantic Segmentation을 활용한 차량 파손 탐지 딥러닝 모델 개발기</title><link href="http://localhost:4000/data/2020/02/14/car-damage-segmentation-model.html" rel="alternate" type="text/html" title="Semantic Segmentation을 활용한 차량 파손 탐지 딥러닝 모델 개발기" /><published>2020-02-14T01:00:00+09:00</published><updated>2020-02-14T01:00:00+09:00</updated><id>http://localhost:4000/data/2020/02/14/car-damage-segmentation-model</id><content type="html" xml:base="http://localhost:4000/data/2020/02/14/car-damage-segmentation-model.html">&lt;p&gt;쏘카에서 2019년 하반기에 딥러닝 기반의 차량 파손 탐지 모델을 개발했습니다. 이 포스트를 통해 왜 차량 파손 탐지 모델을 만들게 되었는지, 어떤 고민들을 거쳐 요구사항을 설정하였는지, 어떤 기술들이 사용되었는지 등 프로젝트의 전반적인 내용을 소개하는 글입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;목차&quot;&gt;목차&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#index1&quot;&gt;차량 파손 탐지 모델을 만들게 된 배경&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index2&quot;&gt;문제 해결 방식&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index3&quot;&gt;문제 접근 방식 정의 - Semantic Segmentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index4&quot;&gt;데이터 정의 및 준비 - 입력 데이터와 출력 데이터&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#dataset-분리&quot;&gt;Dataset 분리&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index5&quot;&gt;사용한 모델의 구조&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index6&quot;&gt;모델 학습(Training) 과정&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index7&quot;&gt;모델 Inference(Prediction) 후처리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index8&quot;&gt;실제 데이터 검증 시 생긴 문제&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index9&quot;&gt;성능 평가&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index10&quot;&gt;실제 데이터에 적용 예시&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#index11&quot;&gt;추후 발전 방향&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Reference&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index1&quot;&gt;차량 파손 탐지 모델을 만들게 된 배경&lt;/h3&gt;
&lt;p&gt;먼저 사용자가 쏘카 앱을 통해 쏘카를 대여하고 운행하는 과정을 알아보겠습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1) 사용자가 차량을 이용할 쏘카존을 선택합니다.&lt;/li&gt;
  &lt;li&gt;2) 원하는 시간을 선택하고,&lt;/li&gt;
  &lt;li&gt;3) 원하는 차량을 선택하게 됩니다.&lt;/li&gt;
  &lt;li&gt;4) 약속한 이용 시간이 가까워지면 선택한 쏘카존에 방문해, 차량의 상태를 확인합니다.
    &lt;ul&gt;
      &lt;li&gt;이때 사용자는 차량의 당시 외관 사진을 앱 내에 업로드해야 합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/socar-app.png&quot; alt=&quot;&quot; width=&quot;65%&quot; height=&quot;65%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;5) 문제가 없는 경우, 운행을 시작합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;발생할-수-있는-문제&quot;&gt;발생할 수 있는 문제&lt;/h3&gt;
&lt;p&gt;쏘카는 카셰어링 업체로, 고객에게 차량을 대여하는 회사입니다. 따라서 차량은 쏘카의 가장 중요한 자원이기 때문에, &lt;strong&gt;차량의 파손 상태를 꾸준히 모니터링하는 것은 반드시 해야 할 일 중 하나입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;차량의 파손에 대한 히스토리를 가장 잘 제공하는 데이터는 고객이 차량 후 상태 확인 과정에서 업로드하는 차량의 외관 이미지라고 판단해 이 데이터를 활용하기로 결정했습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“여기에 이만큼 파손이 있으니, 정비소에 맡겨라.”의 의미가 될 수도 있고,&lt;/li&gt;
  &lt;li&gt;“내가 차를 받기 전에 이미 파손이 있었다. 내가 긁은 거 아니다.” 의 의미가 될 수도 있겠습니다.&lt;/li&gt;
  &lt;li&gt;즉, 차량의 파손 정도, 위치, 시점 등 히스토리가 고스란히 담겨있는 데이터로 활용될 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;하지만 기존 업무 프로세스는 업무 담당자분들이 차량 외관 이미지를 직접 검수했습니다. 직접 확인하기 때문에 많은 시간이 소요됐기 때문에 이 작업은 회사와 담당자에게 굉장히 큰 업무 부담으로 다가왔습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;일평균 7-8만장, 최대 11만장의 차량 외관 이미지가 업로드되기 때문에 검수할 분량이 꽤 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;검수에 착수할 사진이 많기 때문에 충분한 리소스 투입이 어려웠습니다. 그리고 이미지 데이터가 차량의 파손 상태를 모니터링하는 용도보다, 파손 신고 시 업무 담당자의 파손 시점 추적에 주로 사용되었습니다.&lt;/p&gt;

&lt;p&gt;파손 시점 추적은 담당자가 직접 차량의 외관 이미지를 현재부터 과거로 추적하며 파손 시점을 찾아내는 식으로 진행되었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index2&quot;&gt;문제 해결 방식&lt;/h3&gt;
&lt;p&gt;위에도 언급했듯이, 차량 외관 이미지 데이터를 파손 시점 추적 용도로만 주로 사용하기에는 아쉬운 점이 존재했습니다.&lt;/p&gt;

&lt;p&gt;결국 차량 외관 이미지를 적극적으로 활용하지 못한 이유는 업무 리소스를 할당하기에 부담이 크기 때문인데, “반드시 검수 작업을 수기로 진행해야 하는가?”에 대한 의문이 들었습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“반드시 사람이 눈으로 봐야만 검수를 할 수 있는 걸까?”&lt;/li&gt;
  &lt;li&gt;이러한 고민들 끝에, 딥러닝 모델을 이용한 차량 파손 탐지 자동화 프로젝트를 진행했습니다.&lt;/li&gt;
  &lt;li&gt;주어진 차량 이미지 내의 파손 영역과 파손의 종류를 자동으로 판단하는 딥러닝 모델의 구현을 프로젝트의 목표로 설정했습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/expected-result.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;프로젝트의 목적을 정의했고, 조금 더 구체화할 부분은 다음과 같습니다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;딥러닝 분야의 다양한 문제 접근 방식 중, &lt;strong&gt;어떤 Task&lt;/strong&gt;인지?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;어떤 데이터&lt;/strong&gt;를 사용할 것인지?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;어떤 구조&lt;/strong&gt;의 모델을 사용하여 문제 해결 목표를 달성할 것인지?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index3&quot;&gt; 문제 접근 방식 정의 - Semantic Segmentation &lt;/h3&gt;
&lt;p&gt;본격적으로 프로젝트 시작 전, 프로젝트가 어떤 Task인지 정의했습니다.&lt;/p&gt;

&lt;p&gt;딥러닝을 이용한 이미지 처리 분야에서 가장 자주 다루게 되는 Task는 다음과 같습니다.&lt;/p&gt;

&lt;h5 id=&quot;1-classification&quot;&gt;1. Classification&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;입력으로 주어진 이미지 안의 객체(Object)의 종류(Class)를 구분하는 Task입니다.&lt;/li&gt;
  &lt;li&gt;예시) MNIST 데이터 세트의 경우, 0부터 9까지 총 10가지의 숫자들을 각각의 Class로 구분.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;2-localization&quot;&gt;2. Localization&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;입력으로 주어진 이미지 안의 객체가 이미지 안의 어느 위치에 존재하는지 위치 정보를 판단하는 Task입니다.&lt;/li&gt;
  &lt;li&gt;위치 정보의 형태는 주로 Bounding Box를 많이 사용합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;3-object-detection&quot;&gt;3. Object Detection&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;일반적으로 Classification과 Localization을 동시에 수행합니다.&lt;/li&gt;
  &lt;li&gt;입력으로 주어진 이미지 안의 객체 위치(Localization)와 해당 객체의 종류(Classification)를 출력하는 Task입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;4-segmentation&quot;&gt;4. Segmentation&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Segmentation은 픽셀을 대상으로 한 Classification 문제로 접근할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;입력으로 주어진 이미지 내에서 각 픽셀이 어떤 클래스에 속하는지 분류합니다.&lt;/li&gt;
  &lt;li&gt;각 픽셀의 분류된 클래스는 모델이 생성한 결과물인 예측 마스크 (mask)에 픽셀 단위로 기록됩니다. 만일 특정 픽셀이 어떤 클래스에도 해당하지 않는 경우, Background 클래스로 규정해 0을 표기하는 방식을 사용합니다.&lt;/li&gt;
  &lt;li&gt;분할의 기본 단위를 무엇으로 설정하느냐에 따라, Segmentation의 세부 문제를 나눌 수 있습니다.&lt;/li&gt;
  &lt;li&gt;Instance Segmentation
    &lt;ul&gt;
      &lt;li&gt;분할의 기본 단위를 &lt;strong&gt;사물&lt;/strong&gt;로 설정한 분할 문제입니다.&lt;/li&gt;
      &lt;li&gt;만일 두 개 이상의 사물이 동일한 클래스에 속하더라도, 서로 다른 사물에 해당하면 이들은 서로 다른 예측 마스크값을 가집니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Semantic Segmentation
    &lt;ul&gt;
      &lt;li&gt;분할의 기본 단위를 &lt;strong&gt;클래스&lt;/strong&gt;로 설정한 분할 문제입니다.&lt;/li&gt;
      &lt;li&gt;만일 두 개 이상의 사물이 동일한 클래스에 해당하면 이들은 서로 같은 예측 마스크값을 가집니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/semantic_and_instance_segmentation.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 정리하면 모델은 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;주어진 차량 이미지 내의 파손 영역과 파손 종류를 픽셀 단위로 분류&lt;/span&gt;&lt;/strong&gt;해야 합니다.&lt;/p&gt;

&lt;p&gt;이미지 단위가 아닌 픽셀 단위로 “이 픽셀이 파손에 해당하는가?”에 대한 판별이 필요하기 때문에 &lt;strong&gt;Segmentation 문제&lt;/strong&gt;에 속하며, 서로 떨어져 있는 파손 영역이라도 동일한 종류의 파손일 경우 &lt;strong&gt;클래스에 기반하여&lt;/strong&gt; 하나의 동일한 예측 마스크값을 가져야 합니다.&lt;/p&gt;

&lt;p&gt;이러한 점들을 고려했을 때, 모델이 수행해야 하는 행위를 기술적으로 분류 시, &lt;strong&gt;Semantic Segmentation&lt;/strong&gt;에 속한다고 설정할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index4&quot;&gt;데이터 정의 및 준비 - 입력 데이터와 출력 데이터&lt;/h3&gt;
&lt;p&gt;머신러닝/딥러닝 모델 학습에 필요한 데이터의 구조는 입력 데이터와 출력 데이터, 즉 Feature와 Label로 구분할 수 있습니다.&lt;/p&gt;

&lt;p&gt;입력 데이터는 분석의 대상이 되는 데이터로, 알파벳 &lt;em&gt;X&lt;/em&gt;로 표기합니다. 이는 독립변수, 설명변수라는 용어로 사용되기도 하며, 해당 포스트에서는 Feature라는 용어로 표현하겠습니다.&lt;/p&gt;

&lt;p&gt;출력 데이터는 문제 해결을 위해 예측의 결과로 나타나는 데이터로, 알파벳 &lt;em&gt;Y&lt;/em&gt;로 표기합니다. 이는 종속변수라는 용어로 사용되기도 하며, 해당 포스트에서는 Label 또는 Target이라는 용어로 표현하겠습니다.&lt;/p&gt;

&lt;p&gt;데이터 측면에서 정의가 필요한 점들은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이미지 단위의 파손 존재 여부 (이미지 전체에서 파손이 존재하는지)&lt;/li&gt;
  &lt;li&gt;픽셀 단위의 파손 클래스 분류
    &lt;ul&gt;
      &lt;li&gt;스크래치 (Scratch) : 차량에 스크래치가 난 영역&lt;/li&gt;
      &lt;li&gt;찌그러짐 (Dent): 차량이 찌그러진 영역&lt;/li&gt;
      &lt;li&gt;이격 (Spacing): 차체 패널이 벌어져 들뜸, 틈이 생긴 영역&lt;/li&gt;
      &lt;li&gt;해당 없음 (Background): 파손이 존재하지 않는 영역&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;따라서 입력 데이터(Feature)는 차량 이미지가 될 것이며, 출력 데이터(Label)는 이미지 단위 파손 존재 여부와 픽셀 단위 파손 클래스 분류가 됩니다.&lt;/p&gt;

&lt;p&gt;사용자가 쏘카 앱 내에서 업로드한 이미지 중 육안으로 파손의 여부를 확실하게 판단할 수 있는 이미지 2,000장에 대해 Label을 정의했고, 형식은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;image_id: 이미지 파일명&lt;/li&gt;
  &lt;li&gt;damage_level: 이미지 단위 파손 존재 여부. 파손이 존재할 경우 1, 파손이 존재하지 않을 경우 0&lt;/li&gt;
  &lt;li&gt;regions: 파손 영역 단위 파손 클래스 분류
    &lt;ul&gt;
      &lt;li&gt;데이터 관리의 편리함을 위해 픽셀 단위로 정의하는 mask 방식이 아닌, 영역 단위로 정의하는 polygon 방식을 채택했습니다. 학습 시, 해당 polygon 정보를 픽셀 단위 mask로 변환해 이용했습니다.&lt;/li&gt;
      &lt;li&gt;points: 해당 파손 영역의 외곽선 좌표 배열&lt;/li&gt;
      &lt;li&gt;class_name: 해당 파손 영역의 종류
        &lt;ul&gt;
          &lt;li&gt;0: 해당 없음 (Background)&lt;/li&gt;
          &lt;li&gt;1: 스크래치 (Scratch)&lt;/li&gt;
          &lt;li&gt;2: 찌그러짐 (Dent)&lt;/li&gt;
          &lt;li&gt;3: 이격 (Spacing)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;image_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;20190218_12985_20129968_2e0da3c3e2ace9c780abb1eeb060d43f.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
 &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;damage_level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;regions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;points&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;245.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;260.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;285.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;228.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;333.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;211.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;390.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;209.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;448.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;216.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;538.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;184.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;594.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;174.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;595.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;204.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;524.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;220.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;475.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;240.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;464.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;291.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;453.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;366.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;424.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;415.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;379.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;448.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;312.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;456.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;271.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;442.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;221.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;377.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;class_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;dataset-분리&quot;&gt;Dataset 분리&lt;/h3&gt;
&lt;p&gt;이렇게 정의된 데이터를 이용 목적에 따라 분리했습니다. 전체 2,000개 데이터를 학습용 데이터(Training Set), 검증 및 모델 선택용 데이터(Validation Set), 실제 테스트용 데이터(Test Set)로 나누었고, 그 비율은 8:1:1로 설정했습니다.&lt;/p&gt;

&lt;p&gt;데이터 세트 분리 시, 특정 데이터 세트에 데이터가 편향되는 것을 막기 위해 Stratified Split을 사용했습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;데이터가 편향되는 것은 찌그러진 파손에 해당하는 이미지 대부분이 Validation set에만 포함되어 있으면 학습시 해당 특징이 모델에 충분히 반영되지 못하는 경우&lt;/strong&gt;를 의미합니다.&lt;/p&gt;

&lt;p&gt;해당 프로젝트에서는 파손 클래스와 전체 이미지 면적 대비 파손 영역이 차지하는 면적 비율이 편향되지 않도록 설정해 Training Set, Validation Set, Test Set으로 분리했습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index5&quot;&gt;사용한 모델의 구조&lt;/h3&gt;
&lt;p&gt;해당 프로젝트에서는 Semantic Segmentation Task 수행을 위하여 U-Net with EfficientNet 모델을 사용했습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;U-Net이란?
    &lt;ul&gt;
      &lt;li&gt;U-Net은 Semantic Segmentation Task 수행에 널리 쓰이는 모델 중 하나입니다.&lt;/li&gt;
      &lt;li&gt;네트워크 형태가 알파벳 U와 비슷하다고 하여 붙여진 이름으로, 의생명공학 이미지 Segmentation을 위해 개발된 모델입니다.&lt;/li&gt;
      &lt;li&gt;모델의 구조는 다음과 같습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/unet-architecture.png&quot; alt=&quot;&quot; width=&quot;80%&quot; height=&quot;80%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;U-Net의 장점
    &lt;ul&gt;
      &lt;li&gt;U-Net은 기존의 Segmentation 모델의 문제점을 해결할 수 있습니다&lt;/li&gt;
      &lt;li&gt;1) 빠른 속도
        &lt;ul&gt;
          &lt;li&gt;기존 Segmentation 모델의 단점이었던 느린 연산 속도를 개선했습니다.&lt;/li&gt;
          &lt;li&gt;속도 개선이 가능했던 이유는, 이미지를 인식하는 단위(Patch)에 대한 Overlap 비율이 적기 때문입니다.&lt;/li&gt;
          &lt;li&gt;기존의 모델에서 많이 사용되었던 Sliding Window 방식의 경우, 이전 Patch에서 검증이 끝난 부분을 다음 Patch에서 다시 검증하게 됩니다. 이는 일종의 연산 낭비라고 볼 수 있습니다.&lt;/li&gt;
          &lt;li&gt;U-Net의 경우, 이전 Patch에서 검증이 끝난 부분을 다음 Patch에서 중복하여 검증하지 않기 때문에, 연산의 낭비가 없고 이로 인해 향상된 속도를 얻을 수 있습니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;2) Context와 Localization의 늪에서 탈출
        &lt;ul&gt;
          &lt;li&gt;Segmentation Network는 클래스 분류를 위한 인접 문맥 파악(Context)과 객체의 위치 판단(Localization)을 동시에 수행해야 합니다. 각 성능은 Patch의 크기에 영향을 받는데, 이때 Trade-Off 관계를 가지게 됩니다.&lt;/li&gt;
          &lt;li&gt;Patch의 크기가 커지면 더 넓은 범위의 이미지를 한 번에 인식할 수 있어 Context 파악에는 탁월한 효과를 보이지만, 많은 Max-Pooling을 거치며 Localization 성능에는 부정적인 영향을 미치게 됩니다.&lt;/li&gt;
          &lt;li&gt;반대로 Patch의 크기가 작아지면 Localization 성능은 좋아지나, 인식하는 범위가 지나치게 협소해져 Context 파악 성능에 좋지 않은 영향을 미칩니다.&lt;/li&gt;
          &lt;li&gt;U-Net은 다층의 Layer의 Output을 동시에 검증해서 이러한 Trade-Off를 극복합니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;U-Net with EfficientNet
    &lt;ul&gt;
      &lt;li&gt;U-Net의 구조는 알파벳 U의 왼쪽 절반에 해당하는 Contracting Path와 오른쪽 절반에 해당하는 Expanding Path의 2가지 Path로 분리할 수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/unet-architecture_path.png&quot; alt=&quot;&quot; width=&quot;80%&quot; height=&quot;80%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1) Contracting Path
    &lt;ul&gt;
      &lt;li&gt;Contracting Path는 Encoder의 역할을 수행하는 부분으로 전형적인 Convolution Network로 구성됩니다.&lt;/li&gt;
      &lt;li&gt;Contracting Path는 입력을 Feature Map으로 변형해 이미지의 Context를 파악합니다.&lt;/li&gt;
      &lt;li&gt;이 경우에 Contracting Path의 앞단에 이미 잘 학습된 모델을 Backbone으로 사용해 학습 효율과 성능을 높일 수 있습니다. 주로 ResNet 등의 모델을 사용합니다.&lt;/li&gt;
      &lt;li&gt;해당 프로젝트에서는 ImageNet 데이터 세트로 학습된 &lt;strong&gt;EfficientNet&lt;/strong&gt;을 Contracting Path의 Backbone으로 사용했습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;2)Expanding Path
    &lt;ul&gt;
      &lt;li&gt;Expanding Path는 Decoder의 역할을 수행하는 부분으로, 전형적인 Upsampling + Convolution Network로 구성됩니다.&lt;/li&gt;
      &lt;li&gt;즉, Convolution 연산을 거치기 전 Contracting Path에서 줄어든 사이즈를 다시 복원하는(Upsampling) 형태입니다.&lt;/li&gt;
      &lt;li&gt;Expanding Path에서는 Contracting을 통해 얻은 Feature Map을 Upsampling하고, 각 Expanding 단계에 대응되는 Contracting 단계에서의 Feature Map과 결합해서(Skip-Connection Concatenate) 더 정확한 Localization을 수행합니다.&lt;/li&gt;
      &lt;li&gt;즉, Multi-Scale Object Segmentation을 위하여 Downsampling과 Upsampling을 순서대로 반복하는 구조입니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;u-net을-선택한-이유&quot;&gt;U-Net을 선택한 이유&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;모델 선택 과정에서 고려 대상이 되었던 모델은 Semantic Segmentation 분야에서 가장 널리 사용되고 있는 U-Net 모델과 DeepLab V3 모델입니다.&lt;/li&gt;
  &lt;li&gt;일차적으로 두 모델의 성능을 정량적으로 나타내고 싶었으나, 각 모델이 개발된 목적이 달랐고, 논문에 성능 평가를 위해 사용된 지표가 일치하지 않아 정량적인 표현이 어려웠습니다.&lt;/li&gt;
  &lt;li&gt;U-Net 모델의 경우 의학 이미지 Segmentation을 주목적으로 개발된 모델이고, 그에 따라 일반적인 논문에서 사용되는 Pascal VOC 2012, COCO 등의 지표가 아닌 EM Segmentation Challenge의 지표를 사용했기 때문입니다.&lt;/li&gt;
  &lt;li&gt;또, 만일 모델의 성능을 정량적으로 비교 가능했다고 해도, Pascal VOC 등 범용 데이터와 해당 프로젝트에서 다뤄야 하는 데이터의 특성이 아주 다르기 때문에, 해당 지표를 100% 의존해 모델을 선택하는 것은 바람직하지 않다고 생각했습니다.&lt;/li&gt;
  &lt;li&gt;따라서 비교를 위해 두 가지 모델에 대해 데이터 전처리, 하이퍼 파라미터 튜닝 등을 배제한 순수 베이스라인을 구현하였고, 프로젝트 샘플 데이터를 이용해 학습 및 성능을 평가했습니다.&lt;/li&gt;
  &lt;li&gt;베이스라인 성능 비교 결과 DeepLab v3은 mIOU 80.7, U-Net은 mIOU 92.2를 기록했습니다.&lt;/li&gt;
  &lt;li&gt;위의 성능 비교 결과를 통해 해당 프로젝트에선 U-Net을 이용한 Semantic Segmentation이 더 효과적이라 판단했고, 추후 개발 과정에서 U-Net을 사용했습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index6&quot;&gt;모델 학습(Training) 과정&lt;/h3&gt;
&lt;p&gt;일반적인 머신러닝/딥러닝 모델 학습 과정은 다음 그림과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/general_ml_train_flow.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Feature를 입력으로, 모델의 각 계층(Layer)의 파라미터와의 연산을 통해 예측값을 도출합니다. (Prediction)&lt;/li&gt;
  &lt;li&gt;모델이 예측한 값과 실제 값(Target)이 얼마나 차이가 있는지 (Loss) 계산합니다.&lt;/li&gt;
  &lt;li&gt;이 차이(Loss)를 최소화하는 방향으로 모델 각 계층의 파라미터를 조절하여 최적화하게 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;해당 프로젝트에서 사용한 모델의 학습 과정은 다음 그림과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/unet_train_flow.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Feature는 차량 이미지, Target으로는 마스크(Binary Mask Image)가 사용됩니다.
    &lt;ul&gt;
      &lt;li&gt;파손 영역별 좌표 형태(Polygon)로 주어진 입력 파일을 마스크 형식으로 가공합니다.&lt;/li&gt;
      &lt;li&gt;가공 방법은 다음과 같습니다.
        &lt;ul&gt;
          &lt;li&gt;파손 영역별로 분리된 좌표 형태를 마스크 형식으로 변환합니다. 이 과정을 통해 각 파손 영역별로 한 장의 2차원 마스크가 생성됩니다.&lt;/li&gt;
          &lt;li&gt;동일한 파손 클래스를 가지는 마스크들을 모아 한 장의 2차원 마스크로 병합합니다. (Logical OR 연산)
이 마스크는 0과 1로 이루어진 이진 마스크로, 1로 표시된 픽셀의 경우 해당 파손 클래스에 속하는 픽셀임을 뜻합니다.&lt;/li&gt;
          &lt;li&gt;위의 과정을 거쳐 하나의 파손 클래스당 한 장, 총 3장의 2차원 이진 마스크를 가지게 됩니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;주어진 차량 이미지를 입력으로, Segmentation Network 내부 파라미터와의 연산을 통해 예측값이 출력됩니다.
    &lt;ul&gt;
      &lt;li&gt;출력되는 값은 Target과 동일한 형태로 3장의 2차원 예측 마스크의 형태를 가집니다.&lt;/li&gt;
      &lt;li&gt;출력되는 예측 마스크는 이진(Binary) 마스크가 아닌, 대응되는 입력 이미지의 픽셀별로 해당 파손 클래스에 속할 확률(Probability Score)을 나타내는 마스크입니다. 0 이상 1 이하의 확률값이 저장되게 됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;각 파손 클래스마다 해당 클래스의 Target 마스크와 예측 마스크 사이의 오차를 계산합니다.
    &lt;ul&gt;
      &lt;li&gt;오차 계산을 위해 Binary Cross Entropy(BCE) 함수를 사용합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이 오차를 최소화하는 방향으로 Segmentation Network의 내부 파라미터를 조정하며 최적화를 진행합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index7&quot;&gt;모델 Inference(Prediction) 후처리&lt;/h3&gt;
&lt;p&gt;학습을 마친 모델을 이용해, 실제로 모델의 예측값을 얻는 과정을 Inference(Prediction)라고 합니다.&lt;/p&gt;

&lt;p&gt;해당 프로젝트에서 사용한 모델의 Inference 과정은 다음 그림과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/postprocess_after_inference.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;차량 이미지를 입력으로, 학습이 완료된 Segmentation Network 내부 파라미터와의 연산을 통해 모델의 예측값이 출력됩니다.
    &lt;ul&gt;
      &lt;li&gt;출력되는 예측값은 3장의 2차원 예측 마스크입니다.&lt;/li&gt;
      &lt;li&gt;예측 마스크의 각 픽셀은 대응되는 입력 이미지의 픽셀이 해당 파손 클래스에 속할 확률(Probability Score)을 저장하고 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이 예측 마스크는 Mask Policy에 의해 0과 1의 이진 마스크로 변환됩니다. 0과 1 사이의 연속적인 확률값을 속한다, 속하지 않는다는 이산적인 클래스 정보로 변환하는 과정을 거칩니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/mask_policy.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;해당 프로젝트에서 고안해 사용한 Mask Policy는 각 파손 클래스 별 특성을 반영한 규칙입니다.
    &lt;ul&gt;
      &lt;li&gt;프로젝트에서 다룬 파손의 종류는 스크래치 (Scratch), 찌그러짐 (Dent), 이격 (Spacing) 총 3가지인데, 이 파손들의 속성이 서로 다르다고 생각했습니다.&lt;/li&gt;
      &lt;li&gt;스크래치와 이격의 경우, 세밀한 영역 경계 설정이 필요하고, 찌그러짐의 경우 비교적 넓은 면적으로 발생할 가능성이 높은 파손입니다.&lt;/li&gt;
      &lt;li&gt;따라서, 스크래치와 이격의 경우 세밀한 경계 설정이 가능한 CRF 후처리 방식을, 찌그러짐은 특정 확률값에 기반하는 Thresholding 방식을 선택했습니다.&lt;/li&gt;
      &lt;li&gt;각 파손 클래스마다 서로 다른 변환 정책을 적용함으로써 보다 각 파손의 속성이 반영된 이진 마스크를 생성합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이렇게 변환된 이진 마스크를 이용해 파손 영역의 좌표를 구하고, 입력 이미지 위에 외곽선(Polyline)을 덧그려 이미지 검수 관리자가 확인하기 편리한 형태로 출력을 마칩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index8&quot;&gt;실제 데이터 검증 시 생긴 문제&lt;/h3&gt;
&lt;p&gt;학습된 모델을 사용해 업로드되는 이미지를 검증한 결과, 보완해야 할 점들을 발견했습니다.&lt;/p&gt;

&lt;p&gt;이는 크게 모델의 정확도에 대한 문제와 시간적인 제한에 대한 문제로 나눌 수 있었습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1) &lt;strong&gt;모델의 정확도에 대한 문제&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;실제 사용자 데이터를 입력으로 모델의 파손 판별 정확도를 정성적으로 검증한 결과, 실제 업무에 투입하여 사용하기에는 정확도가 떨어진다는 문제점을 파악했습니다.&lt;/li&gt;
      &lt;li&gt;이는 학습 시 이용된 데이터(Training Set)와 실제 사용되는 데이터 사이의 간극으로 인한 것으로 볼 수 있습니다. 모델의 학습을 위해 데이터를 수집하는 과정에서 “육안으로 파손 여부를 확실하게 판별할 수 있는” 차량 이미지 2,000장을 추려 사용했기 때문에, 다양한 환경에서 촬영된 이미지들의 특성이 모델에 충분히 반영되지 않았을 가능성이 높았습니다.&lt;/li&gt;
      &lt;li&gt;1-1) 앱 내에서 차량 외관 촬영 시 가이드라인이 존재하지 않아 사용자들이 사진을 촬영하는 방식이 제각각이었습니다.&lt;/li&gt;
      &lt;li&gt;멀리서 찍어 차량이 아닌 주차선이 이미지의 대부분을 차지하거나, 차량 루프를 촬영하는 과정에서 뒤편에 주차된 차량들이 빼곡히 촬영되거나, 뒤편의 건물이 촬영된 이미지들이 종종 있었습니다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/problem1-without-guideline.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1-2) 어두운 곳에서 촬영된 차량 이미지에 취약점을 보였습니다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/problem2-dark-images.png&quot; alt=&quot;&quot; width=&quot;30%&quot; height=&quot;30%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;2) &lt;strong&gt;시간적인 제한에 대한 문제&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Semantic Segmentation을 수행하기 위하여, 모델은 픽셀 단위로 해당 픽셀이 각 클래스에 속할 확률을 예측해야 합니다.&lt;/li&gt;
      &lt;li&gt;이를 위해 모델의 구조가 굉장히 깊고 복잡해지는 것은 불가피한 일이며, 방대한 연산량으로 연산 속도 저하의 위험성이 있습니다. CPU 머신 위에서 실제 테스트 시, 차량 이미지 한장 당 약 15초의 처리 시간이 소요됩니다.&lt;/li&gt;
      &lt;li&gt;이는 하루 평균 7-8만장의 이미지를 처리해야 하는 업무 상황에 적절하지 못하다고 판단했습니다.&lt;/li&gt;
      &lt;li&gt;이러한 문제점들을 해결하기 위해, 데이터 측면에서 보완할 수 있는 점과 모델 측면에서 보완할 수 있는 점으로 구분해 전체적인 틀을 수정했습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;문제점-보완&quot;&gt;문제점 보완&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;1) &lt;strong&gt;데이터 측면에서의 보완 방법&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Data Augmentation을 사용했습니다.&lt;/li&gt;
      &lt;li&gt;어두운 곳에서 촬영된 이미지에 취약점을 보이는 문제점을 해결하기 위하여, Training Set에 무작위로 사진의 밝기와 대비를 변경하는 전처리를 가했습니다. (Random Brightness &amp;amp; Contrast Transformation)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;2) &lt;strong&gt;모델 측면에서의 보완 방법&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;먼저, 사용자들이 사진을 촬영하는 방식이 제각각이라는 점을 해결하기 위해 모델의 시작 부분에 Localization Network를 추가했습니다. 즉, 이미지 전체에서 차량이 존재하는 영역만을 Crop해 이후 모델의 입력으로 사용하겠다는 전략이었습니다. Localization Network는 COCO 데이터 세트로 미리 학습된 YOLO v3 모델을 사용했습니다.&lt;/li&gt;
      &lt;li&gt;모델의 연산량으로 인한 처리 속도 저하 해결을 위해 Global Damage Classifier를 추가하는 방법을 택했습니다. 실제로 쏘카 앱을 통해 업로드되는 이미지 중 손상이 존재하는 이미지는 소수이기 때문에, 굳이 모든 이미지를 깊은 Segmentation Network에 통과시킬 필요가 없다고 생각했습니다.&lt;/li&gt;
      &lt;li&gt;Segmentation Network 바로 앞단에 이미지 단위의 파손 존재 여부를 0과 1로 예측하는 비교적 얕은 Classification Network를 추가했고, 이를 Global Damage Classifier라는 이름으로 칭하겠습니다.&lt;/li&gt;
      &lt;li&gt;Global Damage Classifier의 예측 결과가 “이 이미지 내에는 파손이 없다. (=0, False)”로 정해진 이미지에 대해서는 더 이상의 Inference를 진행하지 않는 방법을 택했습니다. 이미지 내에 파손이 있다고 판단된 이미지에 대해서만 Segmentation Network 내의 연산을 통해 파손 영역 및 클래스 예측을 수행하게 됩니다.&lt;/li&gt;
      &lt;li&gt;파손이 존재하는 이미지 입장에서 보았을 때는 통과해야 할 모델이 하나 더 늘어난 셈이니 시간이 더 오래 걸리는 게 아닐까? 하는 의문이 들 수 있지만, 사용자가 제공하는 전체 이미지의 규모와 그 중 파손이 존재하는 이미지의 비중을 고려했을 때 전체 연산에 소요되는 시간을 눈에 띄게 줄일 수 있을 것으로 기대했습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위의 수정 사항이 반영된 모델의 전체 구조 및 Inference 흐름도는 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;모델의 전체 구조&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/model_architecture.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;전체 Inference 흐름도&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/inference_flow.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index9&quot;&gt;성능 평가&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;모델의 처리 속도
    &lt;ul&gt;
      &lt;li&gt;이렇게 완성된 모델은 GPU 머신 위에서 초당 약 5장의 이미지를, CPU 머신 위에서 초당 약 0.7장의 이미지를 처리할 수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;모델의 정확도
    &lt;ul&gt;
      &lt;li&gt;성능 평가를 위해 분리해둔 200장의 Test Set 대상으로 계산된 결과입니다.&lt;/li&gt;
      &lt;li&gt;Global Damage Classifier의 분류 성능: 96%의 Accuracy, 96%의 F1-score를 기록했습니다.&lt;/li&gt;
      &lt;li&gt;Segmentation Network의 성능: Threshold 0.5 기준 96.7의 IoU를 기록했습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IoU란?
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/iou.png&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; style=&quot;display: block; margin: 1 auto&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;Intersection on Union의 약자로, Segmentation Task 모델의 성능을 평가하는 지표입니다.&lt;/li&gt;
      &lt;li&gt;IoU는 교집합 영역 넓이 / 합집합 영역 넓이로 계산되며, 이 때 Threshold 값은 한 픽셀이 특정 클래스에 속할 확률값이 몇 이상일 때 클래스에 속한다고 판단을 내릴지에 대한 경곗값입니다. 보편적으로는 Threshold 0.5 값을 기준으로 사용하나 이는 데이터, 모델의 특성 또는 달성해야 하는 목표에 따라 개발자가 조절 가능합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index10&quot;&gt;실제 데이터에 적용 예시&lt;/h3&gt;
&lt;p&gt;다음 예시 이미지들은 실제 앱을 통해 업로드된 차량 이미지들을 입력으로 한 모델의 Inference 결과입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/result.png&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래 이미지는 해당 모델을 통해 차량 파손 검수 결과를 제공하고 있는 실제 운영 페이지의 일부입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/car-damage-segmentation-model/admin.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;display: block; margin: 0 auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같이 해당 모델의 검수 결과를 직접 운영 페이지에 녹여냄으로써, 업로드되는 차량 이미지 데이터를 차량 유지, 보수 업무에 적극적으로 활용하게 되었고, 차량 이미지 검수에 투입되었던 인력과 시간비용을 절감할 수 있게 되었습니다.&lt;/p&gt;

&lt;p&gt;차량 단위로 파손에 대한 히스토리를 매 예약건마다 시간 순으로 관리하기 때문에, 추후 파손의 책임자를 추적해야 하는 상황이 발생했을 때에도 파손 발생 시점을 바로 추론하는 것이 가능합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;index11&quot;&gt;추후 발전 방향&lt;/h3&gt;
&lt;p&gt;실제 차량 파손 검수를 진행하는 운영 프로세스 내에서 모델의 검수 결과와 검수 인력의 판단 결과가 다른 경우, 해당 피드백을 모델의 2차 학습에 반영시키는 것을 계획하고 있습니다.&lt;/p&gt;

&lt;p&gt;이는 정량적인 모델의 성능 향상 뿐만 아니라, 실제 운영 시 의사결정 기준 합의와도 상당 부분 맞물려 있는 피드백으로, 더 ‘정확한’ 모델 뿐만 아닌 더 ‘사람과 비슷한 의사 결정을 내리는’ 모델로의 개선이 이뤄질 수 있을 것으로 기대하고 있습니다.
​
​​
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;차량 파손 탐지 모델 Serving과 관련 글이 추후 업로드될 예정입니다!&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;Reference&quot;&gt;Reference&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;U-Net
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/1505.04597.pdf&quot;&gt;Ronneberger et al. U-net: Convolutional Networks for Biomedical Image Segmentation, 2015.&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DeepLab v3
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/1706.05587.pdf&quot;&gt;Rethinking atrous convolution for semantic image segmentation, 2017.&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;YOLO v3
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/1804.02767.pdf&quot;&gt;Redmon, Joseph, and Ali Farhadi. YOLOv3: An incremental improvement. 2018.&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Instance Segmentation
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/review-deepmask-instance-segmentation-30327a072339&quot;&gt;Review: DeepMask (Instance Segmentation)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>serena</name></author><category term="data" /><category term="data" /><category term="deeplearning" /><summary type="html">쏘카에서 2019년 하반기에 딥러닝 기반의 차량 파손 탐지 모델을 개발했습니다. 이 포스트를 통해 왜 차량 파손 탐지 모델을 만들게 되었는지, 어떤 고민들을 거쳐 요구사항을 설정하였는지, 어떤 기술들이 사용되었는지 등 프로젝트의 전반적인 내용을 소개하는 글입니다.</summary></entry><entry><title type="html">O’reilly Strata Data Conference New York 2019 후기</title><link href="http://localhost:4000/data/2020/01/13/oreilly-strata-newyork-2019-review.html" rel="alternate" type="text/html" title="O'reilly Strata Data Conference New York 2019 후기" /><published>2020-01-13T00:00:00+09:00</published><updated>2020-01-13T00:00:00+09:00</updated><id>http://localhost:4000/data/2020/01/13/oreilly-strata-newyork-2019-review</id><content type="html" xml:base="http://localhost:4000/data/2020/01/13/oreilly-strata-newyork-2019-review.html">&lt;p&gt;O’Reilly Strata Data Conference New York 2019 다녀온 후 작성한 후기입니다. 아래 내용을 다룹니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;스트라타 데이터 컨퍼런스 소개&lt;/li&gt;
  &lt;li&gt;유익한 세션 소개&lt;/li&gt;
  &lt;li&gt;참고 자료&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;사내 전파용으로 만든 행사 후기 슬라이드 자료를 &lt;a href=&quot;https://speakerdeck.com/socar/oreilly-strata-data-conference-new-york-2019-hugi&quot;&gt;SOCAR Speakerdeck&lt;/a&gt;에 업로드했습니다! 발표 자료엔 다음 내용이 있습니다. 관심있으신 분은 발표 자료를 참고하시면 좋을 것 같습니다 :)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3개의 테마, 6개의 발표 정리
    &lt;ul&gt;
      &lt;li&gt;Optimization&lt;/li&gt;
      &lt;li&gt;Uber&lt;/li&gt;
      &lt;li&gt;Explainable AI&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;oreilly-strata-conference-소개&quot;&gt;O’Reilly Strata Conference 소개&lt;/h3&gt;
&lt;p&gt;O’reilly는 개발 관련된 책을 많이 만들고 있는 출판사로, 아마 개발 관련 책을 보셨다면 O’Reilly 마크를 보셨을 겁니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/1.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;출판사지만 동시에 컨퍼런스도 다양하게 열고 있습니다. 매년 다양한 장소에서 여러 테마로 컨퍼런스가 열리고 있습니다.&lt;/p&gt;

&lt;p&gt;2019년엔 Software Architecture, TensorFlow, AI, Data 등 다양하게 열렸습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/2.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;저희가 이번에 참여한 컨퍼런스는 Data Conference로 데이터에 관한 포괄적인 세션들이 많았습니다.&lt;/p&gt;

&lt;p&gt;이번 New York 행사장은 한국의 코엑스와 비슷한 장소였습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/4.png&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;행사장 입장시 안내 데스크에 사람이 있는 한국과 달리, 신청자가 직접 기기를 통해 이름표를 직접 인쇄합니다. 등록한 메일로 QR Code가 전달되는데, 기기에서 QR Code를 입력하면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/3.png&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;행사장엔 세션 장소와 기업 부스로 나뉘어져 있었습니다.&lt;/p&gt;

&lt;p&gt;Anaconda 같은 기업 부스도 있었고, Google Cloud Platform 등이 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/5.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;O’reilly 부스에선 컨퍼런스 참여자 전원에게 원하는 책 1권을 주고 있었습니다. Stream Processing with Apache Spark를 받았습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/6.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;신기한-광경&quot;&gt;신기한 광경&lt;/h3&gt;
&lt;p&gt;1) DJing
&lt;img src=&quot;/img/oreilly-strata-2019-review/7.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;행사장에 음악이 계속 나오고 있는데, DJ가 계셨습니다.&lt;/p&gt;

&lt;p&gt;2) 프로필 사진 촬영
&lt;img src=&quot;/img/oreilly-strata-2019-review/8.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;프로필 사진 찍어주는 공간도 있었습니다. 사람들이 줄서서 자신의 프로필 사진을 찍고 있었습니다.&lt;/p&gt;

&lt;p&gt;3) 세션 종료 후 파티
&lt;img src=&quot;/img/oreilly-strata-2019-review/9.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;세션이 끝난 후 기업 부스에서 파티 음식을 제공했습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;간단한 먹거리, 맥주, 아이스크림 등&lt;/li&gt;
  &lt;li&gt;개발자 행사에 곁들여진 파티의 모습을 볼 수 있었습니다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이런 부분을 통해 행사를 주최한 오라일리가 행사에 얼마나 신경쓰는지를 알 수 있었습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;session-소개&quot;&gt;Session 소개&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/10.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다양한 발표 중 저희가 들은 세션 중 블로그 글에 정리한 것은 총 4개입니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;how-machine-learning-meets-optimization&quot;&gt;How machine Learning meets optimization&lt;/h3&gt;

&lt;p&gt;최적화(Optimization)란 단어는 데이터 사이언스를 공부하다 보면 자주 접할 수 있는 단어입니다. 최적화는 다양한 방식으로 진행할 수 있는데, 산업 공학에선 Linear Programming(LP), Constraint Programming 등으로 문제를 풀 수 있습니다.&lt;/p&gt;

&lt;p&gt;발표자분은 Optimization과 머신러닝이 함께 필요한 문제의 예시로 Scheduling Problem과 Routing Problem을 예시로 들었습니다. 이 문제들은 저희가 속한 모빌리티 산업에서 많이 풀고있는 문제로, 제한된 리소스로 최대(혹은 최소)의 효과를 낼 수 있는 문제입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/11.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;최적화와 머신러닝을 활용하는 방법은 다음과 같습니다. 예측 모델링 후, 그 값을 토대로 최적화를 돌리고 시나리오를 선택합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/12.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;최적화와 머신러닝 모두 Input을 넣으면 Output이 나오는 점은 동일하나, 최적화는 입력 x에 대해 제약 조건과 objective value가 있어 optimal solution을 찾고 머신러닝은 레이블된 데이터가 존재하는 상태에서 Error를 최소화합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;ml-is-not-enough-decision-automation-in-the-real-world&quot;&gt;ML is not enough: Decision automation in the real world&lt;/h3&gt;

&lt;p&gt;이 세션은 위에서 말씀드린 “How machine Learning meets optimization” 같이 원론적인 내용을 다루기보다, 머신러닝과 최적화를 같이 사용한 실용적인 후기에 대한 발표입니다.&lt;/p&gt;

&lt;p&gt;대부분 현실의 의사 결정은 머신러닝 모델의 예측값만으론 충분하지 않고, 사람의 판단은 Decision Making과 Machine Prediction으로 이루어집니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/13.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Decision Making은 여러 대안 중 가장 Best 행동을 찾는 것이고, Machine Prediction은 미래의 Unknown event를 예측하는 것입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/14.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 두가지를 조합하기 위해 머신러닝의 예측값을 Decision Engine의 Input으로 넣고 결과를 받도록 설계합니다.&lt;/p&gt;

&lt;p&gt;Decision Engine의 제약 조건(constraint)으로 비즈니스 로직상 중요하게 여기는 것들을 넣을 수 있습니다. 예를 들어 특정 제품이 프로모션하고 있다면, 그 부분을 우선적으로 추천해줄 수 있습니다. 그 외에도 아래 사진처럼 새로운 제품에 대한 비즈니스 로직, 재고에 대한 로직 등을 추가할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/15.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Decision Engine은 Mixed Integer Programming을 사용해 예측 값과 비즈니스 룰을 제약 조건으로 삼고 목적 함수를 최대화하는 값이 나오게 됩니다.&lt;/p&gt;

&lt;p&gt;다른 예시로 Supply Chain(공급 관리) 최적화에 대한 내용을 들었습니다.&lt;/p&gt;

&lt;p&gt;준비하고 있어야 하는 안전한 재고량보다 수요 예측이 높게 될 경우와 낮게 될 경우 생길 비용이 비대칭적이다라는 점을 말하며, 수요 예측 결과에 따른 비용을 다르게 정의했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/16.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/17.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;두번째 예시에선 모델의 예측 값을 Deterministic한(한 숫자로 나오는) 수요를 uncertainty range로 대체하는 내용이 나왔습니다.&lt;/p&gt;

&lt;p&gt;Uncertainty Range를 표현하기 위해 Two quantile regression, 분포를 근사하기 위한 앙상블 활용, 모델의 Output을 분포로 표현(Bayesian structural time series)을 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;Uncertainty Range를 구한 후 Robust Optimization를 사용해 최악의 상황을 피하는 방식으로 최적화합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/18.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;a-practical-guide-to-algorithmic-bias-and-explainability-in-machine-learning&quot;&gt;A Practical guide to algorithmic bias and explainability in machine learning&lt;/h3&gt;
&lt;p&gt;이 세션은 MLOps 관련 Github Repository 중 유명한 &lt;a href=&quot;https://github.com/EthicalML/awesome-production-machine-learning&quot;&gt;Awesome production machine learning&lt;/a&gt; 소속이신 분이 발표했습니다.&lt;/p&gt;

&lt;p&gt;머신러닝 모델은 잘못된 학습 데이터로 인해 편향되기 쉽습니다. 이에 최근 트렌드로 유럽에선 AI와 관련한 윤리가 법제화 되고 있습니다. 대표적으로 유럽위원회는 AI의 자동화된 의사결정에 대해 설명받을 수 있는 개인의 권리를 명시합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/19.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/20.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;발표자가 속한 Ethical AI라는 조직에선 머신러닝 모델 개발의 각 단계에서 편향을 줄이고, 모델을 설명하기 위한 오픈소스를 개발하고 있습니다.&lt;/p&gt;

&lt;p&gt;그 중 대표적으로 데이터 분석 단계에선 eXplainable AI(XAI)란 라이브러리를 소개하고, 모델 개발 및 평가 단계에선 &lt;a href=&quot;https://github.com/SeldonIO/alibi&quot;&gt;ALIBI&lt;/a&gt;란 라이브러리에 대해 소개했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/21.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/22.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/23.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ALIBI 라이브러리에 구현되어 있는 대표적인 Explainer는 Anchors 가 있습니다.&lt;/p&gt;

&lt;p&gt;Anchors는 내부 알고리즘으로 모델을 설명하는 것이 아니라 입력값의 조합에 따른 출력값을 가지고 모델을 설명합니다. 이러한 특성 때문에 Tabular 데이터부터 Text, Image와 같은 비정형 데이터까지 모두 적용할 수 있다는 장점이 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/24.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anchors 는 특정 피쳐를 고정한 후, 다른 피쳐에 변화를 주었을 때 예측값이 변하는지 변하지 않는지를 관찰하는 방식으로 Anchors 를 알아냅니다.&lt;/p&gt;

&lt;p&gt;Anchors를 찾아낼 때는 Brute-Force 방식이 아닌 Beam search 와 MAB 방식으로 효율적으로 찾아냅니다. 아래 예시는 beagle의 Anchor 이미지를 고정한 후 다른 영역을 변화시키더라도 예측값은 항상 일정하다는 것을 보여줍니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://homes.cs.washington.edu/~marcotcr/aaai18.pdf&quot;&gt;논문 보러가기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/25.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;unified-tooling-for-machine-learning-interpretability&quot;&gt;Unified tooling for machine learning interpretability&lt;/h3&gt;
&lt;p&gt;이 세션은 Microsoft에서 개발 중인 interpretML 오픈소스에 대한 세션입니다. &lt;a href=&quot;https://github.com/interpretml/interpret&quot;&gt;공식 Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;interpretML의 첫번째 특징은 모델의 정확도와 설명력을 모두 갖추려 했다는 점입니다.&lt;/p&gt;

&lt;p&gt;일반적으로 머신러닝 모델의 정확도가 높아질수록 설명하기는 어렵다는 문제가 있습니다. Microsoft 팀은 전통적인 GAM 모델에 Boosting 기법을 결합한 Explainable Boosting Machine (EBM) 이라는 알고리즘을 제안했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/26.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;두번째 특징은 모델을 설명하는 기능들을 갖추고 있다는 점입니다.&lt;/p&gt;

&lt;p&gt;특정 피쳐가 모델 전체에 미치는 영향에 관점(Global)과 특정 instance에 대해 왜 그렇게 예측했는지에 대한 설명(Local)으로 두 가지 측면에서 모델을 설명합니다. 그 이후엔 라이브 코딩으로 라이브러리를 활용하는 방법에 대해 알려줬습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/27.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/oreilly-strata-2019-review/28.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;쏘카 데이터그룹의 타다데이터팀 카일과 윤이 다녀와서 사내 전파용으로 만든 발표 자료 : &lt;a href=&quot;https://speakerdeck.com/socar/oreilly-strata-data-conference-new-york-2019-hugi&quot;&gt;SOCAR Speakerdeck&lt;/a&gt;에 업로드했습니다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;O’reilly Strata Data Conference 영상을 다시 보는 방법
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://learning.oreilly.com/&quot;&gt;Oreailly Learing&lt;/a&gt;에 가입 후 시청 가능합니다. 첫 가입시 1달 무료고, 그 이후엔 구독 비용이 존재합니다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;O’reilly Starata Data Conference New York 발표 자료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://conferences.oreilly.com/strata/strata-ny/public/schedule/proceedings&quot;&gt;Oreilly Conference 발표 자료&lt;/a&gt;에 발표 자료가 업로드되어 있습니다. 모든 발표 자료가 업로드되진 않았지만, 관심있으신 부분에 대한 자료를 보시면 좋을 것 같습니다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>kyle</name></author><category term="data" /><category term="machine-learning" /><summary type="html">O’Reilly Strata Data Conference New York 2019 다녀온 후 작성한 후기입니다. 아래 내용을 다룹니다.</summary></entry></feed>